<?xml version="1.0" encoding="UTF-8" ?>
<wsdl:definitions
        xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        name="EasyIPLibrary"
        xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
        xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
        xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
        targetNamespace="http://tempuri.org/"
        xmlns:tns="http://tempuri.org/"
>
    <xs:annotation>
        <xs:documentation>
            Easy-IP API Documentation
            -------------------------

            The EasyIPLibrary contains services and methods that allow you to access the entire functionality of the Easy-IP server.

            You can access the API in two different ways:

            1) A SOAP API - To connect to the API you need to enable the SOAP server via the server settings. A simple example of using the SOAP API in Delphi is included in the Easy-IP server installation.
            2) RemObjects DataAbstract components. This method uses a binary protocol and is by far the most efficient method. It does however require the purchase of third party software. Visit www.remobjects.com for more information.

            If you require additional information, please contact sales@easy-ip.net.
        </xs:documentation>
    </xs:annotation>
    <wsdl:types>
        <xs:schema targetNamespace="http://tempuri.org/" elementFormDefault="qualified">
            <xs:simpleType name="TLogLevel">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="llNone" />
                    <xs:enumeration value="llError" />
                    <xs:enumeration value="llWarning" />
                    <xs:enumeration value="llInfo" />
                    <xs:enumeration value="llDebug" />
                    <xs:enumeration value="llDebug2" />
                    <xs:enumeration value="llDebug3" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TUserType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="utUnknown" />
                    <xs:enumeration value="utGroup" />
                    <xs:enumeration value="utUser" />
                    <xs:enumeration value="utManager" />
                    <xs:enumeration value="utAdministrator" />
                    <xs:enumeration value="utSuperAdministrator" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TRefreshAction">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="raAll" />
                    <xs:enumeration value="raChildren" />
                    <xs:enumeration value="raCurrentAutonomousNetwork" />
                    <xs:enumeration value="raCurrentItem" />
                    <xs:enumeration value="raCurrentItemParent" />
                    <xs:enumeration value="raCurrentItemIPAddresses" />
                    <xs:enumeration value="raExpandItem" />
                    <xs:enumeration value="raFocusParent" />
                    <xs:enumeration value="raFocusNewSubnet" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TIPVers">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ivGroup" />
                    <xs:enumeration value="ivIPv4" />
                    <xs:enumeration value="ivIPv6" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TUserFunction">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ufUnknown" />
                    <xs:enumeration value="ufAJAXWebInterface" />
                    <xs:enumeration value="ufWindowsClient" />
                    <xs:enumeration value="ufNewGroup" />
                    <xs:enumeration value="ufRenameGroup" />
                    <xs:enumeration value="ufNewSubnet" />
                    <xs:enumeration value="ufAddChildSubnets" />
                    <xs:enumeration value="ufDeleteChildSubnets" />
                    <xs:enumeration value="ufDeleteObject" />
                    <xs:enumeration value="ufRemoveParentSubnet" />
                    <xs:enumeration value="ufMergeChildSubnets" />
                    <xs:enumeration value="ufAddIPAddresses" />
                    <xs:enumeration value="ufDeleteIPAddresses" />
                    <xs:enumeration value="ufHostDiscovery" />
                    <xs:enumeration value="ufReports" />
                    <xs:enumeration value="ufImport" />
                    <xs:enumeration value="ufExport" />
                    <xs:enumeration value="ufFieldEditorLayoutProperties" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TUserFieldLookupType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltNone" />
                    <xs:enumeration value="ltEditable" />
                    <xs:enumeration value="ltFixed" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TEIPDataType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="edatUnknown" />
                    <xs:enumeration value="edatString" />
                    <xs:enumeration value="edatDateTime" />
                    <xs:enumeration value="edatFloat" />
                    <xs:enumeration value="edatCurrency" />
                    <xs:enumeration value="edatAutoInc" />
                    <xs:enumeration value="edatInteger" />
                    <xs:enumeration value="edatLargeInt" />
                    <xs:enumeration value="edatBoolean" />
                    <xs:enumeration value="edatMemo" />
                    <xs:enumeration value="edatBlob" />
                    <xs:enumeration value="edatWideString" />
                    <xs:enumeration value="edatWideMemo" />
                    <xs:enumeration value="edatLargeAutoInc" />
                    <xs:enumeration value="edatByte" />
                    <xs:enumeration value="edatShortInt" />
                    <xs:enumeration value="edatWord" />
                    <xs:enumeration value="edatSmallInt" />
                    <xs:enumeration value="edatCardinal" />
                    <xs:enumeration value="edatLargeUInt" />
                    <xs:enumeration value="edatGuid" />
                    <xs:enumeration value="edatXml" />
                    <xs:enumeration value="edatDecimal" />
                    <xs:enumeration value="edatSingleFloat" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TFieldUpdateAction">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="fuaAdd" />
                    <xs:enumeration value="fuaEdit" />
                    <xs:enumeration value="fuaDelete" />
                    <xs:enumeration value="fuaCreateIndex" />
                    <xs:enumeration value="fuaRemoveIndex" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TFieldUpdateStatus">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="fusPending" />
                    <xs:enumeration value="fusComplete" />
                    <xs:enumeration value="fusFailed" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TExceptionServer">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="esNone" />
                    <xs:enumeration value="esSubnetOverlapsExistingSubnets" />
                    <xs:enumeration value="esSubnetNotInUpstreamRange" />
                    <xs:enumeration value="esSubnetNotInDownstreamRange" />
                    <xs:enumeration value="esMandatoryFieldHasNoValue" />
                    <xs:enumeration value="esClientServerVersionMismatch" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TExceptionClient">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ecNone" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TUserMessageType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="umtInformation" />
                    <xs:enumeration value="umtWarning" />
                    <xs:enumeration value="umtError" />
                    <xs:enumeration value="umtExternal" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TServerType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="stFirebirdEmbedded" />
                    <xs:enumeration value="stFirebirdServer" />
                    <xs:enumeration value="stMSSQL" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TLogType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltAdministrator" />
                    <xs:enumeration value="ltClient" />
                    <xs:enumeration value="ltServer" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TScheduleEventFrequencyType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="sfOnce" />
                    <xs:enumeration value="sfHourly" />
                    <xs:enumeration value="sfDaily" />
                    <xs:enumeration value="sfWeekly" />
                    <xs:enumeration value="sfMonthly" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TScheduledEventType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="seBackup" />
                    <xs:enumeration value="seHostDiscovery" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TTemplateParamType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tpDatabase" />
                    <xs:enumeration value="tpUserInputText" />
                    <xs:enumeration value="tpUserInputPassword" />
                    <xs:enumeration value="tpUserInputv4Subnet" />
                    <xs:enumeration value="tpUserInputv4IPAddress" />
                    <xs:enumeration value="tpUserInputv6Subnet" />
                    <xs:enumeration value="tpUserInputv6IPAddress" />
                    <xs:enumeration value="tpDatePart" />
                    <xs:enumeration value="tpGUID" />
                    <xs:enumeration value="tpInteger" />
                    <xs:enumeration value="tpUserInputTextMuliLine" />
                    <xs:enumeration value="tpScriptVariable" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TTemplateType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ttSubnet" />
                    <xs:enumeration value="ttIPAddresses" />
                    <xs:enumeration value="ttIPv4Subnet" />
                    <xs:enumeration value="ttIPv6Subnet" />
                    <xs:enumeration value="ttIPv4Addresses" />
                    <xs:enumeration value="ttIPv6Addresses" />
                    <xs:enumeration value="ttNone" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TEventType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="etStartASyncOperation" />
                    <xs:enumeration value="etFinishASyncOperation" />
                    <xs:enumeration value="etStatus" />
                    <xs:enumeration value="etProgress" />
                    <xs:enumeration value="etProgressStatus" />
                    <xs:enumeration value="etDisconnect" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TSubnetItemType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="sitUnknown" />
                    <xs:enumeration value="sitRoot" />
                    <xs:enumeration value="sitGroup" />
                    <xs:enumeration value="sitSubnet" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TSecondaryItemType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="setNone" />
                    <xs:enumeration value="setLimitedGroup" />
                    <xs:enumeration value="setMissingChildSubnets" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TLicenceRestriction">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="lrReports" />
                    <xs:enumeration value="lrImport" />
                    <xs:enumeration value="lrExport" />
                    <xs:enumeration value="lrSubnetDiscovery" />
                    <xs:enumeration value="lrHostDiscovery" />
                    <xs:enumeration value="lrQueryBuilder" />
                    <xs:enumeration value="lrWebServer" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TCalculatedDateType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="cdNone" />
                    <xs:enumeration value="cdCurrentDateTime" />
                    <xs:enumeration value="cdMinutesBefore" />
                    <xs:enumeration value="cdMinutesAfter" />
                    <xs:enumeration value="cdHoursBefore" />
                    <xs:enumeration value="cdHoursAfter" />
                    <xs:enumeration value="cdDaysBefore" />
                    <xs:enumeration value="cdDaysAfter" />
                    <xs:enumeration value="cdWeeksBefore" />
                    <xs:enumeration value="cdWeeksAfter" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TParamStringType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="pstNormal" />
                    <xs:enumeration value="pstTreePath" />
                    <xs:enumeration value="pstAutonomousNetworkID" />
                    <xs:enumeration value="pstSubnetID" />
                    <xs:enumeration value="pstUserID" />
                    <xs:enumeration value="pstUserName" />
                    <xs:enumeration value="pstIPv4Address" />
                    <xs:enumeration value="pstIPv6Address" />
                    <xs:enumeration value="pstIPAddress" />
                    <xs:enumeration value="pstSubnet" />
                    <xs:enumeration value="pstLowAddress" />
                    <xs:enumeration value="pstHighAddress" />
                    <xs:enumeration value="pstBroadcastAddress" />
                    <xs:enumeration value="pstIPVersion" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TReportViewType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="rvtFastReport" />
                    <xs:enumeration value="rvtSimpleReport" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TEncryptionType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="enDES" />
                    <xs:enumeration value="enBlowFish" />
                    <xs:enumeration value="enTwoFish" />
                    <xs:enumeration value="enRijndael" />
                    <xs:enumeration value="enAES" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TEmailQueueItemStatus">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="eqsQueued" />
                    <xs:enumeration value="eqsCompleted" />
                    <xs:enumeration value="eqsFailed" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TClientType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ctWindowsClient" />
                    <xs:enumeration value="ctWindowsAdmin" />
                    <xs:enumeration value="ctWebClient" />
                    <xs:enumeration value="ctConsole" />
                    <xs:enumeration value="ctDiscoveryBot" />
                    <xs:enumeration value="ctScheduler" />
                    <xs:enumeration value="ctCustomClient" />
                    <xs:enumeration value="ctUnknown" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TSearchOption">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="soContains" />
                    <xs:enumeration value="soStartsWith" />
                    <xs:enumeration value="soExactMatch" />
                    <xs:enumeration value="soRegularExpression" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TSearchType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="stBasic" />
                    <xs:enumeration value="stFTS" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TFieldIndexType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="fitNone" />
                    <xs:enumeration value="fitBoth" />
                    <xs:enumeration value="fitFTS" />
                    <xs:enumeration value="fitBasic" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TQueryExportType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="qetXML" />
                    <xs:enumeration value="qetCSV" />
                    <xs:enumeration value="qetHTML" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TDiscoveryStatus">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="dbsIdle" />
                    <xs:enumeration value="dbsWorking" />
                    <xs:enumeration value="dbsCancelling" />
                    <xs:enumeration value="dbsFailed" />
                    <xs:enumeration value="dbsCancelled" />
                    <xs:enumeration value="dbsComplete" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TChangeLogType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ctRecordUpdatedByUser" />
                    <xs:enumeration value="ctRecordUpdatedByScript" />
                    <xs:enumeration value="ctRecordUpdatedByDiscovery" />
                    <xs:enumeration value="ctAddAutonomousNetwork" />
                    <xs:enumeration value="ctEditAutonomousNetwork" />
                    <xs:enumeration value="ctDeleteAutonomousNetwork" />
                    <xs:enumeration value="ctAddGroup" />
                    <xs:enumeration value="ctEditGroup" />
                    <xs:enumeration value="ctAddSubnet" />
                    <xs:enumeration value="ctAddChildSubnets" />
                    <xs:enumeration value="ctDeleteItem" />
                    <xs:enumeration value="ctMoveItem" />
                    <xs:enumeration value="ctDeleteChildren" />
                    <xs:enumeration value="ctAddIPAddresses" />
                    <xs:enumeration value="ctDeleteIPAddresses" />
                    <xs:enumeration value="ctMergeChildSubnets" />
                    <xs:enumeration value="ctRemoveParentSubnet" />
                    <xs:enumeration value="ctImportData" />
                    <xs:enumeration value="ctAddIPAddress" />
                    <xs:enumeration value="ctAddChildSubnet" />
                    <xs:enumeration value="ctDeleteIPAddress" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TClientUpgradeType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="cuOnlyClientWithSameVersionCanConnectWithUpgradeOption" />
                    <xs:enumeration value="cuEarlierClientsCanConnectWithUpgradeOption" />
                    <xs:enumeration value="cuEarlierClientsCanConnectNoUpgradeOption" />
                    <xs:enumeration value="cuOnlyMatchingClientsCanConnect" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TSOAPMode">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="smDocumentLiteral" />
                    <xs:enumeration value="smRPCEncoding" />
                    <xs:enumeration value="smRPCLiteral" />
                    <xs:enumeration value="smUnknown" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="TTemplateScriptType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tsNone" />
                    <xs:enumeration value="tsValidation" />
                    <xs:enumeration value="tsValues" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="SimpleDataType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="String" />
                    <xs:enumeration value="Integer" />
                    <xs:enumeration value="Double" />
                    <xs:enumeration value="DateTime" />
                    <xs:enumeration value="Int64" />
                    <xs:enumeration value="Currency" />
                    <xs:enumeration value="Guid" />
                    <xs:enumeration value="Binary" />
                    <xs:enumeration value="Boolean" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="SimpleDataMode">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="Insert" />
                    <xs:enumeration value="Delete" />
                    <xs:enumeration value="Update" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="ColumnSortDirection">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="Ascending" />
                    <xs:enumeration value="Descending" />
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="TVirtualFile">
                <xs:sequence>
                    <xs:element name="Id" type="xs:long">
                    </xs:element>
                    <xs:element name="DirectoryId" type="xs:long">
                    </xs:element>
                    <xs:element name="Directory" type="xs:string">
                    </xs:element>
                    <xs:element name="Filename" type="xs:string">
                    </xs:element>
                    <xs:element name="FileType" type="xs:string">
                    </xs:element>
                    <xs:element name="FilePath" type="xs:string">
                    </xs:element>
                    <xs:element name="FileSize" type="xs:int">
                    </xs:element>
                    <xs:element name="FileData" type="xs:base64Binary">
                    </xs:element>
                    <xs:element name="FileDataLinkId" type="xs:long">
                    </xs:element>
                    <xs:element name="ReadOnly" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Created" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="Modified" type="xs:dateTime">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TVirtualDirectory">
                <xs:sequence>
                    <xs:element name="Id" type="xs:long">
                    </xs:element>
                    <xs:element name="ParentId" type="xs:long">
                    </xs:element>
                    <xs:element name="Directory" type="xs:string">
                    </xs:element>
                    <xs:element name="ChildCount" type="xs:int">
                    </xs:element>
                    <xs:element name="SystemDirectory" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Created" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="Modified" type="xs:dateTime">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSubnet">
                <xs:sequence>
                    <xs:element name="AutonomousNetworkId" type="xs:long">
                    </xs:element>
                    <xs:element name="SubnetId" type="xs:long">
                    </xs:element>
                    <xs:element name="Subnet" type="xs:string">
                    </xs:element>
                    <xs:element name="CidrMask" type="xs:int">
                    </xs:element>
                    <xs:element name="Comment" type="xs:string">
                    </xs:element>
                    <xs:element name="AutonomousNetworkName" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserTable">
                <xs:sequence>
                    <xs:element name="TableId" type="xs:long">
                    </xs:element>
                    <xs:element name="ParentTableId" type="xs:long">
                    </xs:element>
                    <xs:element name="TableName" type="xs:string">
                    </xs:element>
                    <xs:element name="LogicalTableName" type="xs:string">
                    </xs:element>
                    <xs:element name="PrimaryKeyName" type="xs:string">
                    </xs:element>
                    <xs:element name="HiddenFromUser" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ExtendedAttributes" type="tns:TUserTableExtendedAttributes">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserPrivilegeRight">
                <xs:sequence>
                    <xs:element name="Id" type="xs:long">
                    </xs:element>
                    <xs:element name="UserPrivsId" type="xs:long">
                    </xs:element>
                    <xs:element name="TableId" type="xs:long">
                    </xs:element>
                    <xs:element name="TableName" type="xs:string">
                    </xs:element>
                    <xs:element name="CanSelect" type="xs:boolean">
                    </xs:element>
                    <xs:element name="CanInsert" type="xs:boolean">
                    </xs:element>
                    <xs:element name="CanUpdate" type="xs:boolean">
                    </xs:element>
                    <xs:element name="CanDelete" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserPrivilege">
                <xs:sequence>
                    <xs:element name="Id" type="xs:long">
                    </xs:element>
                    <xs:element name="UserId" type="xs:long">
                    </xs:element>
                    <xs:element name="Root" type="xs:boolean">
                    </xs:element>
                    <xs:element name="AutonomousNetworkId" type="xs:long">
                    </xs:element>
                    <xs:element name="SubnetId" type="xs:long">
                    </xs:element>
                    <xs:element name="SubnetPath" type="xs:string">
                    </xs:element>
                    <xs:element name="UserPrivilegeRights" type="tns:TUserPrivilegeRights">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSystemSettings">
                <xs:sequence>
                    <xs:element name="MaxSubnets" type="xs:long">
                    </xs:element>
                    <xs:element name="MaxIPAddresses" type="xs:long">
                    </xs:element>
                    <xs:element name="ResellerName" type="xs:string">
                    </xs:element>
                    <xs:element name="ResellerSalesEmail" type="xs:string">
                    </xs:element>
                    <xs:element name="ResellerSupportEmail" type="xs:string">
                    </xs:element>
                    <xs:element name="ResellerWeb" type="xs:string">
                    </xs:element>
                    <xs:element name="ResellerBugWeb" type="xs:string">
                    </xs:element>
                    <xs:element name="ResellerPhone" type="xs:string">
                    </xs:element>
                    <xs:element name="ResellerAddress" type="xs:string">
                    </xs:element>
                    <xs:element name="CacheVirtualFiles" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEditResult">
                <xs:sequence>
                    <xs:element name="Cancelled" type="xs:boolean">
                    </xs:element>
                    <xs:element name="AutonomousNetworkId" type="xs:long">
                    </xs:element>
                    <xs:element name="TotalSubnetCount" type="xs:long">
                    </xs:element>
                    <xs:element name="TotalIPAddressesCount" type="xs:long">
                    </xs:element>
                    <xs:element name="AddedSubnetCount" type="xs:long">
                    </xs:element>
                    <xs:element name="AddedIPAddressCount" type="xs:long">
                    </xs:element>
                    <xs:element name="AddedIPAddressList" type="tns:TStringArray">
                    </xs:element>
                    <xs:element name="DeletedSubnetCount" type="xs:long">
                    </xs:element>
                    <xs:element name="DeletedIPAddressCount" type="xs:long">
                    </xs:element>
                    <xs:element name="UndoDescription" type="xs:string">
                    </xs:element>
                    <xs:element name="NoMoreUndos" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Error" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ErrorDescription" type="xs:string">
                    </xs:element>
                    <xs:element name="UserMessage" type="xs:string">
                    </xs:element>
                    <xs:element name="UserMessageTitle" type="xs:string">
                    </xs:element>
                    <xs:element name="UserMessageDetails" type="xs:string">
                    </xs:element>
                    <xs:element name="SelectedSubnetIds" type="tns:TInt64Array">
                    </xs:element>
                    <xs:element name="RefreshSubnetIds" type="tns:TInt64Array">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserField">
                <xs:sequence>
                    <xs:element name="TableId" type="xs:long">
                    </xs:element>
                    <xs:element name="FieldId" type="xs:long">
                    </xs:element>
                    <xs:element name="TableName" type="xs:string">
                    </xs:element>
                    <xs:element name="FieldName" type="xs:string">
                    </xs:element>
                    <xs:element name="DisplayName" type="xs:string">
                    </xs:element>
                    <xs:element name="LookupType" type="tns:TUserFieldLookupType">
                    </xs:element>
                    <xs:element name="LookupList" type="tns:TUserFieldLookups">
                    </xs:element>
                    <xs:element name="SystemField" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ReadOnly" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Selectable" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ReadOnlyProperties" type="xs:boolean">
                    </xs:element>
                    <xs:element name="StoreRevisions" type="xs:boolean">
                    </xs:element>
                    <xs:element name="HiddenInAdmin" type="xs:boolean">
                    </xs:element>
                    <xs:element name="HiddenColumn" type="xs:boolean">
                    </xs:element>
                    <xs:element name="FixedColumn" type="xs:boolean">
                    </xs:element>
                    <xs:element name="DoNotExport" type="xs:boolean">
                    </xs:element>
                    <xs:element name="DisplayAsURL" type="xs:boolean">
                    </xs:element>
                    <xs:element name="UnavailableForDiscoveries" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Mandatory" type="xs:boolean">
                    </xs:element>
                    <xs:element name="BackgroundColour" type="xs:anyType">
                    </xs:element>
                    <xs:element name="FontColour" type="xs:anyType">
                    </xs:element>
                    <xs:element name="FontBold" type="xs:boolean">
                    </xs:element>
                    <xs:element name="FontItalic" type="xs:boolean">
                    </xs:element>
                    <xs:element name="FontUnderline" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ColumnIndex" type="xs:int">
                    </xs:element>
                    <xs:element name="DefaultColumnWidth" type="xs:int">
                    </xs:element>
                    <xs:element name="DefaultValue" type="xs:string">
                    </xs:element>
                    <xs:element name="EditMask" type="xs:string">
                    </xs:element>
                    <xs:element name="FieldSize" type="xs:int">
                    </xs:element>
                    <xs:element name="FieldType" type="tns:TEIPDataType">
                    </xs:element>
                    <xs:element name="FieldTypeDescription" type="xs:string">
                    </xs:element>
                    <xs:element name="Indexed" type="tns:TFieldIndexType">
                    </xs:element>
                    <xs:element name="FieldDelimiters" type="xs:string">
                    </xs:element>
                    <xs:element name="Weight" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserFieldLookup">
                <xs:sequence>
                    <xs:element name="Index" type="xs:int">
                    </xs:element>
                    <xs:element name="Caption" type="xs:string">
                    </xs:element>
                    <xs:element name="Description" type="xs:string">
                    </xs:element>
                    <xs:element name="BackgroundColour" type="xs:anyType">
                    </xs:element>
                    <xs:element name="FontColour" type="xs:anyType">
                    </xs:element>
                    <xs:element name="FontBold" type="xs:boolean">
                    </xs:element>
                    <xs:element name="FontItalic" type="xs:boolean">
                    </xs:element>
                    <xs:element name="FontUnderline" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TFieldPendingUpdate">
                <xs:sequence>
                    <xs:element name="FieldName" type="xs:string">
                    </xs:element>
                    <xs:element name="TableId" type="xs:int">
                    </xs:element>
                    <xs:element name="TableName" type="xs:string">
                    </xs:element>
                    <xs:element name="FieldUpdateAction" type="tns:TFieldUpdateAction">
                    </xs:element>
                    <xs:element name="FieldType" type="tns:TEIPDataType">
                    </xs:element>
                    <xs:element name="FieldSize" type="xs:int">
                    </xs:element>
                    <xs:element name="Status" type="tns:TFieldUpdateStatus">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TFieldDataTypeInfo">
                <xs:sequence>
                    <xs:element name="DataType" type="tns:TEIPDataType">
                    </xs:element>
                    <xs:element name="Description" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserFieldDisplayOrder">
                <xs:sequence>
                    <xs:element name="FieldId" type="xs:int">
                    </xs:element>
                    <xs:element name="FieldIndex" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPDeltaChangeValue">
                <xs:sequence>
                    <xs:element name="FieldName" type="xs:string">
                    </xs:element>
                    <xs:element name="OldValue" type="xs:anyType">
                    </xs:element>
                    <xs:element name="NewValue" type="xs:anyType">
                    </xs:element>
                    <xs:element name="ReadOnly" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPDelta">
                <xs:sequence>
                    <xs:element name="SubnetID" type="xs:long">
                    </xs:element>
                    <xs:element name="TableName" type="xs:string">
                    </xs:element>
                    <xs:element name="DeltaChanges" type="tns:TEasyIPDeltaChanges">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TTableScript">
                <xs:sequence>
                    <xs:element name="TableName" type="xs:string">
                    </xs:element>
                    <xs:element name="InsertScript" type="xs:string">
                    </xs:element>
                    <xs:element name="UpdateScript" type="xs:string">
                    </xs:element>
                    <xs:element name="DeleteScript" type="xs:string">
                    </xs:element>
                    <xs:element name="InsertScriptEnabled" type="xs:boolean">
                    </xs:element>
                    <xs:element name="UpdateScriptEnabled" type="xs:boolean">
                    </xs:element>
                    <xs:element name="DeleteScriptEnabled" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserInfoMessage">
                <xs:sequence>
                    <xs:element name="UserMessageText" type="xs:string">
                    </xs:element>
                    <xs:element name="UserMessageLink" type="xs:string">
                    </xs:element>
                    <xs:element name="Created" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="UserMessageType" type="tns:TUserMessageType">
                    </xs:element>
                    <xs:element name="Username" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDefaultValue">
                <xs:sequence>
                    <xs:element name="FieldName" type="xs:string">
                    </xs:element>
                    <xs:element name="DefaultValue" type="xs:anyType">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserTableExtendedAttributes">
                <xs:sequence>
                    <xs:element name="Scripts" type="tns:TTableScript">
                    </xs:element>
                    <xs:element name="DefaultValues" type="tns:TDefaultValues">
                    </xs:element>
                    <xs:element name="MandatoryFields" type="tns:TStringArray">
                    </xs:element>
                    <xs:element name="UserFields" type="tns:TUserFields">
                    </xs:element>
                    <xs:element name="Tag" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TServerSettings">
                <xs:sequence>
                    <xs:element name="Accounts_MinimumPasswordLength" type="xs:int">
                    </xs:element>
                    <xs:element name="DB_DatabaseServerType" type="tns:TServerType">
                    </xs:element>
                    <xs:element name="DB_FirebirdServerDatabase" type="xs:string">
                    </xs:element>
                    <xs:element name="DB_FirebirdServerPort" type="xs:int">
                    </xs:element>
                    <xs:element name="DB_FirebirdServerServer" type="xs:string">
                    </xs:element>
                    <xs:element name="DB_FirebirdServerSYSDBAPassword" type="xs:string">
                    </xs:element>
                    <xs:element name="DB_FirebirdServerSYSDBAUsername" type="xs:string">
                    </xs:element>
                    <xs:element name="DB_FirebirdCharacterSet" type="xs:string">
                    </xs:element>
                    <xs:element name="DB_FirebirdEmbeddedDatabase" type="xs:string">
                    </xs:element>
                    <xs:element name="DB_FirebirdEmbeddedCharacterSet" type="xs:string">
                    </xs:element>
                    <xs:element name="DB_DemoDatabase" type="xs:string">
                    </xs:element>
                    <xs:element name="SubnetInheritance_Enabled" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SubnetInheritance_Fields" type="tns:TStringArray">
                    </xs:element>
                    <xs:element name="Edit_MaximumMissingSubnets" type="xs:int">
                    </xs:element>
                    <xs:element name="Edit_LockRecords" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Email_From" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_PasswordRequestBody" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_PasswordRequestSubject" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_SMTPPassword" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_SMTPServer" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_SMTPPort" type="xs:int">
                    </xs:element>
                    <xs:element name="Email_SMTPUsername" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_SMTPRequiresAuthentication" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Email_SMTPRequiresSSL" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Email_QueuePurgeDays" type="xs:int">
                    </xs:element>
                    <xs:element name="Email_QueueCheckInterval" type="xs:int">
                    </xs:element>
                    <xs:element name="Email_UsernameRequestBody" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_UsernameRequestSubject" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_PasswordResetBody" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_PasswordResetSubject" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_NewUserBody" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_NewUserSubject" type="xs:string">
                    </xs:element>
                    <xs:element name="Email_ServerRetryMinutes" type="xs:int">
                    </xs:element>
                    <xs:element name="Logs_Directory" type="xs:string">
                    </xs:element>
                    <xs:element name="Logs_DirectoryPerDay" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Logs_FileLogLevel" type="tns:TLogLevel">
                    </xs:element>
                    <xs:element name="Logs_ControllerLogLevel" type="tns:TLogLevel">
                    </xs:element>
                    <xs:element name="Logs_DebugIgnoreMethods" type="tns:TStringArray">
                    </xs:element>
                    <xs:element name="Logs_LogRawBinPacketData" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Logs_LogRawSOAPPacketData" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Security_SSLCertificateFile" type="xs:string">
                    </xs:element>
                    <xs:element name="Security_SSLKeyFile" type="xs:string">
                    </xs:element>
                    <xs:element name="Security_SSLPassPhrase" type="xs:string">
                    </xs:element>
                    <xs:element name="Security_SSLRootCertificateFile" type="xs:string">
                    </xs:element>
                    <xs:element name="Security_SSLVerificationDepth" type="xs:int">
                    </xs:element>
                    <xs:element name="Security_UseSSL" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Server_CompressData" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Server_InactivityTimeout" type="xs:int">
                    </xs:element>
                    <xs:element name="Server_SessionTimeout" type="xs:int">
                    </xs:element>
                    <xs:element name="Server_EncryptData" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Server_SendEncryptionKey" type="xs:string">
                    </xs:element>
                    <xs:element name="Server_ReceiveEncryptionKey" type="xs:string">
                    </xs:element>
                    <xs:element name="Server_EncryptionType" type="tns:TEncryptionType">
                    </xs:element>
                    <xs:element name="Server_EncryptionPassword" type="xs:string">
                    </xs:element>
                    <xs:element name="Server_Port" type="xs:int">
                    </xs:element>
                    <xs:element name="Server_SSLPort" type="xs:int">
                    </xs:element>
                    <xs:element name="Server_RemoteEventFrequency" type="xs:int">
                    </xs:element>
                    <xs:element name="Server_ClientRequestTimeout" type="xs:int">
                    </xs:element>
                    <xs:element name="Server_MaxQueue" type="xs:int">
                    </xs:element>
                    <xs:element name="Server_PoolThreads" type="xs:int">
                    </xs:element>
                    <xs:element name="Server_MaxThreads" type="xs:int">
                    </xs:element>
                    <xs:element name="Server_ReservedLicencesCustom" type="xs:int">
                    </xs:element>
                    <xs:element name="VirtualFiles_AllowAdminsToDeleteNonEmptyDirectories" type="xs:boolean">
                    </xs:element>
                    <xs:element name="VirtualFiles_AllowUsersToDeleteNonEmptyDirectories" type="xs:boolean">
                    </xs:element>
                    <xs:element name="VirtualFiles_CompressFiles" type="xs:boolean">
                    </xs:element>
                    <xs:element name="VirtualFiles_DefaultUserDirectory" type="xs:string">
                    </xs:element>
                    <xs:element name="VirtualFiles_MaximumVirtualFileSize" type="xs:int">
                    </xs:element>
                    <xs:element name="VirtualFiles_CacheVirtualFilesOnClients" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Search_MaxResults" type="xs:int">
                    </xs:element>
                    <xs:element name="Search_MinTokenLength" type="xs:int">
                    </xs:element>
                    <xs:element name="Search_MaxTokenLength" type="xs:int">
                    </xs:element>
                    <xs:element name="BasicSearch_Enabled" type="xs:boolean">
                    </xs:element>
                    <xs:element name="FTS_Enabled" type="xs:boolean">
                    </xs:element>
                    <xs:element name="FTS_FieldDelimiters" type="xs:string">
                    </xs:element>
                    <xs:element name="FTS_StopPhrases" type="tns:TStringArray">
                    </xs:element>
                    <xs:element name="FTS_UpdateTimestamp" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="FTS_IndexingEnabled" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Reports_AvailableObjects" type="tns:TReportObjects">
                    </xs:element>
                    <xs:element name="PingLogging_Enabled" type="xs:boolean">
                    </xs:element>
                    <xs:element name="PingLogging_EnableForAllUsers" type="xs:boolean">
                    </xs:element>
                    <xs:element name="PingLogging_UserIds" type="tns:TInt64Array">
                    </xs:element>
                    <xs:element name="Backup_FrequencyType" type="tns:TScheduleEventFrequencyType">
                    </xs:element>
                    <xs:element name="Backup_Time" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="Backup_Directory" type="xs:string">
                    </xs:element>
                    <xs:element name="Backup_TestRestore" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Backup_PurgeBackups" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Backup_PurgeDays" type="xs:int">
                    </xs:element>
                    <xs:element name="Backup_RestoreDirectory" type="xs:string">
                    </xs:element>
                    <xs:element name="Backup_PageSize" type="xs:int">
                    </xs:element>
                    <xs:element name="Backup_PurgeChangeLogs" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Backup_PurgeChangeLogsDays" type="xs:int">
                    </xs:element>
                    <xs:element name="Backup_PurgePingLogs" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Backup_PurgePingLogsDays" type="xs:int">
                    </xs:element>
                    <xs:element name="Backup_RecalculateDatabaseSelectivity" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Backup_EmailResults" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Backup_EmailRecipients" type="xs:string">
                    </xs:element>
                    <xs:element name="Backup_EmailIncludeLog" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ChangeLogging_LogStructuralChanges" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ChangeLogging_DetailedChangeLogs" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ChangeLogging_LogFieldRevisions" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ChangeLogging_LogFieldRevisionsWhenImporting" type="xs:boolean">
                    </xs:element>
                    <xs:element name="UserFiles_Directory" type="xs:string">
                    </xs:element>
                    <xs:element name="ClientUpdates_AllowLaterClientsToUpgrade" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ClientUpdates_UpgradeType" type="tns:TClientUpgradeType">
                    </xs:element>
                    <xs:element name="UserRestrictions_MinAdminLevelCreateAN" type="tns:TUserType">
                    </xs:element>
                    <xs:element name="DiscoveryBots_QueueCheckFrequency" type="xs:int">
                    </xs:element>
                    <xs:element name="SOAPServer_Enabled" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SOAPServer_Port" type="xs:int">
                    </xs:element>
                    <xs:element name="SOAPServer_SSLPort" type="xs:int">
                    </xs:element>
                    <xs:element name="SOAPServer_WriteMultiRefArray" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SOAPServer_WriteMultiRefObject" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SOAPServer_SendUntyped" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SOAPServer_StrictStructureFieldOrder" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SOAPServer_EncodedXML" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SOAPServer_ClientIDInWSDL" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SOAPServer_Document" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SOAPServer_ExternalTypesAsReferences" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SOAPServer_SOAP12" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SOAPServer_SOAPMode" type="tns:TSOAPMode">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEventSchedule">
                <xs:sequence>
                    <xs:element name="ScheduleType" type="tns:TScheduleEventFrequencyType">
                    </xs:element>
                    <xs:element name="UserId" type="xs:string">
                    </xs:element>
                    <xs:element name="Created" type="xs:string">
                    </xs:element>
                    <xs:element name="NextRun" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="EventType" type="tns:TScheduledEventType">
                    </xs:element>
                    <xs:element name="RemoveEventAfterLastRun" type="xs:boolean">
                    </xs:element>
                    <xs:element name="FirstExecutionDateTime" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="LastExecutionDateTime" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="Command" type="xs:string">
                    </xs:element>
                    <xs:element name="TimeInterval" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="TimeDay" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="DailyDaysBetween" type="xs:int">
                    </xs:element>
                    <xs:element name="WeeksBetween" type="xs:int">
                    </xs:element>
                    <xs:element name="WeeklyMonday" type="xs:boolean">
                    </xs:element>
                    <xs:element name="WeeklyTuesday" type="xs:boolean">
                    </xs:element>
                    <xs:element name="WeeklyWednesday" type="xs:boolean">
                    </xs:element>
                    <xs:element name="WeeklyThursday" type="xs:boolean">
                    </xs:element>
                    <xs:element name="WeeklyFriday" type="xs:boolean">
                    </xs:element>
                    <xs:element name="WeeklySaturday" type="xs:boolean">
                    </xs:element>
                    <xs:element name="WeeklySunday" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyDayOfMonth" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyJanuary" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyFebruary" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyMarch" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyApril" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyMay" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyJune" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyJuly" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyAugust" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlySpetember" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyOctober" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyNovember" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MonthlyDecember" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TClientSettings">
                <xs:sequence>
                    <xs:element name="General_AutomaticallyReconnect" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SubnetBrowser_Restore" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SubnetBrowser_VerticalLines" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SubnetBrowser_HorizontalLines" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SubnetBrowser_ColumnHeaders" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SubnetBrowser_ItemIds" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SubnetBrowser_FullRowSelect" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SubnetBrowser_TreeLines" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_Restore" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_TableAdjustRowHeights" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_TableDisplayFilter" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_TableExpandGroups" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_TableShowGroupBox" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_CardExpand" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_CardAdjustHeights" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_CardHideEmptyRows" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_CardAdjustWidths" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_DisplayAllChildSubnetLevel" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ExternalTools_Settings" type="tns:TExternalTools">
                    </xs:element>
                    <xs:element name="Grid_EnableSubnetPaging" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_SubnetPageSize" type="xs:int">
                    </xs:element>
                    <xs:element name="Grid_EnableIPAddressPaging" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Grid_IPAddressPageSize" type="xs:int">
                    </xs:element>
                    <xs:element name="Connection_AutoReconnect" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TTemplateParameter">
                <xs:sequence>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="DisplayName" type="xs:string">
                    </xs:element>
                    <xs:element name="TableName" type="xs:string">
                    </xs:element>
                    <xs:element name="FieldName" type="xs:string">
                    </xs:element>
                    <xs:element name="Description" type="xs:string">
                    </xs:element>
                    <xs:element name="TemplateParameterType" type="tns:TTemplateParamType">
                    </xs:element>
                    <xs:element name="Required" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ReadOnly" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Category" type="xs:string">
                    </xs:element>
                    <xs:element name="MaxLength" type="xs:int">
                    </xs:element>
                    <xs:element name="Value" type="xs:anyType">
                    </xs:element>
                    <xs:element name="RemoveLineIfEmpty" type="xs:boolean">
                    </xs:element>
                    <xs:element name="LookupItems" type="tns:TStringArray">
                    </xs:element>
                    <xs:element name="OnlyLookupListItems" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SkipRecordIfEmpty" type="xs:boolean">
                    </xs:element>
                    <xs:element name="DatePartFormat" type="xs:string">
                    </xs:element>
                    <xs:element name="RemoveLeadingZeros" type="xs:boolean">
                    </xs:element>
                    <xs:element name="LowInteger" type="xs:int">
                    </xs:element>
                    <xs:element name="HighInteger" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TTemplateScript">
                <xs:sequence>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="Script" type="xs:string">
                    </xs:element>
                    <xs:element name="Header" type="xs:string">
                    </xs:element>
                    <xs:element name="Footer" type="xs:string">
                    </xs:element>
                    <xs:element name="Body" type="xs:string">
                    </xs:element>
                    <xs:element name="Parameters" type="tns:TTemplateParameters">
                    </xs:element>
                    <xs:element name="TemplateType" type="tns:TTemplateType">
                    </xs:element>
                    <xs:element name="HeaderFooterForEachSubnet" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TMissingSubnet">
                <xs:sequence>
                    <xs:element name="Subnet" type="xs:string">
                    </xs:element>
                    <xs:element name="CidrMask" type="xs:int">
                    </xs:element>
                    <xs:element name="Comment" type="xs:string">
                    </xs:element>
                    <xs:element name="AddressCount" type="xs:long">
                    </xs:element>
                    <xs:element name="ExistingSubnet" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSubnetId">
                <xs:sequence>
                    <xs:element name="AutonomousNetworkId" type="xs:long">
                    </xs:element>
                    <xs:element name="SubnetId" type="xs:long">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryData">
                <xs:sequence>
                    <xs:element name="AutnomousNetworkId" type="xs:long">
                    </xs:element>
                    <xs:element name="SubnetId" type="xs:long">
                    </xs:element>
                    <xs:element name="Subnet" type="xs:string">
                    </xs:element>
                    <xs:element name="CidrMask" type="xs:int">
                    </xs:element>
                    <xs:element name="IPAddressData" type="tns:TDiscoveryIPAddressDataList">
                    </xs:element>
                    <xs:element name="Error" type="xs:string">
                    </xs:element>
                    <xs:element name="FinishedSubnet" type="xs:boolean">
                    </xs:element>
                    <xs:element name="TotalIPAddressDataRecords" type="xs:int">
                    </xs:element>
                    <xs:element name="CompletedCount" type="xs:int">
                    </xs:element>
                    <xs:element name="SubnetIndex" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryIPAddressValue">
                <xs:sequence>
                    <xs:element name="FieldName" type="xs:string">
                    </xs:element>
                    <xs:element name="FieldValue" type="xs:anyType">
                    </xs:element>
                    <xs:element name="OriginalFieldValue" type="xs:anyType">
                    </xs:element>
                    <xs:element name="Updated" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryIPAddressData">
                <xs:sequence>
                    <xs:element name="IPAddressId" type="xs:long">
                    </xs:element>
                    <xs:element name="IPAddress" type="xs:string">
                    </xs:element>
                    <xs:element name="Values" type="tns:TDiscoveryIPAddressValues">
                    </xs:element>
                    <xs:element name="PingValues" type="tns:TDiscoveryIPAddressPingValues">
                    </xs:element>
                    <xs:element name="ARPValues" type="tns:TDiscoveryARPValues">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryResult">
                <xs:sequence>
                    <xs:element name="SubnetId" type="xs:long">
                    </xs:element>
                    <xs:element name="IPAddressData" type="tns:TDiscoveryIPAddressDataList">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoverableSubnet">
                <xs:complexContent><xs:extension base="tns:TSubnetId">
                    <xs:sequence>
                        <xs:element name="Subnet" type="xs:string">
                        </xs:element>
                        <xs:element name="CidrMask" type="xs:int">
                        </xs:element>
                        <xs:element name="TotalIPAddressCount" type="xs:int">
                        </xs:element>
                    </xs:sequence>
                </xs:extension></xs:complexContent>
            </xs:complexType>
            <xs:complexType name="TAuthenticationDetail">
                <xs:sequence>
                    <xs:element name="Id" type="xs:string">
                    </xs:element>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="Description" type="xs:string">
                    </xs:element>
                    <xs:element name="Author" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TLoginInfo">
                <xs:sequence>
                    <xs:element name="UserId" type="xs:long">
                    </xs:element>
                    <xs:element name="SessionId" type="xs:string">
                    </xs:element>
                    <xs:element name="ServerVersion" type="xs:int">
                    </xs:element>
                    <xs:element name="UnicodeDatabase" type="xs:boolean">
                    </xs:element>
                    <xs:element name="InactivityTimeout" type="xs:int">
                    </xs:element>
                    <xs:element name="UserMessage" type="xs:string">
                    </xs:element>
                    <xs:element name="UserMessageType" type="tns:TUserMessageType">
                    </xs:element>
                    <xs:element name="ClientUpgradeAvailable" type="xs:boolean">
                    </xs:element>
                    <xs:element name="RequestTimeout" type="xs:int">
                    </xs:element>
                    <xs:element name="PrimarySearchType" type="tns:TSearchType">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TParamItem">
                <xs:sequence>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="DisplayName" type="xs:string">
                    </xs:element>
                    <xs:element name="Comment" type="xs:string">
                    </xs:element>
                    <xs:element name="Category" type="xs:string">
                    </xs:element>
                    <xs:element name="Value" type="xs:anyType">
                    </xs:element>
                    <xs:element name="DefaultValueIsNull" type="xs:boolean">
                    </xs:element>
                    <xs:element name="NullDisplayText" type="xs:string">
                    </xs:element>
                    <xs:element name="FieldType" type="tns:TEIPDataType">
                    </xs:element>
                    <xs:element name="CalculatedDateType" type="tns:TCalculatedDateType">
                    </xs:element>
                    <xs:element name="CalculatedDateValue" type="xs:int">
                    </xs:element>
                    <xs:element name="ParamStringType" type="tns:TParamStringType">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TReportObjects">
                <xs:sequence>
                    <xs:element name="TableNames" type="tns:TStringArray">
                    </xs:element>
                    <xs:element name="ViewNames" type="tns:TStringArray">
                    </xs:element>
                    <xs:element name="StoredProcedureNames" type="tns:TStringArray">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TFieldInfo">
                <xs:sequence>
                    <xs:element name="Fieldname" type="xs:string">
                    </xs:element>
                    <xs:element name="DataType" type="tns:TEIPDataType">
                    </xs:element>
                    <xs:element name="InputParameter" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPReportView">
                <xs:sequence>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="ReportType" type="tns:TReportViewType">
                    </xs:element>
                    <xs:element name="ReportData" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPQuery">
                <xs:sequence>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="Comment" type="xs:string">
                    </xs:element>
                    <xs:element name="QuerySQLs" type="tns:TQuerySQLs">
                    </xs:element>
                    <xs:element name="Parameters" type="tns:TParamList">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TQuerySQL">
                <xs:sequence>
                    <xs:element name="ConnectionName" type="xs:string">
                    </xs:element>
                    <xs:element name="SQL" type="xs:string">
                    </xs:element>
                    <xs:element name="Default" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPQueryReport">
                <xs:sequence>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="Comment" type="xs:string">
                    </xs:element>
                    <xs:element name="ReportViews" type="tns:TEasyIPReportViews">
                    </xs:element>
                    <xs:element name="QuerySQLs" type="tns:TQuerySQLs">
                    </xs:element>
                    <xs:element name="Parameters" type="tns:TParamList">
                    </xs:element>
                    <xs:element name="CatcheableErrors" type="tns:TCatcheableErrors">
                    </xs:element>
                    <xs:element name="AdministratorReport" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSimpleReport">
                <xs:sequence>
                    <xs:element name="Header" type="xs:string">
                    </xs:element>
                    <xs:element name="Body" type="xs:string">
                    </xs:element>
                    <xs:element name="Footer" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TCatcheableError">
                <xs:sequence>
                    <xs:element name="CatchText" type="xs:string">
                    </xs:element>
                    <xs:element name="CatchMessage" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryIPAddressPingValues">
                <xs:sequence>
                    <xs:element name="Update" type="xs:boolean">
                    </xs:element>
                    <xs:element name="Alive" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ResponseTime" type="xs:int">
                    </xs:element>
                    <xs:element name="ResponseTimestamp" type="xs:dateTime">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TFileInfo">
                <xs:sequence>
                    <xs:element name="Filename" type="xs:string">
                    </xs:element>
                    <xs:element name="Filesize" type="xs:long">
                    </xs:element>
                    <xs:element name="ModifiedDate" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="CreatedDate" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="IsDir" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserSession">
                <xs:sequence>
                    <xs:element name="Username" type="xs:string">
                    </xs:element>
                    <xs:element name="UserId" type="xs:long">
                    </xs:element>
                    <xs:element name="ClientType" type="tns:TClientType">
                    </xs:element>
                    <xs:element name="UserType" type="tns:TUserType">
                    </xs:element>
                    <xs:element name="SessionCreated" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="LastAccessed" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="IPAddress" type="xs:string">
                    </xs:element>
                    <xs:element name="SessionId" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEmailQueueItem">
                <xs:sequence>
                    <xs:element name="EmailId" type="xs:long">
                    </xs:element>
                    <xs:element name="Recipients" type="xs:string">
                    </xs:element>
                    <xs:element name="CCs" type="xs:string">
                    </xs:element>
                    <xs:element name="BCCs" type="xs:string">
                    </xs:element>
                    <xs:element name="Subject" type="xs:string">
                    </xs:element>
                    <xs:element name="Status" type="tns:TEmailQueueItemStatus">
                    </xs:element>
                    <xs:element name="ErrorMessage" type="xs:string">
                    </xs:element>
                    <xs:element name="QueueTimestamp" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="ProcessedTimestamp" type="xs:dateTime">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TWebClientSettings">
                <xs:sequence>
                    <xs:element name="Favourites" type="tns:TFavourites">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TFavourite">
                <xs:sequence>
                    <xs:element name="Description" type="xs:string">
                    </xs:element>
                    <xs:element name="AutonomousNetworkId" type="xs:long">
                    </xs:element>
                    <xs:element name="SubnetId" type="xs:long">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TExternalTool">
                <xs:sequence>
                    <xs:element name="Caption" type="xs:string">
                    </xs:element>
                    <xs:element name="ToolPath" type="xs:string">
                    </xs:element>
                    <xs:element name="Parameters" type="xs:string">
                    </xs:element>
                    <xs:element name="TableName" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryARPValue">
                <xs:sequence>
                    <xs:element name="IPAddress" type="xs:string">
                    </xs:element>
                    <xs:element name="MACAddress" type="xs:string">
                    </xs:element>
                    <xs:element name="RouterInterfaceId" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TChangeLogEntry">
                <xs:sequence>
                    <xs:element name="FieldName" type="xs:string">
                    </xs:element>
                    <xs:element name="OldValue" type="xs:anyType">
                    </xs:element>
                    <xs:element name="NewValue" type="xs:anyType">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryUpdateResult">
                <xs:sequence>
                    <xs:element name="UndoId" type="xs:long">
                    </xs:element>
                    <xs:element name="SubnetId" type="xs:int">
                    </xs:element>
                    <xs:element name="AddedIPAddressCount" type="xs:int">
                    </xs:element>
                    <xs:element name="UpdatedIPAddressCount" type="xs:int">
                    </xs:element>
                    <xs:element name="AddedUpdatedARPEntries" type="xs:int">
                    </xs:element>
                    <xs:element name="Errors" type="tns:TStringArray">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TPingHistory">
                <xs:sequence>
                    <xs:element name="PingID" type="xs:long">
                    </xs:element>
                    <xs:element name="Alive" type="xs:boolean">
                    </xs:element>
                    <xs:element name="ResponseTime" type="xs:int">
                    </xs:element>
                    <xs:element name="PingTimestamp" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="UserId" type="xs:long">
                    </xs:element>
                    <xs:element name="Username" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TPingHistoryResult">
                <xs:sequence>
                    <xs:element name="PingHistories" type="tns:TPingHistories">
                    </xs:element>
                    <xs:element name="AverageResponseTime" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryBot">
                <xs:sequence>
                    <xs:element name="DiscoveryBotId" type="xs:long">
                    </xs:element>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="IPAddress" type="xs:string">
                    </xs:element>
                    <xs:element name="LastSeen" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="Status" type="tns:TDiscoveryStatus">
                    </xs:element>
                    <xs:element name="Enabled" type="xs:boolean">
                    </xs:element>
                    <xs:element name="QueuedCount" type="xs:int">
                    </xs:element>
                    <xs:element name="DiscoveryId" type="xs:long">
                    </xs:element>
                    <xs:element name="DiscoveryStatus" type="xs:string">
                    </xs:element>
                    <xs:element name="DiscoveryProgress" type="xs:int">
                    </xs:element>
                    <xs:element name="DiscoveryProgressMax" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TQueuedDiscovery">
                <xs:sequence>
                    <xs:element name="DiscoveryId" type="xs:long">
                    </xs:element>
                    <xs:element name="UserId" type="xs:long">
                    </xs:element>
                    <xs:element name="UserName" type="xs:string">
                    </xs:element>
                    <xs:element name="DiscoveryBotId" type="xs:long">
                    </xs:element>
                    <xs:element name="DiscoveryBotName" type="xs:string">
                    </xs:element>
                    <xs:element name="DiscoveryBotIPAddress" type="xs:string">
                    </xs:element>
                    <xs:element name="QueueTimeStamp" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="FinishedTimeStamp" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="NextRunTime" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="ScheduledRunTime" type="xs:dateTime">
                    </xs:element>
                    <xs:element name="ScheduledRunFrequency" type="tns:TScheduleEventFrequencyType">
                    </xs:element>
                    <xs:element name="Status" type="tns:TDiscoveryStatus">
                    </xs:element>
                    <xs:element name="DiscoveryStatus" type="xs:string">
                    </xs:element>
                    <xs:element name="DiscoveryProgress" type="xs:int">
                    </xs:element>
                    <xs:element name="DiscoveryProgressMax" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryBotSettings">
                <xs:sequence>
                    <xs:element name="DiscoveryScript" type="xs:string">
                    </xs:element>
                    <xs:element name="QueueCheckFrequency" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TChangeLogItem">
                <xs:sequence>
                    <xs:element name="LogId" type="xs:long">
                    </xs:element>
                    <xs:element name="Username" type="xs:string">
                    </xs:element>
                    <xs:element name="ChangeDateTime" type="xs:dateTime">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TParameterValue">
                <xs:sequence>
                    <xs:element name="ParamName" type="xs:string">
                    </xs:element>
                    <xs:element name="ParamValue" type="xs:anyType">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserInformation">
                <xs:annotation>
                    <xs:documentation>
                        FUserInfo.Id := ResultDataSet.FieldByName(&apos;ID&apos;).AsLargeInt;
                        FUserInfo.Username := ResultDataSet.FieldByName(&apos;USER_NAME&apos;).AsString;
                        FUserInfo.Name := ResultDataSet.FieldByName(&apos;NAME&apos;).AsString;
                        FUserInfo.UserType := IntegerToUserType(ResultDataSet.FieldByName(&apos;USER_TYPE&apos;).AsLargeInt);
                        FUserInfo.AuthenticationType := ResultDataSet.FieldByName(&apos;AUTHENTICATION_TYPE&apos;).AsString;
                        FUserInfo.GroupId := ResultDataSet.FieldByName(&apos;GROUP_ID&apos;).AsLargeInt;
                        FUserInfo.Email := ResultDataSet.FieldByName(&apos;EMAIL&apos;).AsString;
                        FUserInfo.Created := ResultDataSet.FieldByName(&apos;CREATED&apos;).AsDateTime;
                        FUserInfo.LastLogin := ResultDataSet.FieldByName(&apos;LAST_LOGIN&apos;).AsDateTime;
                        FUserInfo.UserDirectory := GetUserDirectory(FUserInfo.Username);
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="UserID" type="xs:long">
                    </xs:element>
                    <xs:element name="Username" type="xs:string">
                    </xs:element>
                    <xs:element name="FullName" type="xs:string">
                    </xs:element>
                    <xs:element name="UserType" type="tns:TUserType">
                    </xs:element>
                    <xs:element name="AuthenticationType" type="tns:TAuthenticationDetail">
                    </xs:element>
                    <xs:element name="GroupID" type="xs:string">
                    </xs:element>
                    <xs:element name="Email" type="xs:string">
                    </xs:element>
                    <xs:element name="Created" type="xs:string">
                    </xs:element>
                    <xs:element name="LastLogin" type="xs:string">
                    </xs:element>
                    <xs:element name="UserDirectory" type="xs:string">
                    </xs:element>
                    <xs:element name="UserPrivileges" type="tns:TUserPrivileges">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TLinkedIPAddress">
                <xs:sequence>
                    <xs:element name="IPAddressID" type="xs:long">
                    </xs:element>
                    <xs:element name="LinkID" type="xs:long">
                    </xs:element>
                    <xs:element name="LongIPAddress" type="xs:string">
                    </xs:element>
                    <xs:element name="ShortIPAddress" type="xs:string">
                    </xs:element>
                    <xs:element name="SubnetID" type="xs:long">
                    </xs:element>
                    <xs:element name="LongSubnet" type="xs:string">
                    </xs:element>
                    <xs:element name="ShortSubnet" type="xs:string">
                    </xs:element>
                    <xs:element name="AutonomousNetworkID" type="xs:long">
                    </xs:element>
                    <xs:element name="AutonomousNetworkName" type="xs:string">
                    </xs:element>
                    <xs:element name="LinkDescription" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TLinkedIPAddressDescription">
                <xs:sequence>
                    <xs:element name="LinkedIPAddressDescriptionID" type="xs:int">
                    </xs:element>
                    <xs:element name="Description" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPDeltaChange">
                <xs:sequence>
                    <xs:element name="PrimaryKeyValue" type="xs:long">
                    </xs:element>
                    <xs:element name="ChangeValues" type="tns:TEasyIPDeltaChangeValues">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSimpleData">
                <xs:sequence>
                    <xs:element name="Fields" type="tns:TSimpleDataFields">
                    </xs:element>
                    <xs:element name="Data" type="tns:TSimpleRecords">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSimpleDataField">
                <xs:sequence>
                    <xs:element name="FieldName" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPUser">
                <xs:complexContent><xs:extension base="tns:TBaseEasyIPUser">
                    <xs:sequence>
                        <xs:element name="GroupID" type="xs:int">
                        </xs:element>
                        <xs:element name="Username" type="xs:string">
                        </xs:element>
                        <xs:element name="UserType" type="tns:TUserType">
                        </xs:element>
                        <xs:element name="AuthenticationType" type="xs:string">
                        </xs:element>
                        <xs:element name="Email" type="xs:string">
                        </xs:element>
                        <xs:element name="ForcePwdChange" type="xs:boolean">
                        </xs:element>
                        <xs:element name="AccountDisabled" type="xs:boolean">
                        </xs:element>
                        <xs:element name="Created" type="xs:dateTime">
                        </xs:element>
                        <xs:element name="LastLogin" type="xs:dateTime">
                        </xs:element>
                        <xs:element name="UserDirectory" type="xs:string">
                        </xs:element>
                        <xs:element name="Deleted" type="xs:boolean">
                        </xs:element>
                        <xs:element name="DeletionDate" type="xs:dateTime">
                        </xs:element>
                    </xs:sequence>
                </xs:extension></xs:complexContent>
            </xs:complexType>
            <xs:complexType name="TBaseEasyIPUser">
                <xs:sequence>
                    <xs:element name="UserID" type="xs:long">
                    </xs:element>
                    <xs:element name="FullName" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPUserGroup">
                <xs:complexContent><xs:extension base="tns:TBaseEasyIPUser">
                    <xs:sequence>
                        <xs:element name="EasyIPUsers" type="tns:TEasyIPUsers">
                        </xs:element>
                    </xs:sequence>
                </xs:extension></xs:complexContent>
            </xs:complexType>
            <xs:complexType name="TUndoItem">
                <xs:sequence>
                    <xs:element name="UndoID" type="xs:long">
                    </xs:element>
                    <xs:element name="Description" type="xs:string">
                    </xs:element>
                    <xs:element name="UndoAction" type="xs:string">
                    </xs:element>
                    <xs:element name="FocusedAutonomousNetwork" type="xs:long">
                    </xs:element>
                    <xs:element name="Created" type="xs:dateTime">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TTemplateScript2">
                <xs:complexContent><xs:extension base="tns:TTemplateScript">
                    <xs:sequence>
                        <xs:element name="ScriptEnabled" type="xs:boolean">
                        </xs:element>
                        <xs:element name="DescriptionHTML" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:extension></xs:complexContent>
            </xs:complexType>
            <xs:complexType name="TGlobalNetToolSettings">
                <xs:sequence>
                    <xs:element name="General_DisplayEmptyFolders" type="xs:boolean">
                    </xs:element>
                    <xs:element name="WhoIs_DefaultServer" type="xs:string">
                    </xs:element>
                    <xs:element name="WhoIs_UseDefaultServer" type="xs:boolean">
                    </xs:element>
                    <xs:element name="WhoIs_Servers" type="tns:TStringArray">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TThinfinitySettings">
                <xs:sequence>
                    <xs:element name="EasyIPServer" type="xs:string">
                    </xs:element>
                    <xs:element name="DisableStorePassword" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSubnetAttribute">
                <xs:sequence>
                    <xs:element name="SubnetID" type="xs:long">
                    </xs:element>
                    <xs:element name="TextColor" type="xs:int">
                    </xs:element>
                    <xs:element name="BackgroundColor" type="xs:int">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TableRequestInfo">
                <xs:sequence>
                    <xs:element name="UserFilter" type="xs:string">
                    </xs:element>
                    <xs:element name="IncludeSchema" type="xs:boolean">
                    </xs:element>
                    <xs:element name="MaxRecords" type="xs:int">
                    </xs:element>
                    <xs:element name="Parameters" type="tns:DataParameterArray">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DataParameter">
                <xs:sequence>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="Value" type="xs:anyType">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleRequestInfo">
                <xs:sequence>
                    <xs:element name="SQL" type="xs:string">
                    </xs:element>
                    <xs:element name="Table" type="xs:string">
                    </xs:element>
                    <xs:element name="Where" type="xs:string">
                    </xs:element>
                    <xs:element name="Parameters" type="tns:SimpleDataParameterArray">
                    </xs:element>
                    <xs:element name="MaxRecords" type="xs:int">
                    </xs:element>
                    <xs:element name="IncludeSchema" type="xs:boolean">
                    </xs:element>
                    <xs:element name="SimpleMode" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleDataParameter">
                <xs:sequence>
                    <xs:element name="DataType" type="tns:SimpleDataType">
                    </xs:element>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="Value" type="xs:string">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleDataResult">
                <xs:sequence>
                    <xs:element name="TableName" type="xs:string">
                    </xs:element>
                    <xs:element name="FieldInfo" type="tns:SimpleFieldInfoArray">
                    </xs:element>
                    <xs:element name="Data" type="tns:StringArrayArray">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleFieldInfo">
                <xs:sequence>
                    <xs:element name="Name" type="xs:string">
                    </xs:element>
                    <xs:element name="DataType" type="tns:SimpleDataType">
                    </xs:element>
                    <xs:element name="Hidden" type="xs:boolean">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleDelta">
                <xs:sequence>
                    <xs:element name="TableName" type="xs:string">
                    </xs:element>
                    <xs:element name="Fields" type="tns:StringArray">
                    </xs:element>
                    <xs:element name="Rows" type="tns:SimpleDeltaChangeArray">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleDeltaChange">
                <xs:sequence>
                    <xs:element name="OldValues" type="tns:StringArray">
                    </xs:element>
                    <xs:element name="NewValues" type="tns:StringArray">
                    </xs:element>
                    <xs:element name="Error" type="xs:string">
                    </xs:element>
                    <xs:element name="Mode" type="tns:SimpleDataMode">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TableRequestInfoV5">
                <xs:complexContent><xs:extension base="tns:TableRequestInfo">
                    <xs:sequence>
                        <xs:element name="WhereClause" type="xs:anyType">
                        </xs:element>
                        <xs:element name="DynamicSelectFieldNames" type="tns:StringArray">
                        </xs:element>
                        <xs:element name="Sorting" type="tns:ColumnSorting">
                        </xs:element>
                    </xs:sequence>
                </xs:extension></xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ColumnSorting">
                <xs:sequence>
                    <xs:element name="FieldName" type="xs:string">
                    </xs:element>
                    <xs:element name="SortDirection" type="tns:ColumnSortDirection">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TableRequestInfoV6">
                <xs:complexContent><xs:extension base="tns:TableRequestInfo">
                    <xs:sequence>
                        <xs:element name="Sql" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:extension></xs:complexContent>
            </xs:complexType>
            <xs:complexType name="TStringArray">
                <xs:annotation>
                    <xs:documentation>
                        Array of WideString
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="string" minOccurs="0" maxOccurs="unbounded" type="xs:string" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TVirtualFiles">
                <xs:annotation>
                    <xs:documentation>
                        Array of TVirtualFile
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TVirtualFile" minOccurs="0" maxOccurs="unbounded" type="tns:TVirtualFile" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TVirtualDirectories">
                <xs:annotation>
                    <xs:documentation>
                        Array of TVirtualDirectory
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TVirtualDirectory" minOccurs="0" maxOccurs="unbounded" type="tns:TVirtualDirectory" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TRefreshActionArray">
                <xs:annotation>
                    <xs:documentation>
                        Array of TRefreshAction
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TRefreshAction" minOccurs="0" maxOccurs="unbounded" type="tns:TRefreshAction" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSubnetsArray">
                <xs:annotation>
                    <xs:documentation>
                        Array of TSubnet
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TSubnet" minOccurs="0" maxOccurs="unbounded" type="tns:TSubnet" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserTables">
                <xs:annotation>
                    <xs:documentation>
                        Array of TUserTable
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TUserTable" minOccurs="0" maxOccurs="unbounded" type="tns:TUserTable" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TInt64Array">
                <xs:annotation>
                    <xs:documentation>
                        Array of Int64
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="long" minOccurs="0" maxOccurs="unbounded" type="xs:long" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserPrivilegeRights">
                <xs:annotation>
                    <xs:documentation>
                        Array of TUserPrivilegeRight
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TUserPrivilegeRight" minOccurs="0" maxOccurs="unbounded" type="tns:TUserPrivilegeRight" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserPrivileges">
                <xs:annotation>
                    <xs:documentation>
                        Array of TUserPrivilege
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TUserPrivilege" minOccurs="0" maxOccurs="unbounded" type="tns:TUserPrivilege" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserFunctionArray">
                <xs:annotation>
                    <xs:documentation>
                        Array of TUserFunction
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TUserFunction" minOccurs="0" maxOccurs="unbounded" type="tns:TUserFunction" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserFields">
                <xs:annotation>
                    <xs:documentation>
                        Array of TUserField
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TUserField" minOccurs="0" maxOccurs="unbounded" type="tns:TUserField" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserFieldLookups">
                <xs:annotation>
                    <xs:documentation>
                        Array of TUserFieldLookup
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TUserFieldLookup" minOccurs="0" maxOccurs="unbounded" type="tns:TUserFieldLookup" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TFieldPendingUpdates">
                <xs:annotation>
                    <xs:documentation>
                        Array of TFieldPendingUpdate
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TFieldPendingUpdate" minOccurs="0" maxOccurs="unbounded" type="tns:TFieldPendingUpdate" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TFieldDataTypeInfos">
                <xs:annotation>
                    <xs:documentation>
                        Array of TFieldDataTypeInfo
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TFieldDataTypeInfo" minOccurs="0" maxOccurs="unbounded" type="tns:TFieldDataTypeInfo" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserFieldDisplayOrders">
                <xs:annotation>
                    <xs:documentation>
                        Array of TUserFieldDisplayOrder
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TUserFieldDisplayOrder" minOccurs="0" maxOccurs="unbounded" type="tns:TUserFieldDisplayOrder" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPDeltaChanges">
                <xs:annotation>
                    <xs:documentation>
                        Array of TEasyIPDeltaChange
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TEasyIPDeltaChange" minOccurs="0" maxOccurs="unbounded" type="tns:TEasyIPDeltaChange" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TTableScripts">
                <xs:annotation>
                    <xs:documentation>
                        Array of TTableScript
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TTableScript" minOccurs="0" maxOccurs="unbounded" type="tns:TTableScript" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserInfoMessages">
                <xs:annotation>
                    <xs:documentation>
                        Array of TUserInfoMessage
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TUserInfoMessage" minOccurs="0" maxOccurs="unbounded" type="tns:TUserInfoMessage" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDefaultValues">
                <xs:annotation>
                    <xs:documentation>
                        Array of TDefaultValue
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TDefaultValue" minOccurs="0" maxOccurs="unbounded" type="tns:TDefaultValue" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEventSchedules">
                <xs:annotation>
                    <xs:documentation>
                        Array of TEventSchedule
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TEventSchedule" minOccurs="0" maxOccurs="unbounded" type="tns:TEventSchedule" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TTemplateParameters">
                <xs:annotation>
                    <xs:documentation>
                        Array of TTemplateParameter
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TTemplateParameter" minOccurs="0" maxOccurs="unbounded" type="tns:TTemplateParameter" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TMissingSubnets">
                <xs:annotation>
                    <xs:documentation>
                        Array of TMissingSubnet
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TMissingSubnet" minOccurs="0" maxOccurs="unbounded" type="tns:TMissingSubnet" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPDeltaChangeValues">
                <xs:annotation>
                    <xs:documentation>
                        Array of TEasyIPDelta
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TEasyIPDeltaChangeValue" minOccurs="0" maxOccurs="unbounded" type="tns:TEasyIPDeltaChangeValue" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSubnetIds">
                <xs:annotation>
                    <xs:documentation>
                        Array of TSubnetId
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TSubnetId" minOccurs="0" maxOccurs="unbounded" type="tns:TSubnetId" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryIPAddressDataList">
                <xs:annotation>
                    <xs:documentation>
                        Array of TDiscoveryIPAddressData
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TDiscoveryIPAddressData" minOccurs="0" maxOccurs="unbounded" type="tns:TDiscoveryIPAddressData" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryIPAddressValues">
                <xs:annotation>
                    <xs:documentation>
                        Array of TDiscoveryIPAddressValue
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TDiscoveryIPAddressValue" minOccurs="0" maxOccurs="unbounded" type="tns:TDiscoveryIPAddressValue" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoverableSubnets">
                <xs:annotation>
                    <xs:documentation>
                        Array of TDiscoverableSubnet
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TDiscoverableSubnet" minOccurs="0" maxOccurs="unbounded" type="tns:TDiscoverableSubnet" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TAuthenticationDetails">
                <xs:annotation>
                    <xs:documentation>
                        Array of TAuthenticationDetail
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TAuthenticationDetail" minOccurs="0" maxOccurs="unbounded" type="tns:TAuthenticationDetail" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TParamList">
                <xs:annotation>
                    <xs:documentation>
                        Array of TParamItem
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TParamItem" minOccurs="0" maxOccurs="unbounded" type="tns:TParamItem" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TFieldInfos">
                <xs:annotation>
                    <xs:documentation>
                        Array of TFieldInfo
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TFieldInfo" minOccurs="0" maxOccurs="unbounded" type="tns:TFieldInfo" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPReportViews">
                <xs:annotation>
                    <xs:documentation>
                        Array of TEasyIPReportView
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TEasyIPReportView" minOccurs="0" maxOccurs="unbounded" type="tns:TEasyIPReportView" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TQuerySQLs">
                <xs:annotation>
                    <xs:documentation>
                        Array of TQuerySQL
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TQuerySQL" minOccurs="0" maxOccurs="unbounded" type="tns:TQuerySQL" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TCatcheableErrors">
                <xs:annotation>
                    <xs:documentation>
                        Array of TCatcheableError
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TCatcheableError" minOccurs="0" maxOccurs="unbounded" type="tns:TCatcheableError" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TBinaryResults">
                <xs:annotation>
                    <xs:documentation>
                        Array of Binary
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="base64Binary" minOccurs="0" maxOccurs="unbounded" type="xs:base64Binary" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TFileInfoArray">
                <xs:annotation>
                    <xs:documentation>
                        Array of TFileInfo
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TFileInfo" minOccurs="0" maxOccurs="unbounded" type="tns:TFileInfo" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TUserSessions">
                <xs:annotation>
                    <xs:documentation>
                        Array of TUserSession
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TUserSession" minOccurs="0" maxOccurs="unbounded" type="tns:TUserSession" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEmailQueueItems">
                <xs:annotation>
                    <xs:documentation>
                        Array of TEmailQueueItem
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TEmailQueueItem" minOccurs="0" maxOccurs="unbounded" type="tns:TEmailQueueItem" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TFavourites">
                <xs:annotation>
                    <xs:documentation>
                        Array of TFavourite
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TFavourite" minOccurs="0" maxOccurs="unbounded" type="tns:TFavourite" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TExternalTools">
                <xs:annotation>
                    <xs:documentation>
                        Array of TExternalTool
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TExternalTool" minOccurs="0" maxOccurs="unbounded" type="tns:TExternalTool" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryARPValues">
                <xs:annotation>
                    <xs:documentation>
                        Array of TDiscoveryARPValue
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TDiscoveryARPValue" minOccurs="0" maxOccurs="unbounded" type="tns:TDiscoveryARPValue" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TVarArray">
                <xs:annotation>
                    <xs:documentation>
                        Array of Variant
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="anyType" minOccurs="0" maxOccurs="unbounded" type="xs:anyType" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TChangeLogEntries">
                <xs:annotation>
                    <xs:documentation>
                        Array of TChangeLogEntry
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TChangeLogEntry" minOccurs="0" maxOccurs="unbounded" type="tns:TChangeLogEntry" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TPingHistories">
                <xs:annotation>
                    <xs:documentation>
                        Array of TPingHistory
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TPingHistory" minOccurs="0" maxOccurs="unbounded" type="tns:TPingHistory" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TDiscoveryBots">
                <xs:annotation>
                    <xs:documentation>
                        Array of TDiscoveryBot
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TDiscoveryBot" minOccurs="0" maxOccurs="unbounded" type="tns:TDiscoveryBot" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TQueuedDiscoveries">
                <xs:annotation>
                    <xs:documentation>
                        Array of TQueuedDiscovery
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TQueuedDiscovery" minOccurs="0" maxOccurs="unbounded" type="tns:TQueuedDiscovery" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TChangeLogItems">
                <xs:annotation>
                    <xs:documentation>
                        Array of TChangeLogItem
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TChangeLogItem" minOccurs="0" maxOccurs="unbounded" type="tns:TChangeLogItem" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TParameterValues">
                <xs:annotation>
                    <xs:documentation>
                        Array of TParameterValue
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TParameterValue" minOccurs="0" maxOccurs="unbounded" type="tns:TParameterValue" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TLinkedIPAddresses">
                <xs:annotation>
                    <xs:documentation>
                        Array of TLinkedIPAddress
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TLinkedIPAddress" minOccurs="0" maxOccurs="unbounded" type="tns:TLinkedIPAddress" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TLinkedIPAddressDescriptions">
                <xs:annotation>
                    <xs:documentation>
                        Array of TLinkedIPAddressDescription
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TLinkedIPAddressDescription" minOccurs="0" maxOccurs="unbounded" type="tns:TLinkedIPAddressDescription" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="VariantArray">
                <xs:sequence>
                    <xs:element name="anyType" minOccurs="0" maxOccurs="unbounded" type="xs:anyType" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSimpleDataFields">
                <xs:annotation>
                    <xs:documentation>
                        Array of TSimpleDataField
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TSimpleDataField" minOccurs="0" maxOccurs="unbounded" type="tns:TSimpleDataField" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSimpleRecords">
                <xs:annotation>
                    <xs:documentation>
                        Array of TVarArray
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TVarArray" minOccurs="0" maxOccurs="unbounded" type="tns:TVarArray" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPUsers">
                <xs:annotation>
                    <xs:documentation>
                        Array of TEasyIPUser
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TEasyIPUser" minOccurs="0" maxOccurs="unbounded" type="tns:TEasyIPUser" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TEasyIPUserGroups">
                <xs:annotation>
                    <xs:documentation>
                        Array of TEasyIPUserGroup
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TEasyIPUserGroup" minOccurs="0" maxOccurs="unbounded" type="tns:TEasyIPUserGroup" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TSubnetAttributes">
                <xs:sequence>
                    <xs:element name="TSubnetAttribute" minOccurs="0" maxOccurs="unbounded" type="tns:TSubnetAttribute" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="StringArray">
                <xs:sequence>
                    <xs:element name="string" minOccurs="0" maxOccurs="unbounded" type="xs:string" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TableRequestInfoArray">
                <xs:sequence>
                    <xs:element name="TableRequestInfo" minOccurs="0" maxOccurs="unbounded" type="tns:TableRequestInfo" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DataParameterArray">
                <xs:sequence>
                    <xs:element name="DataParameter" minOccurs="0" maxOccurs="unbounded" type="tns:DataParameter" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleRequestInfoArray">
                <xs:sequence>
                    <xs:element name="SimpleRequestInfo" minOccurs="0" maxOccurs="unbounded" type="tns:SimpleRequestInfo" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleDataParameterArray">
                <xs:sequence>
                    <xs:element name="SimpleDataParameter" minOccurs="0" maxOccurs="unbounded" type="tns:SimpleDataParameter" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleDataResultArray">
                <xs:sequence>
                    <xs:element name="SimpleDataResult" minOccurs="0" maxOccurs="unbounded" type="tns:SimpleDataResult" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleFieldInfoArray">
                <xs:sequence>
                    <xs:element name="SimpleFieldInfo" minOccurs="0" maxOccurs="unbounded" type="tns:SimpleFieldInfo" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="StringArrayArray">
                <xs:sequence>
                    <xs:element name="StringArray" minOccurs="0" maxOccurs="unbounded" type="tns:StringArray" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleDeltaArray">
                <xs:sequence>
                    <xs:element name="SimpleDelta" minOccurs="0" maxOccurs="unbounded" type="tns:SimpleDelta" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SimpleDeltaChangeArray">
                <xs:sequence>
                    <xs:element name="SimpleDeltaChange" minOccurs="0" maxOccurs="unbounded" type="tns:SimpleDeltaChange" />
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EEasyIPServerError2">
                <xs:annotation>
                    <xs:documentation>
                        Easy-IP Server Exception
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:EEasyIPBaseError">
                        <xs:sequence>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="EEasyIPClientError">
                <xs:annotation>
                    <xs:documentation>
                        Easy-IP Client exception
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:EEasyIPBaseError">
                        <xs:sequence>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="EEasyIPCommonError">
                <xs:annotation>
                    <xs:documentation>
                        Easy-IP exception common to all applications
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:EEasyIPBaseError">
                        <xs:sequence>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="EEasyIPServerClientVersionError">
                <xs:annotation>
                    <xs:documentation>
                        This exception is raised when a client connection cannot be completed due to a client/server or interface version issue.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:EEasyIPBaseError">
                        <xs:sequence>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="EEasyIPServerQueryAbortError">
                <xs:annotation>
                    <xs:documentation>
                        This Exception is raised when a user aborts a query
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:EEasyIPBaseError">
                        <xs:sequence>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="EEasyIPBaseError">
                <xs:annotation>
                    <xs:documentation>
                        The base Exception for all Easy-IP Exceptions
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EEasyIPServerError">
                <xs:annotation>
                    <xs:documentation>
                        Deprecated, do not use
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="ErrorCode" type="tns:TExceptionServer">
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="EasyIPCore___AddOrUpdateVirtualFile">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FilenameAndPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual file path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FileData" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                            <xs:annotation>
                                <xs:documentation>
                                    The binary file data you want to save.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FileDataLinkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    Instead of adding the file data, you can link to another virtual file that contains data. To do this, set this parameter to the ID of the virtual file you want to link to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___AddOrUpdateVirtualFileResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___AddVirtualDirectory">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DirectoryPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual directory path to add.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___AddVirtualDirectoryResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___CancelOperation">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___CancelOperationResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___CheckUserFunctionAllowed">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserFunction" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    A textual description of the user function.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RaiseException" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, an exception will be raised if the user is denied access to the function. If false, the function will return true or false depending on the result.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___CheckUserFunctionAllowedResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___CopyVirtualDirectoryContents">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SourceDirectory" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The source virtual directory.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DestinationDirectory" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The destination virtual directory.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CopyAsShorcutLinks" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, the virtual server files will be copied as links (shortcuts).
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___CopyVirtualDirectoryContentsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___DeleteDownloadFile">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FileId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the file you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___DeleteDownloadFileResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___DeleteVirtualDirectory">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DirectoryPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual directory path to delete.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___DeleteVirtualDirectoryResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___DeleteVirtualFile">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FilenameAndPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual file you want to delete.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___DeleteVirtualFileResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetAddressData">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet whose IP Address data you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordSkip" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to skip before starting to return data.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordCount" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAddressDataResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                        <xs:element name="Information" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Information about the records that are retrieved.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAddressData2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet whose IP Address data you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordSkip" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to skip before starting to return data.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordCount" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAddressData2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                        <xs:element name="Information" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Information about the records that are retrieved.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAutonomousNetworkNameFromId">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAutonomousNetworkNameFromIdResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAutonomousNetworkNotes">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAutonomousNetworkNotesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAutonomousNetworks">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="GetAll" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, all the autonomous networks are returned. This requires Administrator or Super Administrator privileges.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAutonomousNetworksResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAutonomousNetworks2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="GetAll" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, all the autonomous networks are returned. This requires Administrator or Super Administrator privileges.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetAutonomousNetworks2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetChangeLogEntries">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TableName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the table.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the record whose change log data you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetChangeLogEntriesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TChangeLogItems">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetChangeLogRevisions">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ChangeLogId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the change log entry whose revisions you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetChangeLogRevisionsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TChangeLogEntries">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetChildNodes">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ParentId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the parent item.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetChildNodesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetChildNodes2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ParentId" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetChildNodes2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetClientSettings">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetClientSettingsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TClientSettings">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetDownloadFilePart">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FileId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the server file you want to download.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FilePartNo" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The part number.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FilePartSize" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The size of the part.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetDownloadFilePartResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetDownloadFileSize">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FileId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the server file.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetDownloadFileSizeResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetEasyIPUser">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetEasyIPUserResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEasyIPUser">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetFullTextSearchProgress">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetFullTextSearchProgressResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Pending" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                        <xs:element name="Total" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                        <xs:element name="IndexesPerMinute" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetIPAddressesBySubnet">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet whose IP addresses you want to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetIPAddressesBySubnetResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetIPAddressesBySubnet2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetIPAddressesBySubnet2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetIPAddressIdAndSubnetId">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetIPAddressIdAndSubnetIdResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The returned subnet ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddressId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The returned IP address ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemData">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ItemId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the Group or Subnet whose children you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordSkip" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to skip before starting to return data.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordCount" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AllChildSubnets" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, all the children of the subnet will be returned. This includes children of children etc.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemDataResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                        <xs:element name="Information" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Information about the records that are retrieved.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemData2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ItemId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the Group or Subnet whose children you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordSkip" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to skip before starting to return data.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordCount" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AllChildSubnets" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, all the children of the subnet will be returned. This includes children of children etc.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemData2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                        <xs:element name="Information" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Information about the records that are retrieved.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemRangeLimits">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Id" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the group or subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemRangeLimitsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IPVersion" minOccurs="1" maxOccurs="1" type="tns:TIPVers">
                            <xs:annotation>
                                <xs:documentation>
                                    The returned IP version of the range.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="LowIPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The returned low IP address of the range.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="HighIPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The returned high IP address of the range.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetLastUndoItem">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetLastUndoItemResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TUndoItem">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetLicenceDetails">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetLicenceDetailsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetLinkedIPAddressDescriptions">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetLinkedIPAddressDescriptionsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TLinkedIPAddressDescriptions">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetLinkedIPAddresses">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IPAddressID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the IP address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetLinkedIPAddressesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TLinkedIPAddresses">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetLongSubnetPathFromSubnetId">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ItemId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the group or subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetLongSubnetPathFromSubnetIdResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetPingHistory">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AddressID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the IP address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetPingHistoryResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TPingHistoryResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetRootData">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the Autonomous Network whose root groups/subnets you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordSkip" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to skip before starting to return data.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordCount" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetRootDataResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                        <xs:element name="Information" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Information about the records that are retrieved.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetRootData2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the Autonomous Network whose root groups/subnets you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordSkip" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to skip before starting to return data.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RecordCount" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of records to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetRootData2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                        <xs:element name="Information" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Information about the records that are retrieved.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetRootNodes">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="GetAll" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, all the child nodes will be returned including children of children etc.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetRootNodesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetRootNodes2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="GetAll" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, all the child nodes will be returned including children of children etc.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetRootNodes2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemById">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ItemID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the group or subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemByIdResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemById2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ItemID" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemById2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemByInfo">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ItemName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the group or subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CidrMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the item (0 if the item is a group).
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemByInfoResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemByInfo2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ItemName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the group or subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CidrMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the item (0 if the item is a group).
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemByInfo2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemParentIds">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ItemId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the group or subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IncludeThisSubnet" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, the ID of the group or subnet will be added to the result.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetItemParentIdsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetSystemSettings">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetSystemSettingsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSystemSettings">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetTableUserFields">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TableName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the table.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetTableUserFieldsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TUserFields">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetTotalSubnetAndIPAddressCounts">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetTotalSubnetAndIPAddressCountsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubnetCount" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The subnet count result.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddressCount" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP address count result.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetUserDisabledFunctions">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetUserDisabledFunctionsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetUserInformation">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetUserInformationResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TUserInformation">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetUserMessages">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetUserMessagesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TUserInfoMessages">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetUserPrivileges">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetUserPrivilegesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TUserPrivileges">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetUserTables">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IncludeChildTables" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, linked tables will be included. e.g. SUBNETs_USER_DATA, ADDRESSES_USER_DATA
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IncludeLookups" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, the values of lookup lists will be included.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetUserTablesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TUserTables">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetVirtualDirectories">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ParentDirectory" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual parent directory.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetVirtualDirectoriesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TVirtualDirectories">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetVirtualFileData">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FilenameAndPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual file path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="LocalFileDate" minOccurs="1" maxOccurs="1" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>
                                    The file date of the locally cached file.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetVirtualFileDataResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                        <xs:element name="VirtualFileDate" minOccurs="1" maxOccurs="1" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>
                                    Returns the file data of the virtual server file.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetVirtualFiles">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ParentDirectory" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual parent directory.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FileType" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Specified the file type to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetVirtualFilesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TVirtualFiles">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___GetWebClientSettings">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___GetWebClientSettingsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TWebClientSettings">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___LinkedIPDescriptionExists">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Description" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The linked IP address description.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___LinkedIPDescriptionExistsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___MoveVirtualDirectory">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DirectoryPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The source virtual directory path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="NewPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The destination virtual directory path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___MoveVirtualDirectoryResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___MoveVirtualFile">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FilenameAndPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual file path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="NewPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new file path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___MoveVirtualFileResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___RenameVirtualDirectory">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DirectoryPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual directory path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="NewName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new name for the virtual directory.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___RenameVirtualDirectoryResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___RenameVirtualFile">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FilenameAndPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual file path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="NewName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new name for the virtual file.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___RenameVirtualFileResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___SearchARPEntries">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SearchText" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The search text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchARPEntriesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchARPEntries2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SearchText" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The search text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchARPEntries2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchDatabaseNative">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TableId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the table you want to search.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FieldIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the fields you want to search. If this parameter is nil or contains no items, all the fields will be searched.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SearchText" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The text that you want to search for.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SearchOption" minOccurs="1" maxOccurs="1" type="tns:TSearchOption">
                            <xs:annotation>
                                <xs:documentation>
                                    The options to use to perform the search.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchDatabaseNativeResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                        <xs:element name="Information" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Returns information about the search.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchDatabaseNative2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TableId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the table you want to search.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FieldIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the fields you want to search. If this parameter is nil or contains no items, all the fields will be searched.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SearchText" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The text that you want to search for.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SearchOption" minOccurs="1" maxOccurs="1" type="tns:TSearchOption">
                            <xs:annotation>
                                <xs:documentation>
                                    The options to use to perform the search.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchDatabaseNative2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                        <xs:element name="Information" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Returns information about the search.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchDatabaseFTS">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TableId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the table you want to search.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FieldId" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                        <xs:element name="SearchText" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The text that you want to search for.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ExactMatchesOnly" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, only exact matches are returned. If false, items that begin with the seach text will be included.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchDatabaseFTSResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                        <xs:element name="Indexing" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, the database is currently being indexed.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchDatabaseFTS2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TableId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the table you want to search.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FieldId" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                        <xs:element name="SearchText" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The text that you want to search for.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ExactMatchesOnly" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, only exact matches are returned. If false, items that begin with the seach text will be included.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchDatabaseFTS2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                        <xs:element name="Indexing" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, the database is currently being indexed.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchItems">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SearchText" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The text that you want to search for.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="MaxResults" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The maximum number of results to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SearchItemsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSubnetsArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SendEmail">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Recipient" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The email recipient.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CC" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The recipient that will be CC&apos;d.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Subject" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The subject of the email.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Body" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The email body text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AttachmentText" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the attachment.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AttachmentFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the server file that you want to attach.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SendEmailResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___SetClientSettings">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ClientSettings" minOccurs="1" maxOccurs="1" type="tns:TClientSettings">
                            <xs:annotation>
                                <xs:documentation>
                                    The client settings.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SetClientSettingsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___SetVirtualFileReadOnly">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FilenameAndPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual directory path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ReadOnly" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SetVirtualFileReadOnlyResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___SetWebClientSettings">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="WebClientSettings" minOccurs="1" maxOccurs="1" type="tns:TWebClientSettings">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___SetWebClientSettingsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPCore___VirtualDirectoryExists">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DirectoryPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual directory path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___VirtualDirectoryExistsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___VirtualFileExists">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FilenameAndPath" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual file path.

                                    The UserDir macro will be expanded to the current user&apos;s virtual home directory.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPCore___VirtualFileExistsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___AuthenticateDiscoveryBot">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SharedKeyHash" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The hash of the shared key.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ClientVersion" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The client version. If this parameter is set to 0, no compatibility checks will be made on the server. It is then the responsibility of the client to make sure that it is compatible with the server.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="InterfaceVersion" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The interface version. If this parameter is set to 0, no compatibility checks will be made on the server. It is then the responsibility of the client to make sure that it is compatible with the server.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ResetDiscoveries" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    Then true, all discoveries associated with the disovery bot will be reset.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___AuthenticateDiscoveryBotResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TDiscoveryBotSettings">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___AuthenticateDiscoveryBot2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="BotName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the discovery bot.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SharedKeyHash" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The hash of the shared key.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ClientVersion" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The client version. If this parameter is set to 0, no compatibility checks will be made on the server. It is then the responsibility of the client to make sure that it is compatible with the server.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="InterfaceVersion" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The interface version. If this parameter is set to 0, no compatibility checks will be made on the server. It is then the responsibility of the client to make sure that it is compatible with the server.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ResetDiscoveries" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    Then true, all discoveries associated with the disovery bot will be reset.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___AuthenticateDiscoveryBot2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TDiscoveryBotSettings">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___ChangePasswordWithOldPassword">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Username" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The username in clear text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="OldPassword" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The old password in clear text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="NewPassword" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new password in clear text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___ChangePasswordWithOldPasswordResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="LoginService___ChangePasswordWithOldPassword2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="EncryptedUsername" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The encrypted username.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="EncryptedOldPassword" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The encrypted old password.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="EncryptedNewPassword" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The encrypted new password.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___ChangePasswordWithOldPassword2Response">
                <xs:complexType />
            </xs:element>
            <xs:element name="LoginService___ChangePasswordWithVerificationCode">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Username" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The username in clear text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="VerificationCode" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The verification code.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="NewPassword" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new password in clear text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___ChangePasswordWithVerificationCodeResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="LoginService___ChangePasswordWithVerificationCode2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="EncryptedUsername" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The encrytped username.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="VerificationCode" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The verification code.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="EncryptedNewPassword" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The encrytped new password.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___ChangePasswordWithVerificationCode2Response">
                <xs:complexType />
            </xs:element>
            <xs:element name="LoginService___DownloadClientInstallerChunk">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="PartNo" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    Species the chunk part number.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="PartSize" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    Specifies the chunk part size.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___DownloadClientInstallerChunkResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___DownloadIntallerChunk">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ClientType" minOccurs="1" maxOccurs="1" type="tns:TClientType">
                            <xs:annotation>
                                <xs:documentation>
                                    Specifies the type of client installer.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="PartNo" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    Species the chunk part number.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="PartSize" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    Specifies the chunk part size.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___DownloadIntallerChunkResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___GetDownloadClientSize">
                <xs:complexType />
            </xs:element>
            <xs:element name="LoginService___GetDownloadClientSizeResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___GetDownloadSize">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ClientType" minOccurs="1" maxOccurs="1" type="tns:TClientType">
                            <xs:annotation>
                                <xs:documentation>
                                    Specifies the type of client installer.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___GetDownloadSizeResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___LoggedIn">
                <xs:complexType />
            </xs:element>
            <xs:element name="LoginService___LoggedInResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___Login">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Username" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The username in clear text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Password" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The password in clear text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ClientVersion" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The client version. If this parameter is set to 0, no compatibility checks will be made on the server. It is then the responsibility of the client to make sure that it is compatible with the server.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="InterfaceVersion" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The interface version. If this parameter is set to 0, no compatibility checks will be made on the server. It is then the responsibility of the client to make sure that it is compatible with the server.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ClientType" minOccurs="1" maxOccurs="1" type="tns:TClientType">
                            <xs:annotation>
                                <xs:documentation>
                                    The type of client that is logging on.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___LoginResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TLoginInfo">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___Login2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="EncryptedUsername" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The encrypted username.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="EncryptedPassword" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The encrypted password.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ClientVersion" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The client version. If this parameter is set to 0, no compatibility checks will be made on the server. It is then the responsibility of the client to make sure that it is compatible with the server.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="InterfaceVersion" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The interface version. If this parameter is set to 0, no compatibility checks will be made on the server. It is then the responsibility of the client to make sure that it is compatible with the server.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ClientType" minOccurs="1" maxOccurs="1" type="tns:TClientType">
                            <xs:annotation>
                                <xs:documentation>
                                    The type of client that is logging on.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___Login2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TLoginInfo">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___Logout">
                <xs:complexType />
            </xs:element>
            <xs:element name="LoginService___LogoutResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="LoginService___ForgottenPassword">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Username" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The username in clear text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___ForgottenPasswordResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="LoginService___RequestUsername">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="EmailAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The email address in clear text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LoginService___RequestUsernameResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___AddDiscoveryBot">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Name" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the Discovery Bot
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP Address of the Discovery Bot
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SharedKey" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The shared key that the Discovery Bot has been configured with
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___AddDiscoveryBotResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___AddFieldPendingChange">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FieldName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the field to be updated
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="TableName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the table to to which the field belongs
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FieldUpdateAction" minOccurs="1" maxOccurs="1" type="tns:TFieldUpdateAction">
                            <xs:annotation>
                                <xs:documentation>
                                    The type of action to be applied to the field
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FieldSize" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The new size for the field. The size must be the same as or greater than the current value
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FieldType" minOccurs="1" maxOccurs="1" type="tns:TEIPDataType">
                            <xs:annotation>
                                <xs:documentation>
                                    The new data type for the field
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___AddFieldPendingChangeResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___AddFieldPendingChange2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FieldName" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="TableName" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="NewFieldName" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="FieldUpdateAction" minOccurs="1" maxOccurs="1" type="tns:TFieldUpdateAction">
                        </xs:element>
                        <xs:element name="FieldSize" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                        <xs:element name="FieldType" minOccurs="1" maxOccurs="1" type="tns:TEIPDataType">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___AddFieldPendingChange2Response">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___AddUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Username" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The username for the new user.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Name" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The full name of the new user.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UserType" minOccurs="1" maxOccurs="1" type="tns:TUserType">
                            <xs:annotation>
                                <xs:documentation>
                                    The user type of the new user.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AuthenticationType" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The authentication type of the new user. Use &apos;native&apos; for native Easy-IP users. Use &apos;winauth&apos; for Windows (Active Directory) users.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Email" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The email addres of the new user (optional).
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ForcePasswordChangeNextLogin" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If TRUE, the user will need to change their password the next time they login.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="GroupId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the user group to which the user is added. The user will acquire all the privileges of the group they are added to. If this parameter is 0, the user will not be added to a group and their privileges can be changed independently.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Password" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The password for the new user. This parameter is only valid for Native Easy-IP Users.

                                    If the password parameter is left empty and the Authentication Type is &apos;native&apos;, a new, random password will be generated and sent to the email address of the new user.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="EncryptedPassword" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If this parameter is set to TRUE, the server will expect the password parameter to be encrypted. It should only be set to FALSE for all third party API clients.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AccountDisabled" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    The user&apos;s Easy-IP account will be disabled if this parameter is set to TRUE.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___AddUserResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___AddUserGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="GroupName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the new user group.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___AddUserGroupResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___BackupDatabase">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="MetadataOnly" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If TRUE, only the database Metadata will be backed up.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___BackupDatabaseResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___CopyFilesToUsers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationID" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SourceVirtualFileIDs" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the Virtual File IDs that you want to copy to the users.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DestinationUserDirectory" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The directory path under the user directory to which you want the files to be copied.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UserIDs" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the users whose virtual directories you want to copy the files to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="OverwriteFiles" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When TRUE, existing files wll be overwritten.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CreateDirectories" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When TRUE, new directories will be created.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CopyAsShortcut" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When TRUE, shortcuts will be created rather than actual file data. This is recommended as it saves space in the database.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___CopyFilesToUsersResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DatabaseScriptTestCompile">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DeltaChangeValues" minOccurs="1" maxOccurs="1" type="tns:TEasyIPDeltaChangeValues">
                            <xs:annotation>
                                <xs:documentation>
                                    The field values that will be passed to the script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Script" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The script that will be tested. Currently, the script supports Pascal syntax.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DatabaseScriptTestCompileResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="DeltaChangeValues" minOccurs="1" maxOccurs="1" type="tns:TEasyIPDeltaChangeValues">
                            <xs:annotation>
                                <xs:documentation>
                                    The field values that will be passed to the script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ErrorMessage" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The error message (if any) that was generated by the script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ErrorX" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The X position of the error in the script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ErrorY" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The Y position of the error in the script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DatabaseScriptTestRun">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DeltaChangeValues" minOccurs="1" maxOccurs="1" type="tns:TEasyIPDeltaChangeValues">
                            <xs:annotation>
                                <xs:documentation>
                                    The field values that will be passed to the script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Script" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The script that will be tested. Currently, the script supports Pascal syntax.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DatabaseScriptTestRunResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="DeltaChangeValues" minOccurs="1" maxOccurs="1" type="tns:TEasyIPDeltaChangeValues">
                            <xs:annotation>
                                <xs:documentation>
                                    The field values that will be passed to the script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ErrorMessage" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The error message (if any) that was generated by the script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ErrorX" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The X position of the error in the script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ErrorY" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The Y position of the error in the script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteDatabaseBackup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="BackupFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The filename of the backup file that you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteDatabaseBackupResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteDatabaseFile">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DatabaseFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The filename of the database you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteDatabaseFileResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteDiscoveryBot">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DiscoveryBotId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the Discovery Bot that you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteDiscoveryBotResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteEmailQueueItems">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="EmailQueueItemIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of Email queue item IDs that will deleted from the Email queue.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteEmailQueueItemsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteFieldPendingChange">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FieldName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The field name of the pending change item you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="TableId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The table ID of the pending change item you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteFieldPendingChangeResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteQueuedDiscovery">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DiscoveryId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the discovery item you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteQueuedDiscoveryResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the user you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteUserResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteUserGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="GroupId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the user group you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DeleteUserGroupResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___DisconnectUserSessions">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SessionIds" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the session IDs of the sessions you want to disconnect.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Reason" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The reason will be pushed to the user in the disconnect event. The reason can be displayed by the client if required.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___DisconnectUserSessionsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___EmailUsers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of IDs of the users that you want to send the email to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Subject" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The subject of the email.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="MessageBody" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The text body of the email.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___EmailUsersResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___EnableSubnetValidityChecks">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Enable" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    Enable or disable the feature
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___EnableSubnetValidityChecksResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___ForceUserPasswordChange">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the User account.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___ForceUserPasswordChangeResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetAuthenticationDetails">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetAuthenticationDetailsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TAuthenticationDetails">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetBackupFilelist">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetBackupFilelistResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TFileInfoArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetClientSettings">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Username" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The client settings will be returned for the account specified in this parameter.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetClientSettingsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TClientSettings">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetDatabaseBackupLog">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="BackupFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The filename of the backup file whose log file you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetDatabaseBackupLogResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetDatabaseRestoreLog">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DatabaseFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The filename of the restore file whose log file you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetDatabaseRestoreLogResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetEasyIPUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserID" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the user you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetEasyIPUserResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEasyIPUser">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetEasyIPUserGroups">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetEasyIPUserGroupsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEasyIPUserGroups">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetEasyIPUserGroupsAndUsers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IncludeDeletedUsers" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When TRUE, deleted users will be included in the user lists.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetEasyIPUserGroupsAndUsersResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEasyIPUserGroups">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetEasyIPUsers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IncludeDeletedUsers" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When TRUE, deleted users will be included in the list.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetEasyIPUsersResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEasyIPUsers">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetEmailQueueItems">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetEmailQueueItemsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEmailQueueItems">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetFieldPendingUpdates">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetFieldPendingUpdatesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TFieldPendingUpdates">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetRestoredDatabaseFilelist">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetRestoredDatabaseFilelistResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TFileInfoArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetServerRestartDateTime">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetServerRestartDateTimeResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:dateTime">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetServerSettings">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetServerSettingsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TServerSettings">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetTableScript">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TableName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Specifies the name of the table whose scripts you want to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetTableScriptResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TTableScript">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetUserDisabledFunctions">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The user ID of the user functions that you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetUserDisabledFunctionsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetUserPrivileges">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The user ID whose privileges you want to retrieve.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetUserPrivilegesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TUserPrivileges">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetUserSessions">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetUserSessionsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TUserSessions">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___GetValidFieldDataTypes">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___GetValidFieldDataTypesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TFieldDataTypeInfos">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___PurgeLogsAndBackups">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="PurgeBackupsDays" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of days of backups to keep. If this parameter is zero, the backups will not be purged.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="PurgeChangeLogDays" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of days of purge logs to keep. If this parameter is zero, the purge logs will not be purged.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="PurgePingLogDays" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of days of ping logs to keep. If this parameter is zero, the ping logs will not be purged.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___PurgeLogsAndBackupsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="Errors" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    If any errors occur, they are returned in this parameter.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___ReloadSettings">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___ReloadSettingsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___RenameUserGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="GroupId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the user group you want to rename.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="GroupName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new name for the group.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___RenameUserGroupResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___RestartServer">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="RestartDateTime" minOccurs="1" maxOccurs="1" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>
                                    The date/time you want the server to restart.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___RestartServerResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___RestoreDatabase">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="BackupFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the backup file you want to create.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___RestoreDatabaseResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___ScheduleDatabaseBackup">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___ScheduleDatabaseBackupResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetClientSettings">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Username" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The username of the client (account) whose settings you want to update.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ClientSettings" minOccurs="1" maxOccurs="1" type="tns:TClientSettings">
                            <xs:annotation>
                                <xs:documentation>
                                    The new client settings.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetClientSettingsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetDiscoveryBotEnabled">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DiscoveryBotId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the Discovery Bot.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Enabled" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    Whether or not the Discovery Bot should be enabled.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetDiscoveryBotEnabledResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetServerSettings">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ServerSettings" minOccurs="1" maxOccurs="1" type="tns:TServerSettings">
                            <xs:annotation>
                                <xs:documentation>
                                    The new server settings.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetServerSettingsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetTableScript">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TableScript" minOccurs="1" maxOccurs="1" type="tns:TTableScript">
                            <xs:annotation>
                                <xs:documentation>
                                    The new database script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetTableScriptResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserDisabledFunctions">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the users whose disabled functions you want to update.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DisabledUserFunctions" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the disabled user function strings.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserDisabledFunctionsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserField">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserField" minOccurs="1" maxOccurs="1" type="tns:TUserField">
                            <xs:annotation>
                                <xs:documentation>
                                    The user field properties.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserFieldResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserFieldDisplayOrder">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserFieldDisplayOrders" minOccurs="1" maxOccurs="1" type="tns:TUserFieldDisplayOrders">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserFieldDisplayOrderResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of user IDs that will be moved to the user group.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="GroupId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the group that the users will be moved to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserGroupResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserPassword">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The user ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Password" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new password.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="EncryptedPassword" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If this parameter is TRUE, the server will expect it to be encrypted.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserPasswordResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserPrivileges">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of user IDs whose privileges will be updated.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UserPrivileges" minOccurs="1" maxOccurs="1" type="tns:TUserPrivileges">
                            <xs:annotation>
                                <xs:documentation>
                                    The user privileges that will be applied to the users.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserPrivilegesResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserProperties">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserId" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The user ID of the account you want to update.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Name" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new full name.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UserType" minOccurs="1" maxOccurs="1" type="tns:TUserType">
                            <xs:annotation>
                                <xs:documentation>
                                    The new user type.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AuthenticationType" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new authentication type.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Email" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new email address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ForcePasswordChangeNextLogin" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    Whether or not the user needs to change their password before logging in.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AccountDisabled" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    Whether or not the user account is disabled.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___SetUserPropertiesResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___StartFullTextSearchIndexing">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___StartFullTextSearchIndexingResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___UpdateDiscoveryBot">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DiscoveryBotId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the discovery bot.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Name" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new name for the discovery bot.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new IP Address for the Discovery Bot.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SharedKey" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new shared key for the Discovery Bot.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___UpdateDiscoveryBotResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___UpdateEmailQueueItems">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="EmailQueueItemIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the email queue item IDs you want to update.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Status" minOccurs="1" maxOccurs="1" type="tns:TEmailQueueItemStatus">
                            <xs:annotation>
                                <xs:documentation>
                                    The new status for the email queue items.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___UpdateEmailQueueItemsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___UpdateMACAddressPrefixes">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPAdmin___UpdateMACAddressPrefixesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___UserExists">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Username" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The username you want to check.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPAdmin___UserExistsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddAddressesToSubnet">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet that you want to add IP addresses to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddresses" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                            <xs:annotation>
                                <xs:documentation>
                                    The list of IP Addresses that you want to add. The addresses must fall into the range of the subnet specified by the subnet ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ReturnAddedAddresses" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, a list of IP addresses that are added are returned in the result.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddAddressesToSubnetResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddAddressRangeToSubnet">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet that you want to add IP addresses to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="LowIPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The low IP Address of the range.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="HighIPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The high IP Address of the range.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ReturnAddedAddresses" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, a list of IP addresses that are added are returned in the result.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddAddressRangeToSubnetResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddAllAddressesToSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.                                                                        The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the subnets that you want to add IP addresses to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ReturnAddedAddresses" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    If true, a list of IP addresses that are added are returned in the result.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddAllAddressesToSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddAllChildSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the subnets that you want to add child subnets to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ChildCidr" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask that will be used for the child subnets.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddAllChildSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddAutonomousNetwork">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Name" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of of the new autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Notes" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Notes for the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddAutonomousNetworkResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddChildSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet that you want to add the child subnets to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ChildSubnets" minOccurs="1" maxOccurs="1" type="tns:TSubnetsArray">
                            <xs:annotation>
                                <xs:documentation>
                                    A list of the child subnets that you want to add.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddChildSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network that you want to add the group to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ParentId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the group that you want to add the new group to. If this value is 0, the group will be added as a direct child of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="GroupName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the new group.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPVers" minOccurs="1" maxOccurs="1" type="tns:TIPVers">
                            <xs:annotation>
                                <xs:documentation>
                                    If this group defines a range, set IPVers to ivIPv4 or ivIPv6.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="LowAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    If this group defines a range, set to the Low Address of the range. Leave as an empty string if you do not want to define a low end for the range.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="HighAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    If this group defines a range, set to the High Address of the range. Leave as an empty string if you do not want to define a high end for the range.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddGroupResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddGroups">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The autonomous network ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ParentId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the parent group. Use 0 if the parent is an autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="GroupNames" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                            <xs:annotation>
                                <xs:documentation>
                                    The array of group names.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddGroupsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddIPAddressLinkDescription">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Description" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP Address link description.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddIPAddressLinkDescriptionResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddIPAddressLinks">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IPAddressIDs1" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The first array of IP address IDs.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddressIDs2" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The second array of IP address IDs.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="LinkDescription" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    A description for the link relationship.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddIPAddressLinksResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPEdit___AddSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the parent autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ParentId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the parent group. This parameter should be 0 if you want the subnet to be a direct child of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Subnets" minOccurs="1" maxOccurs="1" type="tns:TSubnetsArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddSubnetsToCorrectParents">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationID" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AutonomousNetworkID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the parent autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DefaultParentID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the group that a subnet will be added to if it&apos;s parent subnt does not exist.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Subnets" minOccurs="1" maxOccurs="1" type="tns:TSubnetsArray">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the subnets you want to add.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___AddSubnetsToCorrectParentsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___ApplyDelta">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="EasyIPDelta" minOccurs="1" maxOccurs="1" type="tns:TEasyIPDelta">
                            <xs:annotation>
                                <xs:documentation>
                                    The Delta changes that you want to apply.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___ApplyDeltaResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteAddressesFromSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The list of IDs of the subnets whose IP addresses you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteAddressesFromSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteAutonomousNetwork">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Id" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the Autonomous Network that you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteAutonomousNetworkResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteGroupsOrSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ItemIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the groups and/or subnets you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteGroupsOrSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteIPAddressesById">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet to which the IP addresses belong.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddressIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the IDs of the IP addresses you want to delete. All the IP addresses must belong to the same subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteIPAddressesByIdResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteIPAddressLinks">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="LinkIDs" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the IP Address Link IDs you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddressIDs" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the IP Address IDs that are associated with the Link IDs.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteIPAddressLinksResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteSubnetChildren">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ParentSubnetIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the IDs of the parent subnets whose child subnets you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___DeleteSubnetChildrenResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___ImportFromXML">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DefaultParentAutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network that will be used for groups and subnets that do not have a logical parent.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DefaultParentGroupId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the group that will be used for groups and subnets that do not have a logical parent. Use 0 to import directly to the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="XML" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The XML data.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CreateChildSubnetsWithNoSpecificParent" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    Then true, child subnets that do not have a specific parent will be created.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___ImportFromXMLResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___MoveGroupsAndSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DestinationAutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the destination autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DestinationId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the destination group. Use 0 to move as a direct child of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IdsToMove" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the groups/subnets you want to move.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___MoveGroupsAndSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___PasteGroupStructure">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SrcGroupIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the groups you want to copy.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DstGroupIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the groups that you want to paste to.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DstAutonomousNetwork" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the destination autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="PreserveRestrictions" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    Then true, group restrictions will be preserved.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="PasteUserFields" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, user field data will be copied to the new records.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___PasteGroupStructureResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___PasteSubnetStructure">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SrcSubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the source subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DstSubnetIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the destination subnets.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="PasteUserFields" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, user field data will also be pasted.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___PasteSubnetStructureResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___RemoveParentSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the subnets whose parents you want to remove.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___RemoveParentSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___ReparentChildSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ParentSubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the parent subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="NewParentSubnet" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new subnet that will be added as a child of the parent subnet and a parent of the moved child subnets.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="NewParentCidr" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The CIDR mask of the new subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetIdsToMove" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the children that you want to reparent.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="PreserveChildren" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, the child subnets will be moved. When false, the child subnets will be deleted and all their IP addresses moved to the new subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___ReparentChildSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___Undo">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___UndoResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___UpdateAutonomousNetwork">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Id" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="NewName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new name for the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Notes" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The notes for the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___UpdateAutonomousNetworkResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPEdit___UpdateGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="GroupId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The group ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="GroupName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The new group name.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPVers" minOccurs="1" maxOccurs="1" type="tns:TIPVers">
                            <xs:annotation>
                                <xs:documentation>
                                    If this is to be a limited group, set the IP version.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="LowAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    If this is to be a limited group, set the low IP address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="HighAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    If this is to be a limited group, set the high address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___UpdateGroupResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___UpdateUserFields">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TableName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the table to which the fields belong.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="KeyId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the record you want to update.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FieldNames" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                            <xs:annotation>
                                <xs:documentation>
                                    The names of the fields you want to update.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="FieldValues" minOccurs="1" maxOccurs="1" type="tns:TVarArray">
                            <xs:annotation>
                                <xs:documentation>
                                    The new values of the fields.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___UpdateUserFieldsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPEdit___CreateNextAvailableIPAddress">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationID" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet that you want to create the IP address in.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UpdateFieldName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    If this variable has a value, Easy-IP will update the field with the value in UpdateFieldValue.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UpdateFieldValue" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The value that will be entered in the field identified by the UpdateFieldName parameter.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___CreateNextAvailableIPAddressResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                        <xs:element name="IPAddressID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the IP Address that has been created.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___ReserveNextAvailableIPAddress">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubnetID" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet that you want to reserve the IP address in.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ComparisonFieldName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The first IP address that has a fieldname matching this parameter and a value matching the ComparisionFieldValue will be returned.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ComparisonFieldValue" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The first IP address that has a fieldname matching the ComparisonFieldName parameter and a value matching this parameter will be returned.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UpdateFieldName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    If this variable has a value, Easy-IP will update the field with the value in UpdateFieldValue.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UpdateFieldValue" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The value that will be entered in the field identified by the UpdateFieldName parameter.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___ReserveNextAvailableIPAddressResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___SearchAndReplace">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="IDs" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    Search and replace text in user editable fields
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="TableID" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                        <xs:element name="IncludeChildren" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="SearchType" minOccurs="1" maxOccurs="1" type="tns:TSearchOption">
                        </xs:element>
                        <xs:element name="CaseSensitive" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="SearchText" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="ReplaceText" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="FieldNames" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___SearchAndReplaceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEditResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___SetSubnetAttributes">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubnetAttributes" minOccurs="1" maxOccurs="1" type="tns:TSubnetAttributes">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPEdit___SetSubnetAttributesResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPTools___CheckTemplateParameters">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Parameters" minOccurs="1" maxOccurs="1" type="tns:TTemplateParameters">
                            <xs:annotation>
                                <xs:documentation>
                                    The template parameters that you want to check.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___CheckTemplateParametersResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPTools___CompileScript">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TemplateScript" minOccurs="1" maxOccurs="1" type="tns:TTemplateScript">
                            <xs:annotation>
                                <xs:documentation>
                                    The template script that you want to compile.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___CompileScriptResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="ErrorX" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    If an error occurs, this parameter returns it&apos;s x co-ordinate.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ErrorY" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    If an error occurs, this parameter returns it&apos;s y co-ordinate.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Log" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The template execution log.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___CompileScript2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TemplateScript" minOccurs="1" maxOccurs="1" type="tns:TTemplateScript2">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___CompileScript2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="ErrorX" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                        <xs:element name="ErrorY" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                        <xs:element name="Log" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="ErrorMessage" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___CopyTrees">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.                                                                        The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ItemIDs" minOccurs="1" maxOccurs="1" type="tns:TSubnetIds">
                            <xs:annotation>
                                <xs:documentation>
                                    The subnet IDs.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___CopyTreesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___ExecuteTemplate">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.                                                                        The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="TemplateScript" minOccurs="1" maxOccurs="1" type="tns:TTemplateScript">
                            <xs:annotation>
                                <xs:documentation>
                                    The script that you want to execute.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ItemIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the items that you want to execute the template on.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddressIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the IP addresses that you want to execute the template on.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___ExecuteTemplateResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="Log" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The template execution log.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___ExecuteTemplate2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationID" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="TemplateScript" minOccurs="1" maxOccurs="1" type="tns:TTemplateScript2">
                        </xs:element>
                        <xs:element name="AutonomousNetworkID" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                        <xs:element name="ItemIDs" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                        </xs:element>
                        <xs:element name="IPAddressIDs" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___ExecuteTemplate2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="Log" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___ExportToCSV">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.                                                                        The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The autonomous network ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ItemIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the IDs of the groups and/or subnets you want to export.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="TableName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the table you want to export (SUBNETS | ADDRESSES)
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AllFields" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, system fields will be exported.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IncludeChildren" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When checked, the children of the groups/subnets will also be exported.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="QuoteCharacter" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The character to be used as a quote.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Delimiter" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The character to be used as the delimiter.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="EOL" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The end of line string.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IncludeColumnHeaders" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, column headers will be included.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___ExportToCSVResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___ExportToHTML">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.                                                                        The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The autonomous network ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ItemIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the IDs of the groups and/or subnets you want to export.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="TableName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the table you want to export (SUBNETS | ADDRESSES)
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AllFields" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, system fields will be exported.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IncludeChildren" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When checked, the children of the groups/subnets will also be exported.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IncludeColumnHeaders" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, column headers will be included.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AddTableBorders" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, table will include borders.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___ExportToHTMLResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___ExportToXML">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.                                                                        The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The autonomous network ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ItemIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    An array of the IDs of the groups and/or subnets you want to export.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IncludeIPAddresses" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, IP addresses will be included in the export.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AllFields" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, system fields will be exported.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UseIds" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, field IDs will be used instead of field names.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IncludeChildren" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When checked, the children of the groups/subnets will also be exported.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Compress" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, the xml will be compressed.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___ExportToXMLResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___GenerateDefaultValues">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TemplateScript" minOccurs="1" maxOccurs="1" type="tns:TTemplateScript">
                            <xs:annotation>
                                <xs:documentation>
                                    The template script.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ItemId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the group or subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddressId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the IP address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___GenerateDefaultValuesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="UpdatedParameters" minOccurs="1" maxOccurs="1" type="tns:TTemplateParameters">
                            <xs:annotation>
                                <xs:documentation>
                                    Returns the updated parameters.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___GenerateDefaultValues2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="TemplateScript" minOccurs="1" maxOccurs="1" type="tns:TTemplateScript2">
                        </xs:element>
                        <xs:element name="AutonomousNetworkID" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                        <xs:element name="ItemID" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                        <xs:element name="IPAddressID" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___GenerateDefaultValues2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="UpdatedParameters" minOccurs="1" maxOccurs="1" type="tns:TTemplateParameters">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___GetMissingSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.                                                                        The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The autonomous network ID.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="LowIPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The low IP address of the range.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="HighIPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The high IP address of the range.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="MinCIDR" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The minimum CIDR mask that can be used to generate the missing subnets.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="MaxCIDR" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The maximum CIDR mask that can be used to generate the missing subnets.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ParentId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    If you want to find the missing children of a specific subnet, include the ID of the parent subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___GetMissingSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TMissingSubnets">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPTools___GetTemplateScriptHelp">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPTools___GetTemplateScriptHelpResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetDiscoverableSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ItemIds" minOccurs="1" maxOccurs="1" type="tns:TSubnetIds">
                            <xs:annotation>
                                <xs:documentation>
                                    The subnets IDs that you want to use as a base for the discovery.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IncludeChildren" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When TRUE, the child subnets of the subnets identified by the subnet IDs will be included.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddressesOnly" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When TRUE, only subnets that have IP addresses will be returned.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetDiscoverableSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TDiscoverableSubnets">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetHostDiscoverySubnetIPAddresses">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The Subnet ID of the subnet whose IP Addresses you want to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SkipPastIPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Use this parameter to define which IP address should be skipped. The first IP address DiscoveryData that is returned will be for the first IP Address after the one defined here. If the field is left empty, DiscoveryData will start at the first IP Address in the subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Count" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The number of IP Address items to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="OnlyExistingIPAddresses" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, only IP Addresses that already exist in the database will be returned.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetHostDiscoverySubnetIPAddressesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TDiscoveryData">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetHostDiscoveryIPAddresses">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet to which the IP Address IDs belong.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPAddressIds" minOccurs="1" maxOccurs="1" type="tns:TInt64Array">
                            <xs:annotation>
                                <xs:documentation>
                                    The IDs of the IP Addresses that you want to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetHostDiscoveryIPAddressesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TDiscoveryData">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___UpdateDiscoveryData">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationId" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DiscoveryData" minOccurs="1" maxOccurs="1" type="tns:TDiscoveryData">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP Address updates that will be applied to the database.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="UndoId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The Undo ID for the current discovery. If this parameter is set to 0, a new Undo ID will be generated.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___UpdateDiscoveryDataResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TDiscoveryUpdateResult">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___BotGetDiscoverableSubnets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IPAddressesOnly" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, only existing IP Addresses will be discovered.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___BotGetDiscoverableSubnetsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TDiscoverableSubnets">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___BotUpdateDiscoveryProgress">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ProgressPos" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The progress position.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ProgressMax" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The maximum progress.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="LogText" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The log text. This should only be set for the last progress update of the discovery.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___BotUpdateDiscoveryProgressResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___BotUpdateDiscoveryStatus">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DiscoveryStatus" minOccurs="1" maxOccurs="1" type="tns:TDiscoveryStatus">
                            <xs:annotation>
                                <xs:documentation>
                                    The current status of the bot discovery.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___BotUpdateDiscoveryStatusResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPDiscovery___BotCancelDiscovery">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DiscoveryId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the bot discovery you want to cancel.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___BotCancelDiscoveryResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPDiscovery___QueueDiscovery">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DiscoveryBotId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the discovery bot that you want to execute the discovery on.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DiscoveryScriptFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual filename of the discovery script you want to execute.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="DiscoveryIds" minOccurs="1" maxOccurs="1" type="tns:TSubnetIds">
                            <xs:annotation>
                                <xs:documentation>
                                    The subnets that you want to discover.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ScheduledRunTime" minOccurs="1" maxOccurs="1" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>
                                    The time you want the discovery to run.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ScheduledRunFrequency" minOccurs="1" maxOccurs="1" type="tns:TScheduleEventFrequencyType">
                            <xs:annotation>
                                <xs:documentation>
                                    The frequency that you want the discovery to run. Currently not supported.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___QueueDiscoveryResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:long">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetDiscoveryBots">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetDiscoveryBotsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TDiscoveryBots">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetQueuedDiscoveries">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DiscoveryBotId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the discovery bot whose discoveries you want to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetQueuedDiscoveriesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TQueuedDiscoveries">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___DeleteQueuedDiscovery">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DiscoveryId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the discovery that you want to delete.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___DeleteQueuedDiscoveryResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetUserQueuedDiscoveries">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetUserQueuedDiscoveriesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TQueuedDiscoveries">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetDiscoveryLog">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DiscoveryId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the discovery log you want to return.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPDiscovery___GetDiscoveryLogResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___ExecuteQuery">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationID" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="QuerySQL" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The SQL query string.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Parameters" minOccurs="1" maxOccurs="1" type="tns:TParamList">
                            <xs:annotation>
                                <xs:documentation>
                                    The query parmeters.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RunAsAdministrator" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, the query will be run in administrator mode. This allows access to all tables in the database and can only be executed by an Administrator or Super Administrator.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___ExecuteQueryResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___ExecuteQuery2">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationID" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="QuerySQL" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The SQL query string.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Parameters" minOccurs="1" maxOccurs="1" type="tns:TParamList">
                            <xs:annotation>
                                <xs:documentation>
                                    The query parameters.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="RunAsAdministrator" minOccurs="1" maxOccurs="1" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>
                                    When true, the query will be run in administrator mode. This allows access to all tables in the database and can only be executed by an Administrator or Super Administrator.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___ExecuteQuery2Response">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TSimpleData">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___ExportQuery">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationID" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ReportFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual filename of the report that you want to run.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Parameters" minOccurs="1" maxOccurs="1" type="tns:TParamList">
                            <xs:annotation>
                                <xs:documentation>
                                    The query parameters.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="QueryExportType" minOccurs="1" maxOccurs="1" type="tns:TQueryExportType">
                            <xs:annotation>
                                <xs:documentation>
                                    The format that you want to use for the exported data.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ExportParamNames" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                            <xs:annotation>
                                <xs:documentation>
                                    Additional parameters for the export. These parameters vary depending on the QueryExportType.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ExportParamValues" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                            <xs:annotation>
                                <xs:documentation>
                                    Additional parameter values for the export. These parameter values vary depending on the QueryExportType.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___ExportQueryResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___ExportQueryAndEmail">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationID" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ReportFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual filename of the report that you want to run.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Parameters" minOccurs="1" maxOccurs="1" type="tns:TParamList">
                            <xs:annotation>
                                <xs:documentation>
                                    The query parameters.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="QueryExportType" minOccurs="1" maxOccurs="1" type="tns:TQueryExportType">
                            <xs:annotation>
                                <xs:documentation>
                                    The format that you want to use for the exported data.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Recipients" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The recipients of the email.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Subject" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The subject of the email.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="EmailFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The filename to be used for the email attachment.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ExportParamNames" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                            <xs:annotation>
                                <xs:documentation>
                                    Additional parameters for the export. These parameters vary depending on the QueryExportType.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ExportParamValues" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                            <xs:annotation>
                                <xs:documentation>
                                    Additional parameter values for the export. These parameter values vary depending on the QueryExportType.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___ExportQueryAndEmailResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GenerateReport">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationID" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ReportFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual filename of the report that you want to run.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Parameters" minOccurs="1" maxOccurs="1" type="tns:TParamList">
                            <xs:annotation>
                                <xs:documentation>
                                    The report query parameters.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Viewname" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the report view you want to use.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ExportFormat" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The format that you want to use for the report.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GenerateReportResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GenerateReportAndEmail">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="OperationID" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The operation ID is a unique string value that can be used to cancel the operation from the client. The string can be anything you like, but a GUID is recommended.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ReportFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="Parameters" minOccurs="1" maxOccurs="1" type="tns:TParamList">
                            <xs:annotation>
                                <xs:documentation>
                                    The report query parameters.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Viewname" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the report view you want to use.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ExportFormat" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The format that you want to use for the report.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Recipients" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The email recipients
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Subject" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The email subject
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="EmailFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The filename for the email attachment.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GenerateReportAndEmailResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetAllReportObjectNames">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPReport___GetAllReportObjectNamesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TReportObjects">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetAvailableReportObjectNames">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPReport___GetAvailableReportObjectNamesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TReportObjects">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetDefaultReportParams">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ReportFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual filename of the report.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="AutonomousNetworkId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the autonomous network.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubnetId" minOccurs="1" maxOccurs="1" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>
                                    The ID of the subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetDefaultReportParamsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TParamList">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetReport">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ReportFilename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The virtual filename of the report.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetReportResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TEasyIPQueryReport">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetStoredProcedureParameters">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="StoredProcedureName" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the stored procedure.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetStoredProcedureParametersResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TFieldInfos">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetTableFieldInfo">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Tablename" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the table.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetTableFieldInfoResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TFieldInfos">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetViewFieldInfo">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Viewname" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the view.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPReport___GetViewFieldInfoResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TFieldInfos">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___CheckMultipleIPVersions">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IPAddresses" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                            <xs:annotation>
                                <xs:documentation>
                                    The array of IP address that you want to check.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPVersion" minOccurs="1" maxOccurs="1" type="tns:TIPVers">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP version that all the IP addresses are required to be.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___CheckMultipleIPVersionsResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="EasyIPUtils___GetBroadcastAddress">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Subnet" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CidrMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetBroadcastAddressResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetHighAddress">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Subnet" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CidrMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetHighAddressResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetIPAddressList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Subnet" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CidrMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetIPAddressListResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetIPVers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IP" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP text.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetIPVersResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TIPVers">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetLowAddress">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Subnet" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CidrMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetLowAddressResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetSubnet">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Subnet" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CidrMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetSubnetResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___IsIPLowerThan">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IP1" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    IP address 1.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IP2" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    IP address 2.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___IsIPLowerThanResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___PadIPAddress">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IP" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___PadIPAddressResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___UnPadIPAddress">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IP" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___UnPadIPAddressResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetMaskListValues">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="LowMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The low mask.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="HighMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The high mask.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="IPVers" minOccurs="1" maxOccurs="1" type="tns:TIPVers">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP version of the masks.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetMaskListValuesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetSubnetRange">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Subnet" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The parent subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ParentMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The parent cidr mask.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CidrMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the child subnets.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetSubnetRangeResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:TStringArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetSubnetInfoHTML">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Subnet" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CidrMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ChildMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the child subnets (0 if there are no child subnets).
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetSubnetInfoHTMLResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetIPInfo">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IPAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The IP address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="CidrMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The cidr mask of the IP address.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="EasyIPUtils___GetIPInfoResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="IPVersion" minOccurs="1" maxOccurs="1" type="tns:TIPVers">
                            <xs:annotation>
                                <xs:documentation>
                                    Returns the IP version.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Subnet" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Returns the subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="LowAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Returns the low address of the IP&apos;s subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="HighAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Returns the high address of the IP&apos;s subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="BroadcastAddress" minOccurs="1" maxOccurs="1" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Returns the broadcast address of the IP&apos;s subnet.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="MaxSubnetMask" minOccurs="1" maxOccurs="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    Returns the maximum subnet mask.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___GetSchema">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aFilter" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___GetSchemaResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___GetData">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aTableNameArray" minOccurs="1" maxOccurs="1" type="tns:StringArray">
                        </xs:element>
                        <xs:element name="aTableRequestInfoArray" minOccurs="1" maxOccurs="1" type="tns:TableRequestInfoArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___GetDataResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___UpdateData">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aDelta" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___UpdateDataResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___ExecuteCommand">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aCommandName" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="aParameterArray" minOccurs="1" maxOccurs="1" type="tns:DataParameterArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___ExecuteCommandResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___ExecuteCommandEx">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aCommandName" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="aInputParameters" minOccurs="1" maxOccurs="1" type="tns:DataParameterArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___ExecuteCommandExResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                        <xs:element name="aOutputParameters" minOccurs="1" maxOccurs="1" type="tns:DataParameterArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___GetTableSchema">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aTableNameArray" minOccurs="1" maxOccurs="1" type="tns:StringArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___GetTableSchemaResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___GetCommandSchema">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aCommandNameArray" minOccurs="1" maxOccurs="1" type="tns:StringArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___GetCommandSchemaResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SQLGetData">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aSQLText" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="aIncludeSchema" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="aMaxRecords" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SQLGetDataResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SQLGetDataEx">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aSQLText" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="aIncludeSchema" minOccurs="1" maxOccurs="1" type="xs:boolean">
                        </xs:element>
                        <xs:element name="aMaxRecords" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                        <xs:element name="aDynamicWhereXML" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SQLGetDataExResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:base64Binary">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SQLExecuteCommand">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aSQLText" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SQLExecuteCommandResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SQLExecuteCommandEx">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aSQLText" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                        <xs:element name="aDynamicWhereXML" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SQLExecuteCommandExResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:int">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___GetDatasetScripts">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DatasetNames" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___GetDatasetScriptsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___RegisterForDataChangeNotification">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aTableName" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___RegisterForDataChangeNotificationResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="DataAbstractService___UnregisterForDataChangeNotification">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aTableName" minOccurs="1" maxOccurs="1" type="xs:string">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___UnregisterForDataChangeNotificationResponse">
                <xs:complexType />
            </xs:element>
            <xs:element name="DataAbstractService___SimpleGetData">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Request" minOccurs="1" maxOccurs="1" type="tns:SimpleRequestInfoArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SimpleGetDataResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:SimpleDataResultArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SimpleUpdateData">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="aDelta" minOccurs="1" maxOccurs="1" type="tns:SimpleDeltaArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DataAbstractService___SimpleUpdateDataResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" minOccurs="1" maxOccurs="1" type="tns:SimpleDeltaArray">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="ROClientIDHeader">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ID" minOccurs="0" maxOccurs="1" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="EasyIPCore___AddOrUpdateVirtualFileRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___AddOrUpdateVirtualFile" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___AddOrUpdateVirtualFileResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___AddOrUpdateVirtualFileResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___AddVirtualDirectoryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___AddVirtualDirectory" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___AddVirtualDirectoryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___AddVirtualDirectoryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___CancelOperationRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___CancelOperation" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___CancelOperationResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___CancelOperationResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___CheckUserFunctionAllowedRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___CheckUserFunctionAllowed" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___CheckUserFunctionAllowedResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___CheckUserFunctionAllowedResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___CopyVirtualDirectoryContentsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___CopyVirtualDirectoryContents" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___CopyVirtualDirectoryContentsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___CopyVirtualDirectoryContentsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___DeleteDownloadFileRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___DeleteDownloadFile" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___DeleteDownloadFileResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___DeleteDownloadFileResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___DeleteVirtualDirectoryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___DeleteVirtualDirectory" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___DeleteVirtualDirectoryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___DeleteVirtualDirectoryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___DeleteVirtualFileRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___DeleteVirtualFile" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___DeleteVirtualFileResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___DeleteVirtualFileResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAddressDataRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAddressData" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAddressDataResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAddressDataResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAddressData2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAddressData2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAddressData2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAddressData2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAutonomousNetworkNameFromIdRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAutonomousNetworkNameFromId" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAutonomousNetworkNameFromIdResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAutonomousNetworkNameFromIdResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAutonomousNetworkNotesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAutonomousNetworkNotes" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAutonomousNetworkNotesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAutonomousNetworkNotesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAutonomousNetworksRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAutonomousNetworks" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAutonomousNetworksResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAutonomousNetworksResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAutonomousNetworks2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAutonomousNetworks2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetAutonomousNetworks2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetAutonomousNetworks2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetChangeLogEntriesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetChangeLogEntries" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetChangeLogEntriesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetChangeLogEntriesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetChangeLogRevisionsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetChangeLogRevisions" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetChangeLogRevisionsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetChangeLogRevisionsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetChildNodesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetChildNodes" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetChildNodesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetChildNodesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetChildNodes2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetChildNodes2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetChildNodes2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetChildNodes2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetClientSettingsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetClientSettings" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetClientSettingsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetClientSettingsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetDownloadFilePartRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetDownloadFilePart" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetDownloadFilePartResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetDownloadFilePartResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetDownloadFileSizeRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetDownloadFileSize" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetDownloadFileSizeResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetDownloadFileSizeResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetEasyIPUserRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetEasyIPUser" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetEasyIPUserResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetEasyIPUserResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetFullTextSearchProgressRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetFullTextSearchProgress" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetFullTextSearchProgressResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetFullTextSearchProgressResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetIPAddressesBySubnetRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetIPAddressesBySubnet" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetIPAddressesBySubnetResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetIPAddressesBySubnetResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetIPAddressesBySubnet2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetIPAddressesBySubnet2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetIPAddressesBySubnet2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetIPAddressesBySubnet2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetIPAddressIdAndSubnetIdRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetIPAddressIdAndSubnetId" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetIPAddressIdAndSubnetIdResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetIPAddressIdAndSubnetIdResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemDataRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemData" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemDataResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemDataResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemData2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemData2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemData2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemData2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemRangeLimitsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemRangeLimits" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemRangeLimitsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemRangeLimitsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetLastUndoItemRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetLastUndoItem" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetLastUndoItemResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetLastUndoItemResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetLicenceDetailsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetLicenceDetails" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetLicenceDetailsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetLicenceDetailsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetLinkedIPAddressDescriptionsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetLinkedIPAddressDescriptions" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetLinkedIPAddressDescriptionsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetLinkedIPAddressDescriptionsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetLinkedIPAddressesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetLinkedIPAddresses" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetLinkedIPAddressesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetLinkedIPAddressesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetLongSubnetPathFromSubnetIdRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetLongSubnetPathFromSubnetId" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetLongSubnetPathFromSubnetIdResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetLongSubnetPathFromSubnetIdResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetPingHistoryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetPingHistory" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetPingHistoryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetPingHistoryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetRootDataRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetRootData" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetRootDataResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetRootDataResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetRootData2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetRootData2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetRootData2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetRootData2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetRootNodesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetRootNodes" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetRootNodesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetRootNodesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetRootNodes2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetRootNodes2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetRootNodes2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetRootNodes2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemByIdRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemById" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemByIdResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemByIdResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemById2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemById2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemById2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemById2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemByInfoRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemByInfo" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemByInfoResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemByInfoResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemByInfo2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemByInfo2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemByInfo2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemByInfo2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemParentIdsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemParentIds" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetItemParentIdsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetItemParentIdsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetSystemSettingsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetSystemSettings" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetSystemSettingsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetSystemSettingsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetTableUserFieldsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetTableUserFields" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetTableUserFieldsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetTableUserFieldsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetTotalSubnetAndIPAddressCountsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetTotalSubnetAndIPAddressCounts" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetTotalSubnetAndIPAddressCountsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetTotalSubnetAndIPAddressCountsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetUserDisabledFunctionsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetUserDisabledFunctions" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetUserDisabledFunctionsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetUserDisabledFunctionsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetUserInformationRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetUserInformation" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetUserInformationResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetUserInformationResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetUserMessagesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetUserMessages" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetUserMessagesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetUserMessagesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetUserPrivilegesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetUserPrivileges" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetUserPrivilegesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetUserPrivilegesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetUserTablesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetUserTables" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetUserTablesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetUserTablesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetVirtualDirectoriesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetVirtualDirectories" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetVirtualDirectoriesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetVirtualDirectoriesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetVirtualFileDataRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetVirtualFileData" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetVirtualFileDataResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetVirtualFileDataResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetVirtualFilesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetVirtualFiles" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetVirtualFilesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetVirtualFilesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetWebClientSettingsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetWebClientSettings" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___GetWebClientSettingsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___GetWebClientSettingsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___LinkedIPDescriptionExistsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___LinkedIPDescriptionExists" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___LinkedIPDescriptionExistsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___LinkedIPDescriptionExistsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___MoveVirtualDirectoryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___MoveVirtualDirectory" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___MoveVirtualDirectoryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___MoveVirtualDirectoryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___MoveVirtualFileRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___MoveVirtualFile" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___MoveVirtualFileResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___MoveVirtualFileResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___RenameVirtualDirectoryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___RenameVirtualDirectory" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___RenameVirtualDirectoryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___RenameVirtualDirectoryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___RenameVirtualFileRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___RenameVirtualFile" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___RenameVirtualFileResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___RenameVirtualFileResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchARPEntriesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchARPEntries" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchARPEntriesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchARPEntriesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchARPEntries2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchARPEntries2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchARPEntries2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchARPEntries2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchDatabaseNativeRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchDatabaseNative" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchDatabaseNativeResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchDatabaseNativeResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchDatabaseNative2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchDatabaseNative2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchDatabaseNative2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchDatabaseNative2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchDatabaseFTSRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchDatabaseFTS" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchDatabaseFTSResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchDatabaseFTSResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchDatabaseFTS2Request">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchDatabaseFTS2" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchDatabaseFTS2Response">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchDatabaseFTS2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchItemsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchItems" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SearchItemsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SearchItemsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SendEmailRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SendEmail" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SendEmailResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SendEmailResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SetClientSettingsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SetClientSettings" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SetClientSettingsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SetClientSettingsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SetVirtualFileReadOnlyRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SetVirtualFileReadOnly" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SetVirtualFileReadOnlyResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SetVirtualFileReadOnlyResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SetWebClientSettingsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SetWebClientSettings" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___SetWebClientSettingsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___SetWebClientSettingsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___VirtualDirectoryExistsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___VirtualDirectoryExists" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___VirtualDirectoryExistsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___VirtualDirectoryExistsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___VirtualFileExistsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPCore___VirtualFileExists" />
    </wsdl:message>
    <wsdl:message name="EasyIPCore___VirtualFileExistsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPCore___VirtualFileExistsResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___AuthenticateDiscoveryBotRequest">
        <wsdl:part name="parameters" element="tns:LoginService___AuthenticateDiscoveryBot" />
    </wsdl:message>
    <wsdl:message name="LoginService___AuthenticateDiscoveryBotResponse">
        <wsdl:part name="parameters" element="tns:LoginService___AuthenticateDiscoveryBotResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___AuthenticateDiscoveryBot2Request">
        <wsdl:part name="parameters" element="tns:LoginService___AuthenticateDiscoveryBot2" />
    </wsdl:message>
    <wsdl:message name="LoginService___AuthenticateDiscoveryBot2Response">
        <wsdl:part name="parameters" element="tns:LoginService___AuthenticateDiscoveryBot2Response" />
    </wsdl:message>
    <wsdl:message name="LoginService___ChangePasswordWithOldPasswordRequest">
        <wsdl:part name="parameters" element="tns:LoginService___ChangePasswordWithOldPassword" />
    </wsdl:message>
    <wsdl:message name="LoginService___ChangePasswordWithOldPasswordResponse">
        <wsdl:part name="parameters" element="tns:LoginService___ChangePasswordWithOldPasswordResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___ChangePasswordWithOldPassword2Request">
        <wsdl:part name="parameters" element="tns:LoginService___ChangePasswordWithOldPassword2" />
    </wsdl:message>
    <wsdl:message name="LoginService___ChangePasswordWithOldPassword2Response">
        <wsdl:part name="parameters" element="tns:LoginService___ChangePasswordWithOldPassword2Response" />
    </wsdl:message>
    <wsdl:message name="LoginService___ChangePasswordWithVerificationCodeRequest">
        <wsdl:part name="parameters" element="tns:LoginService___ChangePasswordWithVerificationCode" />
    </wsdl:message>
    <wsdl:message name="LoginService___ChangePasswordWithVerificationCodeResponse">
        <wsdl:part name="parameters" element="tns:LoginService___ChangePasswordWithVerificationCodeResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___ChangePasswordWithVerificationCode2Request">
        <wsdl:part name="parameters" element="tns:LoginService___ChangePasswordWithVerificationCode2" />
    </wsdl:message>
    <wsdl:message name="LoginService___ChangePasswordWithVerificationCode2Response">
        <wsdl:part name="parameters" element="tns:LoginService___ChangePasswordWithVerificationCode2Response" />
    </wsdl:message>
    <wsdl:message name="LoginService___DownloadClientInstallerChunkRequest">
        <wsdl:part name="parameters" element="tns:LoginService___DownloadClientInstallerChunk" />
    </wsdl:message>
    <wsdl:message name="LoginService___DownloadClientInstallerChunkResponse">
        <wsdl:part name="parameters" element="tns:LoginService___DownloadClientInstallerChunkResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___DownloadIntallerChunkRequest">
        <wsdl:part name="parameters" element="tns:LoginService___DownloadIntallerChunk" />
    </wsdl:message>
    <wsdl:message name="LoginService___DownloadIntallerChunkResponse">
        <wsdl:part name="parameters" element="tns:LoginService___DownloadIntallerChunkResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___GetDownloadClientSizeRequest">
        <wsdl:part name="parameters" element="tns:LoginService___GetDownloadClientSize" />
    </wsdl:message>
    <wsdl:message name="LoginService___GetDownloadClientSizeResponse">
        <wsdl:part name="parameters" element="tns:LoginService___GetDownloadClientSizeResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___GetDownloadSizeRequest">
        <wsdl:part name="parameters" element="tns:LoginService___GetDownloadSize" />
    </wsdl:message>
    <wsdl:message name="LoginService___GetDownloadSizeResponse">
        <wsdl:part name="parameters" element="tns:LoginService___GetDownloadSizeResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___LoggedInRequest">
        <wsdl:part name="parameters" element="tns:LoginService___LoggedIn" />
    </wsdl:message>
    <wsdl:message name="LoginService___LoggedInResponse">
        <wsdl:part name="parameters" element="tns:LoginService___LoggedInResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___LoginRequest">
        <wsdl:part name="parameters" element="tns:LoginService___Login" />
    </wsdl:message>
    <wsdl:message name="LoginService___LoginResponse">
        <wsdl:part name="parameters" element="tns:LoginService___LoginResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___Login2Request">
        <wsdl:part name="parameters" element="tns:LoginService___Login2" />
    </wsdl:message>
    <wsdl:message name="LoginService___Login2Response">
        <wsdl:part name="parameters" element="tns:LoginService___Login2Response" />
    </wsdl:message>
    <wsdl:message name="LoginService___LogoutRequest">
        <wsdl:part name="parameters" element="tns:LoginService___Logout" />
    </wsdl:message>
    <wsdl:message name="LoginService___LogoutResponse">
        <wsdl:part name="parameters" element="tns:LoginService___LogoutResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___ForgottenPasswordRequest">
        <wsdl:part name="parameters" element="tns:LoginService___ForgottenPassword" />
    </wsdl:message>
    <wsdl:message name="LoginService___ForgottenPasswordResponse">
        <wsdl:part name="parameters" element="tns:LoginService___ForgottenPasswordResponse" />
    </wsdl:message>
    <wsdl:message name="LoginService___RequestUsernameRequest">
        <wsdl:part name="parameters" element="tns:LoginService___RequestUsername" />
    </wsdl:message>
    <wsdl:message name="LoginService___RequestUsernameResponse">
        <wsdl:part name="parameters" element="tns:LoginService___RequestUsernameResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___AddDiscoveryBotRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___AddDiscoveryBot" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___AddDiscoveryBotResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___AddDiscoveryBotResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___AddFieldPendingChangeRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___AddFieldPendingChange" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___AddFieldPendingChangeResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___AddFieldPendingChangeResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___AddFieldPendingChange2Request">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___AddFieldPendingChange2" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___AddFieldPendingChange2Response">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___AddFieldPendingChange2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___AddUserRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___AddUser" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___AddUserResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___AddUserResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___AddUserGroupRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___AddUserGroup" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___AddUserGroupResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___AddUserGroupResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___BackupDatabaseRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___BackupDatabase" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___BackupDatabaseResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___BackupDatabaseResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___CopyFilesToUsersRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___CopyFilesToUsers" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___CopyFilesToUsersResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___CopyFilesToUsersResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DatabaseScriptTestCompileRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DatabaseScriptTestCompile" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DatabaseScriptTestCompileResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DatabaseScriptTestCompileResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DatabaseScriptTestRunRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DatabaseScriptTestRun" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DatabaseScriptTestRunResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DatabaseScriptTestRunResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteDatabaseBackupRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteDatabaseBackup" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteDatabaseBackupResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteDatabaseBackupResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteDatabaseFileRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteDatabaseFile" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteDatabaseFileResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteDatabaseFileResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteDiscoveryBotRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteDiscoveryBot" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteDiscoveryBotResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteDiscoveryBotResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteEmailQueueItemsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteEmailQueueItems" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteEmailQueueItemsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteEmailQueueItemsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteFieldPendingChangeRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteFieldPendingChange" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteFieldPendingChangeResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteFieldPendingChangeResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteQueuedDiscoveryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteQueuedDiscovery" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteQueuedDiscoveryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteQueuedDiscoveryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteUserRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteUser" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteUserResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteUserResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteUserGroupRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteUserGroup" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DeleteUserGroupResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DeleteUserGroupResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DisconnectUserSessionsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DisconnectUserSessions" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___DisconnectUserSessionsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___DisconnectUserSessionsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___EmailUsersRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___EmailUsers" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___EmailUsersResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___EmailUsersResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___EnableSubnetValidityChecksRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___EnableSubnetValidityChecks" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___EnableSubnetValidityChecksResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___EnableSubnetValidityChecksResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___ForceUserPasswordChangeRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___ForceUserPasswordChange" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___ForceUserPasswordChangeResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___ForceUserPasswordChangeResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetAuthenticationDetailsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetAuthenticationDetails" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetAuthenticationDetailsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetAuthenticationDetailsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetBackupFilelistRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetBackupFilelist" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetBackupFilelistResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetBackupFilelistResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetClientSettingsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetClientSettings" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetClientSettingsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetClientSettingsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetDatabaseBackupLogRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetDatabaseBackupLog" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetDatabaseBackupLogResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetDatabaseBackupLogResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetDatabaseRestoreLogRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetDatabaseRestoreLog" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetDatabaseRestoreLogResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetDatabaseRestoreLogResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetEasyIPUserRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetEasyIPUser" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetEasyIPUserResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetEasyIPUserResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetEasyIPUserGroupsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetEasyIPUserGroups" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetEasyIPUserGroupsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetEasyIPUserGroupsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetEasyIPUserGroupsAndUsersRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetEasyIPUserGroupsAndUsers" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetEasyIPUserGroupsAndUsersResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetEasyIPUserGroupsAndUsersResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetEasyIPUsersRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetEasyIPUsers" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetEasyIPUsersResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetEasyIPUsersResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetEmailQueueItemsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetEmailQueueItems" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetEmailQueueItemsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetEmailQueueItemsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetFieldPendingUpdatesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetFieldPendingUpdates" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetFieldPendingUpdatesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetFieldPendingUpdatesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetRestoredDatabaseFilelistRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetRestoredDatabaseFilelist" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetRestoredDatabaseFilelistResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetRestoredDatabaseFilelistResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetServerRestartDateTimeRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetServerRestartDateTime" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetServerRestartDateTimeResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetServerRestartDateTimeResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetServerSettingsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetServerSettings" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetServerSettingsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetServerSettingsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetTableScriptRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetTableScript" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetTableScriptResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetTableScriptResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetUserDisabledFunctionsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetUserDisabledFunctions" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetUserDisabledFunctionsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetUserDisabledFunctionsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetUserPrivilegesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetUserPrivileges" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetUserPrivilegesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetUserPrivilegesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetUserSessionsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetUserSessions" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetUserSessionsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetUserSessionsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetValidFieldDataTypesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetValidFieldDataTypes" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___GetValidFieldDataTypesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___GetValidFieldDataTypesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___PurgeLogsAndBackupsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___PurgeLogsAndBackups" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___PurgeLogsAndBackupsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___PurgeLogsAndBackupsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___ReloadSettingsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___ReloadSettings" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___ReloadSettingsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___ReloadSettingsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___RenameUserGroupRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___RenameUserGroup" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___RenameUserGroupResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___RenameUserGroupResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___RestartServerRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___RestartServer" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___RestartServerResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___RestartServerResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___RestoreDatabaseRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___RestoreDatabase" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___RestoreDatabaseResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___RestoreDatabaseResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___ScheduleDatabaseBackupRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___ScheduleDatabaseBackup" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___ScheduleDatabaseBackupResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___ScheduleDatabaseBackupResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetClientSettingsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetClientSettings" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetClientSettingsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetClientSettingsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetDiscoveryBotEnabledRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetDiscoveryBotEnabled" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetDiscoveryBotEnabledResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetDiscoveryBotEnabledResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetServerSettingsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetServerSettings" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetServerSettingsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetServerSettingsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetTableScriptRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetTableScript" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetTableScriptResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetTableScriptResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserDisabledFunctionsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserDisabledFunctions" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserDisabledFunctionsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserDisabledFunctionsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserFieldRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserField" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserFieldResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserFieldResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserFieldDisplayOrderRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserFieldDisplayOrder" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserFieldDisplayOrderResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserFieldDisplayOrderResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserGroupRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserGroup" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserGroupResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserGroupResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserPasswordRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserPassword" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserPasswordResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserPasswordResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserPrivilegesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserPrivileges" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserPrivilegesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserPrivilegesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserPropertiesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserProperties" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___SetUserPropertiesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___SetUserPropertiesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___StartFullTextSearchIndexingRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___StartFullTextSearchIndexing" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___StartFullTextSearchIndexingResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___StartFullTextSearchIndexingResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___UpdateDiscoveryBotRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___UpdateDiscoveryBot" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___UpdateDiscoveryBotResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___UpdateDiscoveryBotResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___UpdateEmailQueueItemsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___UpdateEmailQueueItems" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___UpdateEmailQueueItemsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___UpdateEmailQueueItemsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___UpdateMACAddressPrefixesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___UpdateMACAddressPrefixes" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___UpdateMACAddressPrefixesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___UpdateMACAddressPrefixesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___UserExistsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___UserExists" />
    </wsdl:message>
    <wsdl:message name="EasyIPAdmin___UserExistsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPAdmin___UserExistsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddAddressesToSubnetRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddAddressesToSubnet" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddAddressesToSubnetResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddAddressesToSubnetResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddAddressRangeToSubnetRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddAddressRangeToSubnet" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddAddressRangeToSubnetResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddAddressRangeToSubnetResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddAllAddressesToSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddAllAddressesToSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddAllAddressesToSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddAllAddressesToSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddAllChildSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddAllChildSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddAllChildSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddAllChildSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddAutonomousNetworkRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddAutonomousNetwork" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddAutonomousNetworkResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddAutonomousNetworkResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddChildSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddChildSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddChildSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddChildSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddGroupRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddGroup" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddGroupResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddGroupResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddGroupsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddGroups" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddGroupsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddGroupsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddIPAddressLinkDescriptionRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddIPAddressLinkDescription" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddIPAddressLinkDescriptionResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddIPAddressLinkDescriptionResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddIPAddressLinksRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddIPAddressLinks" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddIPAddressLinksResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddIPAddressLinksResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddSubnetsToCorrectParentsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddSubnetsToCorrectParents" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___AddSubnetsToCorrectParentsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___AddSubnetsToCorrectParentsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___ApplyDeltaRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___ApplyDelta" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___ApplyDeltaResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___ApplyDeltaResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteAddressesFromSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteAddressesFromSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteAddressesFromSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteAddressesFromSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteAutonomousNetworkRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteAutonomousNetwork" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteAutonomousNetworkResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteAutonomousNetworkResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteGroupsOrSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteGroupsOrSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteGroupsOrSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteGroupsOrSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteIPAddressesByIdRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteIPAddressesById" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteIPAddressesByIdResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteIPAddressesByIdResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteIPAddressLinksRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteIPAddressLinks" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteIPAddressLinksResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteIPAddressLinksResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteSubnetChildrenRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteSubnetChildren" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___DeleteSubnetChildrenResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___DeleteSubnetChildrenResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___ImportFromXMLRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___ImportFromXML" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___ImportFromXMLResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___ImportFromXMLResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___MoveGroupsAndSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___MoveGroupsAndSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___MoveGroupsAndSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___MoveGroupsAndSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___PasteGroupStructureRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___PasteGroupStructure" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___PasteGroupStructureResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___PasteGroupStructureResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___PasteSubnetStructureRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___PasteSubnetStructure" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___PasteSubnetStructureResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___PasteSubnetStructureResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___RemoveParentSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___RemoveParentSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___RemoveParentSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___RemoveParentSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___ReparentChildSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___ReparentChildSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___ReparentChildSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___ReparentChildSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___UndoRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___Undo" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___UndoResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___UndoResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___UpdateAutonomousNetworkRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___UpdateAutonomousNetwork" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___UpdateAutonomousNetworkResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___UpdateAutonomousNetworkResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___UpdateGroupRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___UpdateGroup" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___UpdateGroupResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___UpdateGroupResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___UpdateUserFieldsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___UpdateUserFields" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___UpdateUserFieldsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___UpdateUserFieldsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___CreateNextAvailableIPAddressRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___CreateNextAvailableIPAddress" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___CreateNextAvailableIPAddressResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___CreateNextAvailableIPAddressResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___ReserveNextAvailableIPAddressRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___ReserveNextAvailableIPAddress" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___ReserveNextAvailableIPAddressResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___ReserveNextAvailableIPAddressResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___SearchAndReplaceRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___SearchAndReplace" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___SearchAndReplaceResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___SearchAndReplaceResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___SetSubnetAttributesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___SetSubnetAttributes" />
    </wsdl:message>
    <wsdl:message name="EasyIPEdit___SetSubnetAttributesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPEdit___SetSubnetAttributesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___CheckTemplateParametersRequest">
        <wsdl:part name="parameters" element="tns:EasyIPTools___CheckTemplateParameters" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___CheckTemplateParametersResponse">
        <wsdl:part name="parameters" element="tns:EasyIPTools___CheckTemplateParametersResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___CompileScriptRequest">
        <wsdl:part name="parameters" element="tns:EasyIPTools___CompileScript" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___CompileScriptResponse">
        <wsdl:part name="parameters" element="tns:EasyIPTools___CompileScriptResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___CompileScript2Request">
        <wsdl:part name="parameters" element="tns:EasyIPTools___CompileScript2" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___CompileScript2Response">
        <wsdl:part name="parameters" element="tns:EasyIPTools___CompileScript2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___CopyTreesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPTools___CopyTrees" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___CopyTreesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPTools___CopyTreesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___ExecuteTemplateRequest">
        <wsdl:part name="parameters" element="tns:EasyIPTools___ExecuteTemplate" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___ExecuteTemplateResponse">
        <wsdl:part name="parameters" element="tns:EasyIPTools___ExecuteTemplateResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___ExecuteTemplate2Request">
        <wsdl:part name="parameters" element="tns:EasyIPTools___ExecuteTemplate2" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___ExecuteTemplate2Response">
        <wsdl:part name="parameters" element="tns:EasyIPTools___ExecuteTemplate2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___ExportToCSVRequest">
        <wsdl:part name="parameters" element="tns:EasyIPTools___ExportToCSV" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___ExportToCSVResponse">
        <wsdl:part name="parameters" element="tns:EasyIPTools___ExportToCSVResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___ExportToHTMLRequest">
        <wsdl:part name="parameters" element="tns:EasyIPTools___ExportToHTML" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___ExportToHTMLResponse">
        <wsdl:part name="parameters" element="tns:EasyIPTools___ExportToHTMLResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___ExportToXMLRequest">
        <wsdl:part name="parameters" element="tns:EasyIPTools___ExportToXML" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___ExportToXMLResponse">
        <wsdl:part name="parameters" element="tns:EasyIPTools___ExportToXMLResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___GenerateDefaultValuesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPTools___GenerateDefaultValues" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___GenerateDefaultValuesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPTools___GenerateDefaultValuesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___GenerateDefaultValues2Request">
        <wsdl:part name="parameters" element="tns:EasyIPTools___GenerateDefaultValues2" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___GenerateDefaultValues2Response">
        <wsdl:part name="parameters" element="tns:EasyIPTools___GenerateDefaultValues2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___GetMissingSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPTools___GetMissingSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___GetMissingSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPTools___GetMissingSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___GetTemplateScriptHelpRequest">
        <wsdl:part name="parameters" element="tns:EasyIPTools___GetTemplateScriptHelp" />
    </wsdl:message>
    <wsdl:message name="EasyIPTools___GetTemplateScriptHelpResponse">
        <wsdl:part name="parameters" element="tns:EasyIPTools___GetTemplateScriptHelpResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetDiscoverableSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetDiscoverableSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetDiscoverableSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetDiscoverableSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetHostDiscoverySubnetIPAddressesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetHostDiscoverySubnetIPAddresses" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetHostDiscoverySubnetIPAddressesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetHostDiscoverySubnetIPAddressesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetHostDiscoveryIPAddressesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetHostDiscoveryIPAddresses" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetHostDiscoveryIPAddressesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetHostDiscoveryIPAddressesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___UpdateDiscoveryDataRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___UpdateDiscoveryData" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___UpdateDiscoveryDataResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___UpdateDiscoveryDataResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___BotGetDiscoverableSubnetsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___BotGetDiscoverableSubnets" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___BotGetDiscoverableSubnetsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___BotGetDiscoverableSubnetsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___BotUpdateDiscoveryProgressRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___BotUpdateDiscoveryProgress" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___BotUpdateDiscoveryProgressResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___BotUpdateDiscoveryProgressResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___BotUpdateDiscoveryStatusRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___BotUpdateDiscoveryStatus" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___BotUpdateDiscoveryStatusResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___BotUpdateDiscoveryStatusResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___BotCancelDiscoveryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___BotCancelDiscovery" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___BotCancelDiscoveryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___BotCancelDiscoveryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___QueueDiscoveryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___QueueDiscovery" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___QueueDiscoveryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___QueueDiscoveryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetDiscoveryBotsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetDiscoveryBots" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetDiscoveryBotsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetDiscoveryBotsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetQueuedDiscoveriesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetQueuedDiscoveries" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetQueuedDiscoveriesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetQueuedDiscoveriesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___DeleteQueuedDiscoveryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___DeleteQueuedDiscovery" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___DeleteQueuedDiscoveryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___DeleteQueuedDiscoveryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetUserQueuedDiscoveriesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetUserQueuedDiscoveries" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetUserQueuedDiscoveriesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetUserQueuedDiscoveriesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetDiscoveryLogRequest">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetDiscoveryLog" />
    </wsdl:message>
    <wsdl:message name="EasyIPDiscovery___GetDiscoveryLogResponse">
        <wsdl:part name="parameters" element="tns:EasyIPDiscovery___GetDiscoveryLogResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___ExecuteQueryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___ExecuteQuery" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___ExecuteQueryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___ExecuteQueryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___ExecuteQuery2Request">
        <wsdl:part name="parameters" element="tns:EasyIPReport___ExecuteQuery2" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___ExecuteQuery2Response">
        <wsdl:part name="parameters" element="tns:EasyIPReport___ExecuteQuery2Response" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___ExportQueryRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___ExportQuery" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___ExportQueryResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___ExportQueryResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___ExportQueryAndEmailRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___ExportQueryAndEmail" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___ExportQueryAndEmailResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___ExportQueryAndEmailResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GenerateReportRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GenerateReport" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GenerateReportResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GenerateReportResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GenerateReportAndEmailRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GenerateReportAndEmail" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GenerateReportAndEmailResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GenerateReportAndEmailResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetAllReportObjectNamesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetAllReportObjectNames" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetAllReportObjectNamesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetAllReportObjectNamesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetAvailableReportObjectNamesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetAvailableReportObjectNames" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetAvailableReportObjectNamesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetAvailableReportObjectNamesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetDefaultReportParamsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetDefaultReportParams" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetDefaultReportParamsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetDefaultReportParamsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetReportRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetReport" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetReportResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetReportResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetStoredProcedureParametersRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetStoredProcedureParameters" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetStoredProcedureParametersResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetStoredProcedureParametersResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetTableFieldInfoRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetTableFieldInfo" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetTableFieldInfoResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetTableFieldInfoResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetViewFieldInfoRequest">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetViewFieldInfo" />
    </wsdl:message>
    <wsdl:message name="EasyIPReport___GetViewFieldInfoResponse">
        <wsdl:part name="parameters" element="tns:EasyIPReport___GetViewFieldInfoResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___CheckMultipleIPVersionsRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___CheckMultipleIPVersions" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___CheckMultipleIPVersionsResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___CheckMultipleIPVersionsResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetBroadcastAddressRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetBroadcastAddress" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetBroadcastAddressResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetBroadcastAddressResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetHighAddressRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetHighAddress" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetHighAddressResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetHighAddressResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetIPAddressListRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetIPAddressList" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetIPAddressListResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetIPAddressListResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetIPVersRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetIPVers" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetIPVersResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetIPVersResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetLowAddressRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetLowAddress" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetLowAddressResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetLowAddressResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetSubnetRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetSubnet" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetSubnetResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetSubnetResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___IsIPLowerThanRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___IsIPLowerThan" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___IsIPLowerThanResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___IsIPLowerThanResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___PadIPAddressRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___PadIPAddress" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___PadIPAddressResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___PadIPAddressResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___UnPadIPAddressRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___UnPadIPAddress" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___UnPadIPAddressResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___UnPadIPAddressResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetMaskListValuesRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetMaskListValues" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetMaskListValuesResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetMaskListValuesResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetSubnetRangeRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetSubnetRange" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetSubnetRangeResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetSubnetRangeResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetSubnetInfoHTMLRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetSubnetInfoHTML" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetSubnetInfoHTMLResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetSubnetInfoHTMLResponse" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetIPInfoRequest">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetIPInfo" />
    </wsdl:message>
    <wsdl:message name="EasyIPUtils___GetIPInfoResponse">
        <wsdl:part name="parameters" element="tns:EasyIPUtils___GetIPInfoResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___GetSchemaRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___GetSchema" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___GetSchemaResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___GetSchemaResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___GetDataRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___GetData" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___GetDataResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___GetDataResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___UpdateDataRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___UpdateData" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___UpdateDataResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___UpdateDataResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___ExecuteCommandRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___ExecuteCommand" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___ExecuteCommandResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___ExecuteCommandResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___ExecuteCommandExRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___ExecuteCommandEx" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___ExecuteCommandExResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___ExecuteCommandExResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___GetTableSchemaRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___GetTableSchema" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___GetTableSchemaResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___GetTableSchemaResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___GetCommandSchemaRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___GetCommandSchema" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___GetCommandSchemaResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___GetCommandSchemaResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SQLGetDataRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SQLGetData" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SQLGetDataResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SQLGetDataResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SQLGetDataExRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SQLGetDataEx" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SQLGetDataExResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SQLGetDataExResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SQLExecuteCommandRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SQLExecuteCommand" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SQLExecuteCommandResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SQLExecuteCommandResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SQLExecuteCommandExRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SQLExecuteCommandEx" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SQLExecuteCommandExResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SQLExecuteCommandExResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___GetDatasetScriptsRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___GetDatasetScripts" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___GetDatasetScriptsResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___GetDatasetScriptsResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___RegisterForDataChangeNotificationRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___RegisterForDataChangeNotification" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___RegisterForDataChangeNotificationResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___RegisterForDataChangeNotificationResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___UnregisterForDataChangeNotificationRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___UnregisterForDataChangeNotification" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___UnregisterForDataChangeNotificationResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___UnregisterForDataChangeNotificationResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SimpleGetDataRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SimpleGetData" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SimpleGetDataResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SimpleGetDataResponse" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SimpleUpdateDataRequest">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SimpleUpdateData" />
    </wsdl:message>
    <wsdl:message name="DataAbstractService___SimpleUpdateDataResponse">
        <wsdl:part name="parameters" element="tns:DataAbstractService___SimpleUpdateDataResponse" />
    </wsdl:message>
    <wsdl:message name="EEasyIPServerError2">
    </wsdl:message>
    <wsdl:message name="EEasyIPClientError">
    </wsdl:message>
    <wsdl:message name="EEasyIPCommonError">
    </wsdl:message>
    <wsdl:message name="EEasyIPServerClientVersionError">
    </wsdl:message>
    <wsdl:message name="EEasyIPServerQueryAbortError">
    </wsdl:message>
    <wsdl:message name="EEasyIPBaseError">
    </wsdl:message>
    <wsdl:message name="EEasyIPServerError">
        <wsdl:part name="ErrorCode" type="tns:TExceptionServer" />
    </wsdl:message>
    <wsdl:message name="ROClientIDHeaderMessage">
        <wsdl:part name="ROClientID" element="tns:ROClientIDHeader" />
    </wsdl:message>
    <wsdl:portType name="EasyIPCore">
        <wsdl:documentation>
            Core Easy-IP functions.
        </wsdl:documentation>
        <wsdl:operation name="AddOrUpdateVirtualFile">
            <wsdl:documentation>
                Adds or updates a virtual server file.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___AddOrUpdateVirtualFileRequest" />
            <wsdl:output message="tns:EasyIPCore___AddOrUpdateVirtualFileResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddVirtualDirectory">
            <wsdl:documentation>
                Adds a virtual server directory.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___AddVirtualDirectoryRequest" />
            <wsdl:output message="tns:EasyIPCore___AddVirtualDirectoryResponse" />
        </wsdl:operation>
        <wsdl:operation name="CancelOperation">
            <wsdl:documentation>
                Cancels the asynchronous operation specified by the operation ID.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___CancelOperationRequest" />
            <wsdl:output message="tns:EasyIPCore___CancelOperationResponse" />
        </wsdl:operation>
        <wsdl:operation name="CheckUserFunctionAllowed">
            <wsdl:documentation>
                Checks to see if a user function if allowed.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___CheckUserFunctionAllowedRequest" />
            <wsdl:output message="tns:EasyIPCore___CheckUserFunctionAllowedResponse" />
        </wsdl:operation>
        <wsdl:operation name="CopyVirtualDirectoryContents">
            <wsdl:documentation>
                Copies the contents of one virtual server directory to another.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___CopyVirtualDirectoryContentsRequest" />
            <wsdl:output message="tns:EasyIPCore___CopyVirtualDirectoryContentsResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteDownloadFile">
            <wsdl:documentation>
                Deletes a server file that has been downloaded to a client. A server file is not the same as a virtual server file. A virtual server file is stored in the database. A server file is generated by the server and stored in the local file system ready to be downloaded by a user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___DeleteDownloadFileRequest" />
            <wsdl:output message="tns:EasyIPCore___DeleteDownloadFileResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteVirtualDirectory">
            <wsdl:documentation>
                Deletes a virtual server directory.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___DeleteVirtualDirectoryRequest" />
            <wsdl:output message="tns:EasyIPCore___DeleteVirtualDirectoryResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteVirtualFile">
            <wsdl:documentation>
                Deletes a virtual server file.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___DeleteVirtualFileRequest" />
            <wsdl:output message="tns:EasyIPCore___DeleteVirtualFileResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetAddressData">
            <wsdl:documentation>
                Returns the IP address data in a binary format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetAddressDataRequest" />
            <wsdl:output message="tns:EasyIPCore___GetAddressDataResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetAddressData2">
            <wsdl:documentation>
                Returns the IP address records as simple data.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetAddressData2Request" />
            <wsdl:output message="tns:EasyIPCore___GetAddressData2Response" />
        </wsdl:operation>
        <wsdl:operation name="GetAutonomousNetworkNameFromId">
            <wsdl:documentation>
                Returns the name of an autonomous network given it&apos;s ID.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetAutonomousNetworkNameFromIdRequest" />
            <wsdl:output message="tns:EasyIPCore___GetAutonomousNetworkNameFromIdResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetAutonomousNetworkNotes">
            <wsdl:documentation>
                Returns the notes of an autonomous network given it&apos;s ID.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetAutonomousNetworkNotesRequest" />
            <wsdl:output message="tns:EasyIPCore___GetAutonomousNetworkNotesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetAutonomousNetworks">
            <wsdl:documentation>
                Returns the autonomous networks available to the current user in a binary format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetAutonomousNetworksRequest" />
            <wsdl:output message="tns:EasyIPCore___GetAutonomousNetworksResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetAutonomousNetworks2">
            <wsdl:documentation>
                Returns the autonomous networks available to the current user as simple data.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetAutonomousNetworks2Request" />
            <wsdl:output message="tns:EasyIPCore___GetAutonomousNetworks2Response" />
        </wsdl:operation>
        <wsdl:operation name="GetChangeLogEntries">
            <wsdl:documentation>
                Returns an array of change log entries.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetChangeLogEntriesRequest" />
            <wsdl:output message="tns:EasyIPCore___GetChangeLogEntriesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetChangeLogRevisions">
            <wsdl:documentation>
                Returns an array of revisions associated with a change log.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetChangeLogRevisionsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetChangeLogRevisionsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetChildNodes">
            <wsdl:documentation>
                Returns the child nodes of an item in a binary format. User data is not included.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetChildNodesRequest" />
            <wsdl:output message="tns:EasyIPCore___GetChildNodesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetChildNodes2">
            <wsdl:documentation>
                Returns the child nodes of an item as simple data. User data is not included.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetChildNodes2Request" />
            <wsdl:output message="tns:EasyIPCore___GetChildNodes2Response" />
        </wsdl:operation>
        <wsdl:operation name="GetClientSettings">
            <wsdl:documentation>
                Returns the current user settings.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetClientSettingsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetClientSettingsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetDownloadFilePart">
            <wsdl:documentation>
                Returns a portion of a server file.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetDownloadFilePartRequest" />
            <wsdl:output message="tns:EasyIPCore___GetDownloadFilePartResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetDownloadFileSize">
            <wsdl:documentation>
                Returns the size of a server file.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetDownloadFileSizeRequest" />
            <wsdl:output message="tns:EasyIPCore___GetDownloadFileSizeResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetEasyIPUser">
            <wsdl:documentation>
                Returns information about the current Easy-IP user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetEasyIPUserRequest" />
            <wsdl:output message="tns:EasyIPCore___GetEasyIPUserResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetFullTextSearchProgress">
            <wsdl:documentation>
                Returns information about the status of Full Text Search indexing.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetFullTextSearchProgressRequest" />
            <wsdl:output message="tns:EasyIPCore___GetFullTextSearchProgressResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetIPAddressesBySubnet">
            <wsdl:documentation>
                Returns a list of IP addresses that exist in a subnet in a binary format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetIPAddressesBySubnetRequest" />
            <wsdl:output message="tns:EasyIPCore___GetIPAddressesBySubnetResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetIPAddressesBySubnet2">
            <wsdl:documentation>
                Returns a list of IP addresses that exist in a subnet as simple data.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetIPAddressesBySubnet2Request" />
            <wsdl:output message="tns:EasyIPCore___GetIPAddressesBySubnet2Response" />
        </wsdl:operation>
        <wsdl:operation name="GetIPAddressIdAndSubnetId">
            <wsdl:documentation>
                Returns the subnet ID and IP address ID given the autonomous network ID and IP address.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetIPAddressIdAndSubnetIdRequest" />
            <wsdl:output message="tns:EasyIPCore___GetIPAddressIdAndSubnetIdResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetItemData">
            <wsdl:documentation>
                Returns the child groups/subnets in a binary format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetItemDataRequest" />
            <wsdl:output message="tns:EasyIPCore___GetItemDataResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetItemData2">
            <wsdl:documentation>
                Returns the child groups/subnets as simple data.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetItemData2Request" />
            <wsdl:output message="tns:EasyIPCore___GetItemData2Response" />
        </wsdl:operation>
        <wsdl:operation name="GetItemRangeLimits">
            <wsdl:documentation>
                Returns the IP address range limits for a group or subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetItemRangeLimitsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetItemRangeLimitsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetLastUndoItem">
            <wsdl:documentation>
                Returns the last undo item for the current user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetLastUndoItemRequest" />
            <wsdl:output message="tns:EasyIPCore___GetLastUndoItemResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetLicenceDetails">
            <wsdl:documentation>
                Returns information about the Easy-IP licence.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetLicenceDetailsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetLicenceDetailsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetLinkedIPAddressDescriptions">
            <wsdl:documentation>
                Returns a list of Linked IP address descriptions.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetLinkedIPAddressDescriptionsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetLinkedIPAddressDescriptionsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetLinkedIPAddresses">
            <wsdl:documentation>
                Returns an array of IP addresses that are linked to the specified IP address.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetLinkedIPAddressesRequest" />
            <wsdl:output message="tns:EasyIPCore___GetLinkedIPAddressesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetLongSubnetPathFromSubnetId">
            <wsdl:documentation>
                Returns a descriptive path given a group or subnet ID.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetLongSubnetPathFromSubnetIdRequest" />
            <wsdl:output message="tns:EasyIPCore___GetLongSubnetPathFromSubnetIdResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetPingHistory">
            <wsdl:documentation>
                Returns the ping history of a specific IP address.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetPingHistoryRequest" />
            <wsdl:output message="tns:EasyIPCore___GetPingHistoryResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetRootData">
            <wsdl:documentation>
                Returns the root groups/subnets of an autonomous network in binary format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetRootDataRequest" />
            <wsdl:output message="tns:EasyIPCore___GetRootDataResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetRootData2">
            <wsdl:documentation>
                Returns the root groups/subnets of an autonomous network as simple data.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetRootData2Request" />
            <wsdl:output message="tns:EasyIPCore___GetRootData2Response" />
        </wsdl:operation>
        <wsdl:operation name="GetRootNodes">
            <wsdl:documentation>
                Returns the root nodes of an autonomous network in a binary format. No user data is included.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetRootNodesRequest" />
            <wsdl:output message="tns:EasyIPCore___GetRootNodesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetRootNodes2">
            <wsdl:documentation>
                Returns the root nodes of an autonomous network as simple data. No user data is included.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetRootNodes2Request" />
            <wsdl:output message="tns:EasyIPCore___GetRootNodes2Response" />
        </wsdl:operation>
        <wsdl:operation name="GetItemById">
            <wsdl:documentation>
                Returns group or subnet data in a binary format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetItemByIdRequest" />
            <wsdl:output message="tns:EasyIPCore___GetItemByIdResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetItemById2">
            <wsdl:documentation>
                Returns group or subnet data as simple data.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetItemById2Request" />
            <wsdl:output message="tns:EasyIPCore___GetItemById2Response" />
        </wsdl:operation>
        <wsdl:operation name="GetItemByInfo">
            <wsdl:documentation>
                Returns group or subnet data in a binary format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetItemByInfoRequest" />
            <wsdl:output message="tns:EasyIPCore___GetItemByInfoResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetItemByInfo2">
            <wsdl:documentation>
                Returns group or subnet data as simple data.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetItemByInfo2Request" />
            <wsdl:output message="tns:EasyIPCore___GetItemByInfo2Response" />
        </wsdl:operation>
        <wsdl:operation name="GetItemParentIds">
            <wsdl:documentation>
                Returns the parent IDs of a group or subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetItemParentIdsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetItemParentIdsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetSystemSettings">
            <wsdl:documentation>
                Returns the global system settings.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetSystemSettingsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetSystemSettingsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetTableUserFields">
            <wsdl:documentation>
                Returns the fields that belong to a table.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetTableUserFieldsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetTableUserFieldsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetTotalSubnetAndIPAddressCounts">
            <wsdl:documentation>
                Returns the total number of active subnets and IP addresses in the database.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetTotalSubnetAndIPAddressCountsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetTotalSubnetAndIPAddressCountsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetUserDisabledFunctions">
            <wsdl:documentation>
                Returns a list of user functions that are not available to the current user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetUserDisabledFunctionsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetUserDisabledFunctionsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetUserInformation">
            <wsdl:documentation>
                Returns information about the current user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetUserInformationRequest" />
            <wsdl:output message="tns:EasyIPCore___GetUserInformationResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetUserMessages">
            <wsdl:documentation>
                Returns a list of unread user messages.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetUserMessagesRequest" />
            <wsdl:output message="tns:EasyIPCore___GetUserMessagesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetUserPrivileges">
            <wsdl:documentation>
                Returns the privileges assigned to the current user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetUserPrivilegesRequest" />
            <wsdl:output message="tns:EasyIPCore___GetUserPrivilegesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetUserTables">
            <wsdl:documentation>
                Returns a list of accessible database tables and their associated fields.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetUserTablesRequest" />
            <wsdl:output message="tns:EasyIPCore___GetUserTablesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetVirtualDirectories">
            <wsdl:documentation>
                Returns a list of virtual directories.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetVirtualDirectoriesRequest" />
            <wsdl:output message="tns:EasyIPCore___GetVirtualDirectoriesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetVirtualFileData">
            <wsdl:documentation>
                Returns the file data associated with a virtual file.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetVirtualFileDataRequest" />
            <wsdl:output message="tns:EasyIPCore___GetVirtualFileDataResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetVirtualFiles">
            <wsdl:documentation>
                Returns a list of virtual files.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetVirtualFilesRequest" />
            <wsdl:output message="tns:EasyIPCore___GetVirtualFilesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetWebClientSettings">
            <wsdl:documentation>
                Returns the web client settings.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___GetWebClientSettingsRequest" />
            <wsdl:output message="tns:EasyIPCore___GetWebClientSettingsResponse" />
        </wsdl:operation>
        <wsdl:operation name="LinkedIPDescriptionExists">
            <wsdl:documentation>
                Returns true if a linked IP address description exists.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___LinkedIPDescriptionExistsRequest" />
            <wsdl:output message="tns:EasyIPCore___LinkedIPDescriptionExistsResponse" />
        </wsdl:operation>
        <wsdl:operation name="MoveVirtualDirectory">
            <wsdl:documentation>
                Moves a virtual server directory to a new location.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___MoveVirtualDirectoryRequest" />
            <wsdl:output message="tns:EasyIPCore___MoveVirtualDirectoryResponse" />
        </wsdl:operation>
        <wsdl:operation name="MoveVirtualFile">
            <wsdl:documentation>
                Moves a virtual server file to a new location.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___MoveVirtualFileRequest" />
            <wsdl:output message="tns:EasyIPCore___MoveVirtualFileResponse" />
        </wsdl:operation>
        <wsdl:operation name="RenameVirtualDirectory">
            <wsdl:documentation>
                Renames a virtual server directory.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___RenameVirtualDirectoryRequest" />
            <wsdl:output message="tns:EasyIPCore___RenameVirtualDirectoryResponse" />
        </wsdl:operation>
        <wsdl:operation name="RenameVirtualFile">
            <wsdl:documentation>
                Renames a virtual server file.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___RenameVirtualFileRequest" />
            <wsdl:output message="tns:EasyIPCore___RenameVirtualFileResponse" />
        </wsdl:operation>
        <wsdl:operation name="SearchARPEntries">
            <wsdl:documentation>
                Searches for matching ARP entries, returning the result in a binary format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SearchARPEntriesRequest" />
            <wsdl:output message="tns:EasyIPCore___SearchARPEntriesResponse" />
        </wsdl:operation>
        <wsdl:operation name="SearchARPEntries2">
            <wsdl:documentation>
                Searches for matching ARP entries, returning the result as simple data.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SearchARPEntries2Request" />
            <wsdl:output message="tns:EasyIPCore___SearchARPEntries2Response" />
        </wsdl:operation>
        <wsdl:operation name="SearchDatabaseNative">
            <wsdl:documentation>
                Searches the Subnet and IP address tables using a native database method. The results are returned in a binary format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SearchDatabaseNativeRequest" />
            <wsdl:output message="tns:EasyIPCore___SearchDatabaseNativeResponse" />
        </wsdl:operation>
        <wsdl:operation name="SearchDatabaseNative2">
            <wsdl:documentation>
                Searches the Subnet and IP address tables using a native database method. The results are returned as simple data.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SearchDatabaseNative2Request" />
            <wsdl:output message="tns:EasyIPCore___SearchDatabaseNative2Response" />
        </wsdl:operation>
        <wsdl:operation name="SearchDatabaseFTS">
            <wsdl:documentation>
                Searches the Subnet and IP address tables using the Full Text Search index. The results are returned in a binary format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SearchDatabaseFTSRequest" />
            <wsdl:output message="tns:EasyIPCore___SearchDatabaseFTSResponse" />
        </wsdl:operation>
        <wsdl:operation name="SearchDatabaseFTS2">
            <wsdl:documentation>
                Searches the Subnet and IP address tables using the Full Text Search index. The results are returned as simple data.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SearchDatabaseFTS2Request" />
            <wsdl:output message="tns:EasyIPCore___SearchDatabaseFTS2Response" />
        </wsdl:operation>
        <wsdl:operation name="SearchItems">
            <wsdl:documentation>
                Returns an array of groups/subnets that start with the search text.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SearchItemsRequest" />
            <wsdl:output message="tns:EasyIPCore___SearchItemsResponse" />
        </wsdl:operation>
        <wsdl:operation name="SendEmail">
            <wsdl:documentation>
                Adds an email to the send queue.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SendEmailRequest" />
            <wsdl:output message="tns:EasyIPCore___SendEmailResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetClientSettings">
            <wsdl:documentation>
                Sets the settings of the current client.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SetClientSettingsRequest" />
            <wsdl:output message="tns:EasyIPCore___SetClientSettingsResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetVirtualFileReadOnly">
            <wsdl:documentation>
                Sets the read only flag of a virtual file.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SetVirtualFileReadOnlyRequest" />
            <wsdl:output message="tns:EasyIPCore___SetVirtualFileReadOnlyResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetWebClientSettings">
            <wsdl:documentation>
                Sets the web client settings of the current user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___SetWebClientSettingsRequest" />
            <wsdl:output message="tns:EasyIPCore___SetWebClientSettingsResponse" />
        </wsdl:operation>
        <wsdl:operation name="VirtualDirectoryExists">
            <wsdl:documentation>
                Returns true if a virtual directory exists.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___VirtualDirectoryExistsRequest" />
            <wsdl:output message="tns:EasyIPCore___VirtualDirectoryExistsResponse" />
        </wsdl:operation>
        <wsdl:operation name="VirtualFileExists">
            <wsdl:documentation>
                Returns true if a virtual file exists.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPCore___VirtualFileExistsRequest" />
            <wsdl:output message="tns:EasyIPCore___VirtualFileExistsResponse" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="LoginService">
        <wsdl:documentation>
            Provides login/logout functionality. This is the only service that can be accessed without a client session being created.
        </wsdl:documentation>
        <wsdl:operation name="AuthenticateDiscoveryBot">
            <wsdl:documentation>
                Authenticates a Discovery Bot.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___AuthenticateDiscoveryBotRequest" />
            <wsdl:output message="tns:LoginService___AuthenticateDiscoveryBotResponse" />
        </wsdl:operation>
        <wsdl:operation name="AuthenticateDiscoveryBot2">
            <wsdl:documentation>
                Authenticates a Discovery Bot using a name rather than the bot&apos;s IP Address.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___AuthenticateDiscoveryBot2Request" />
            <wsdl:output message="tns:LoginService___AuthenticateDiscoveryBot2Response" />
        </wsdl:operation>
        <wsdl:operation name="ChangePasswordWithOldPassword">
            <wsdl:documentation>
                Changes a user&apos;s password using the old password for authentication. Passwords and usernames are unencrypted.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___ChangePasswordWithOldPasswordRequest" />
            <wsdl:output message="tns:LoginService___ChangePasswordWithOldPasswordResponse" />
        </wsdl:operation>
        <wsdl:operation name="ChangePasswordWithOldPassword2">
            <wsdl:documentation>
                Changes a user&apos;s password using the old password for authentication. Passwords and usernames are encrypted.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___ChangePasswordWithOldPassword2Request" />
            <wsdl:output message="tns:LoginService___ChangePasswordWithOldPassword2Response" />
        </wsdl:operation>
        <wsdl:operation name="ChangePasswordWithVerificationCode">
            <wsdl:documentation>
                Changes a user&apos;s password using a verification code for authentication. Passwords and usernames are unencrypted.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___ChangePasswordWithVerificationCodeRequest" />
            <wsdl:output message="tns:LoginService___ChangePasswordWithVerificationCodeResponse" />
        </wsdl:operation>
        <wsdl:operation name="ChangePasswordWithVerificationCode2">
            <wsdl:documentation>
                Changes a user&apos;s password using a verification code for authentication. Passwords and usernames are encrypted.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___ChangePasswordWithVerificationCode2Request" />
            <wsdl:output message="tns:LoginService___ChangePasswordWithVerificationCode2Response" />
        </wsdl:operation>
        <wsdl:operation name="DownloadClientInstallerChunk">
            <wsdl:documentation>
                Deprecated. Use DownloadInstallerChunk.

                Downloads a chunk of the client installer for versions previous to 6.1.0.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___DownloadClientInstallerChunkRequest" />
            <wsdl:output message="tns:LoginService___DownloadClientInstallerChunkResponse" />
        </wsdl:operation>
        <wsdl:operation name="DownloadIntallerChunk">
            <wsdl:documentation>
                Downloads a chunk of a client installer.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___DownloadIntallerChunkRequest" />
            <wsdl:output message="tns:LoginService___DownloadIntallerChunkResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetDownloadClientSize">
            <wsdl:documentation>
                Deprecated. Use GetDownloadSize.

                Returns the size of the client installer for versions previous to 6.1.0.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___GetDownloadClientSizeRequest" />
            <wsdl:output message="tns:LoginService___GetDownloadClientSizeResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetDownloadSize">
            <wsdl:documentation>
                Returns the size of a client installer.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___GetDownloadSizeRequest" />
            <wsdl:output message="tns:LoginService___GetDownloadSizeResponse" />
        </wsdl:operation>
        <wsdl:operation name="LoggedIn">
            <wsdl:documentation>
                Returns true is the session is still logged in.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___LoggedInRequest" />
            <wsdl:output message="tns:LoginService___LoggedInResponse" />
        </wsdl:operation>
        <wsdl:operation name="Login">
            <wsdl:documentation>
                Logs on to the server and creates a new session.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___LoginRequest" />
            <wsdl:output message="tns:LoginService___LoginResponse" />
        </wsdl:operation>
        <wsdl:operation name="Login2">
            <wsdl:documentation>
                Logs on to the server using encrypted parameters and creates a new session.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___Login2Request" />
            <wsdl:output message="tns:LoginService___Login2Response" />
        </wsdl:operation>
        <wsdl:operation name="Logout">
            <wsdl:documentation>
                Logs out of the current session.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___LogoutRequest" />
            <wsdl:output message="tns:LoginService___LogoutResponse" />
        </wsdl:operation>
        <wsdl:operation name="ForgottenPassword">
            <wsdl:documentation>
                Sends a a verification code to a user&apos;s registered email address. The verification code can be used to change the password.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___ForgottenPasswordRequest" />
            <wsdl:output message="tns:LoginService___ForgottenPasswordResponse" />
        </wsdl:operation>
        <wsdl:operation name="RequestUsername">
            <wsdl:documentation>
                Sends a username to the user&apos;s registered email address.
            </wsdl:documentation>
            <wsdl:input message="tns:LoginService___RequestUsernameRequest" />
            <wsdl:output message="tns:LoginService___RequestUsernameResponse" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="EasyIPAdmin">
        <wsdl:documentation>
            This service is used to access Easy-IP Administration functionality. All funtionality in this service requires Manager, SAdministrator or Super Administrator rights.
        </wsdl:documentation>
        <wsdl:operation name="AddDiscoveryBot">
            <wsdl:documentation>
                Adds a new Discovery Bot.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___AddDiscoveryBotRequest" />
            <wsdl:output message="tns:EasyIPAdmin___AddDiscoveryBotResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddFieldPendingChange">
            <wsdl:documentation>
                Adds a field update to the field update queue. The field updates will be implemented the next time the server is restarted.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___AddFieldPendingChangeRequest" />
            <wsdl:output message="tns:EasyIPAdmin___AddFieldPendingChangeResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddFieldPendingChange2">
            <wsdl:input message="tns:EasyIPAdmin___AddFieldPendingChange2Request" />
            <wsdl:output message="tns:EasyIPAdmin___AddFieldPendingChange2Response" />
        </wsdl:operation>
        <wsdl:operation name="AddUser">
            <wsdl:documentation>
                Adds a new user to Easy-IP. The return value is the ID of the new user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___AddUserRequest" />
            <wsdl:output message="tns:EasyIPAdmin___AddUserResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddUserGroup">
            <wsdl:documentation>
                Adds a user group to Easy-IP. Users that are added to a user group inherit the properties of the group. The return value is the ID of the new group.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___AddUserGroupRequest" />
            <wsdl:output message="tns:EasyIPAdmin___AddUserGroupResponse" />
        </wsdl:operation>
        <wsdl:operation name="BackupDatabase">
            <wsdl:documentation>
                Starts a backup of the database using the properties defined in the server settings.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___BackupDatabaseRequest" />
            <wsdl:output message="tns:EasyIPAdmin___BackupDatabaseResponse" />
        </wsdl:operation>
        <wsdl:operation name="CopyFilesToUsers">
            <wsdl:documentation>
                Copies virtual user files to selected user directories.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___CopyFilesToUsersRequest" />
            <wsdl:output message="tns:EasyIPAdmin___CopyFilesToUsersResponse" />
        </wsdl:operation>
        <wsdl:operation name="DatabaseScriptTestCompile">
            <wsdl:documentation>
                Attempts to compile the database script using the values in the Delta.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DatabaseScriptTestCompileRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DatabaseScriptTestCompileResponse" />
        </wsdl:operation>
        <wsdl:operation name="DatabaseScriptTestRun">
            <wsdl:documentation>
                Attempts to run the database script using the values in the Delta.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DatabaseScriptTestRunRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DatabaseScriptTestRunResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteDatabaseBackup">
            <wsdl:documentation>
                Deletes the database specified in the parameter.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DeleteDatabaseBackupRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DeleteDatabaseBackupResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteDatabaseFile">
            <wsdl:documentation>
                Deletes the database file specified in the parameter.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DeleteDatabaseFileRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DeleteDatabaseFileResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteDiscoveryBot">
            <wsdl:documentation>
                Deletes a discovery bot.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DeleteDiscoveryBotRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DeleteDiscoveryBotResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteEmailQueueItems">
            <wsdl:documentation>
                Delete items from the Email queue,
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DeleteEmailQueueItemsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DeleteEmailQueueItemsResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteFieldPendingChange">
            <wsdl:documentation>
                Deletes a pending field change item.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DeleteFieldPendingChangeRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DeleteFieldPendingChangeResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteQueuedDiscovery">
            <wsdl:documentation>
                Deletes a discovery item from the discovery queue.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DeleteQueuedDiscoveryRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DeleteQueuedDiscoveryResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteUser">
            <wsdl:documentation>
                Deletes an Easy-IP user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DeleteUserRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DeleteUserResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteUserGroup">
            <wsdl:documentation>
                Delete a User Group.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DeleteUserGroupRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DeleteUserGroupResponse" />
        </wsdl:operation>
        <wsdl:operation name="DisconnectUserSessions">
            <wsdl:documentation>
                Forcibly disconnects Easy-IP user sesions. Before the session is discnnected, an event is sent to the client with an optional reason parameter.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___DisconnectUserSessionsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___DisconnectUserSessionsResponse" />
        </wsdl:operation>
        <wsdl:operation name="EmailUsers">
            <wsdl:documentation>
                Sends an email to a list of users.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___EmailUsersRequest" />
            <wsdl:output message="tns:EasyIPAdmin___EmailUsersResponse" />
        </wsdl:operation>
        <wsdl:operation name="EnableSubnetValidityChecks">
            <wsdl:documentation>
                Enables or disables subnet validity checks for a specific Autonomous Network
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___EnableSubnetValidityChecksRequest" />
            <wsdl:output message="tns:EasyIPAdmin___EnableSubnetValidityChecksResponse" />
        </wsdl:operation>
        <wsdl:operation name="ForceUserPasswordChange">
            <wsdl:documentation>
                Sets the force user change flag of a user. Once set, the user will need to change their password before they can log in.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___ForceUserPasswordChangeRequest" />
            <wsdl:output message="tns:EasyIPAdmin___ForceUserPasswordChangeResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetAuthenticationDetails">
            <wsdl:documentation>
                Returns a list of available authentication methods.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetAuthenticationDetailsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetAuthenticationDetailsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetBackupFilelist">
            <wsdl:documentation>
                Returns a list of backup files from the backup directory.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetBackupFilelistRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetBackupFilelistResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetClientSettings">
            <wsdl:documentation>
                Returns the client settings for the specified user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetClientSettingsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetClientSettingsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetDatabaseBackupLog">
            <wsdl:documentation>
                Returns the backup log for the backup file specified in BackupFilename.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetDatabaseBackupLogRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetDatabaseBackupLogResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetDatabaseRestoreLog">
            <wsdl:documentation>
                Returns the log file of a database restore file.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetDatabaseRestoreLogRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetDatabaseRestoreLogResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetEasyIPUser">
            <wsdl:documentation>
                Returns an Easy-IP user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetEasyIPUserRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetEasyIPUserResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetEasyIPUserGroups">
            <wsdl:documentation>
                Returns an array of all the Easy-IP user groups.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetEasyIPUserGroupsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetEasyIPUserGroupsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetEasyIPUserGroupsAndUsers">
            <wsdl:documentation>
                Returns an array of Easy-IP user groups along with their associated users.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetEasyIPUserGroupsAndUsersRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetEasyIPUserGroupsAndUsersResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetEasyIPUsers">
            <wsdl:documentation>
                Returns an array of all the Easy-IP users.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetEasyIPUsersRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetEasyIPUsersResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetEmailQueueItems">
            <wsdl:documentation>
                Returns an array of items in the email queue.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetEmailQueueItemsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetEmailQueueItemsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetFieldPendingUpdates">
            <wsdl:documentation>
                Returns an array of pending database updates.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetFieldPendingUpdatesRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetFieldPendingUpdatesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetRestoredDatabaseFilelist">
            <wsdl:documentation>
                Returns an array of restored database files.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetRestoredDatabaseFilelistRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetRestoredDatabaseFilelistResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetServerRestartDateTime">
            <wsdl:documentation>
                Returns the date/time that the server is scheduled to restart. If the return value is 0, the server is not currently scheduled to restart.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetServerRestartDateTimeRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetServerRestartDateTimeResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetServerSettings">
            <wsdl:documentation>
                Returns the server settings.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetServerSettingsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetServerSettingsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetTableScript">
            <wsdl:documentation>
                Returns the table scripts associated with the Table Name.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetTableScriptRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetTableScriptResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetUserDisabledFunctions">
            <wsdl:documentation>
                Returns an array of disabled functions.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetUserDisabledFunctionsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetUserDisabledFunctionsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetUserPrivileges">
            <wsdl:documentation>
                Returns the user privileges for the specified user.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetUserPrivilegesRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetUserPrivilegesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetUserSessions">
            <wsdl:documentation>
                Returns an array with details of all the active user sessions.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetUserSessionsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetUserSessionsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetValidFieldDataTypes">
            <wsdl:documentation>
                Returns an array containing types and descriptions of the database field types available in Easy-IP.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___GetValidFieldDataTypesRequest" />
            <wsdl:output message="tns:EasyIPAdmin___GetValidFieldDataTypesResponse" />
        </wsdl:operation>
        <wsdl:operation name="PurgeLogsAndBackups">
            <wsdl:documentation>
                Purges the log tables.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___PurgeLogsAndBackupsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___PurgeLogsAndBackupsResponse" />
        </wsdl:operation>
        <wsdl:operation name="ReloadSettings">
            <wsdl:documentation>
                Forces the server to reload it&apos;s settings.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___ReloadSettingsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___ReloadSettingsResponse" />
        </wsdl:operation>
        <wsdl:operation name="RenameUserGroup">
            <wsdl:documentation>
                Rename a user group.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___RenameUserGroupRequest" />
            <wsdl:output message="tns:EasyIPAdmin___RenameUserGroupResponse" />
        </wsdl:operation>
        <wsdl:operation name="RestartServer">
            <wsdl:documentation>
                Schedules a restart of the Easy-IP server.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___RestartServerRequest" />
            <wsdl:output message="tns:EasyIPAdmin___RestartServerResponse" />
        </wsdl:operation>
        <wsdl:operation name="RestoreDatabase">
            <wsdl:documentation>
                Restores a database to the default restore directory.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___RestoreDatabaseRequest" />
            <wsdl:output message="tns:EasyIPAdmin___RestoreDatabaseResponse" />
        </wsdl:operation>
        <wsdl:operation name="ScheduleDatabaseBackup">
            <wsdl:documentation>
                Creates a new backup event based on the backup parameters in the server settings.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___ScheduleDatabaseBackupRequest" />
            <wsdl:output message="tns:EasyIPAdmin___ScheduleDatabaseBackupResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetClientSettings">
            <wsdl:documentation>
                Updates a client&apos;s settings.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetClientSettingsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetClientSettingsResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetDiscoveryBotEnabled">
            <wsdl:documentation>
                Enables/disables a discovery bot.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetDiscoveryBotEnabledRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetDiscoveryBotEnabledResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetServerSettings">
            <wsdl:documentation>
                Updates the server settings.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetServerSettingsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetServerSettingsResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetTableScript">
            <wsdl:documentation>
                Updates a database table script.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetTableScriptRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetTableScriptResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetUserDisabledFunctions">
            <wsdl:documentation>
                Sets the disabled user functions for the chosen users.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetUserDisabledFunctionsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetUserDisabledFunctionsResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetUserField">
            <wsdl:documentation>
                Sets the parameters for a user field.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetUserFieldRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetUserFieldResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetUserFieldDisplayOrder">
            <wsdl:documentation>
                The new order for the user fields.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetUserFieldDisplayOrderRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetUserFieldDisplayOrderResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetUserGroup">
            <wsdl:documentation>
                Sets the IDs of the users that belong to a specific user group.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetUserGroupRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetUserGroupResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetUserPassword">
            <wsdl:documentation>
                Sets a user password.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetUserPasswordRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetUserPasswordResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetUserPrivileges">
            <wsdl:documentation>
                Sets user privileges.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetUserPrivilegesRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetUserPrivilegesResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetUserProperties">
            <wsdl:documentation>
                Sets user properties.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___SetUserPropertiesRequest" />
            <wsdl:output message="tns:EasyIPAdmin___SetUserPropertiesResponse" />
        </wsdl:operation>
        <wsdl:operation name="StartFullTextSearchIndexing">
            <wsdl:documentation>
                Starts rebuild of the full text search index.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___StartFullTextSearchIndexingRequest" />
            <wsdl:output message="tns:EasyIPAdmin___StartFullTextSearchIndexingResponse" />
        </wsdl:operation>
        <wsdl:operation name="UpdateDiscoveryBot">
            <wsdl:documentation>
                Updates a discovery bot&apos;s properties.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___UpdateDiscoveryBotRequest" />
            <wsdl:output message="tns:EasyIPAdmin___UpdateDiscoveryBotResponse" />
        </wsdl:operation>
        <wsdl:operation name="UpdateEmailQueueItems">
            <wsdl:documentation>
                Updates the status of email queue items.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___UpdateEmailQueueItemsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___UpdateEmailQueueItemsResponse" />
        </wsdl:operation>
        <wsdl:operation name="UpdateMACAddressPrefixes">
            <wsdl:documentation>
                Requests the server to begin the process of downloading and updating the MAC address prefixes
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___UpdateMACAddressPrefixesRequest" />
            <wsdl:output message="tns:EasyIPAdmin___UpdateMACAddressPrefixesResponse" />
        </wsdl:operation>
        <wsdl:operation name="UserExists">
            <wsdl:documentation>
                Returns TRUE if a user name exists.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPAdmin___UserExistsRequest" />
            <wsdl:output message="tns:EasyIPAdmin___UserExistsResponse" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="EasyIPEdit">
        <wsdl:documentation>
            All editing functionality is included in this service.
        </wsdl:documentation>
        <wsdl:operation name="AddAddressesToSubnet">
            <wsdl:documentation>
                Adds a list of IP addresses to a subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddAddressesToSubnetRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddAddressesToSubnetResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddAddressRangeToSubnet">
            <wsdl:documentation>
                Adds a range of IP Addresses to a subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddAddressRangeToSubnetRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddAddressRangeToSubnetResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddAllAddressesToSubnets">
            <wsdl:documentation>
                Adds all valid IP Addresses to a list of subnets.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddAllAddressesToSubnetsRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddAllAddressesToSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddAllChildSubnets">
            <wsdl:documentation>
                Adds all the child subnets to a subnet using the cidr mask provided.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddAllChildSubnetsRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddAllChildSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddAutonomousNetwork">
            <wsdl:documentation>
                Adds a new autonomous network. The user that creates the autonomous network will be given full privileges to the new autonomous network. Other users will need to be granted the privileges specifically.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddAutonomousNetworkRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddAutonomousNetworkResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddChildSubnets">
            <wsdl:documentation>
                Adds specific child subnets to a subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddChildSubnetsRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddChildSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddGroup">
            <wsdl:documentation>
                Adds a new group to an autonomous network or group.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddGroupRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddGroupResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddGroups">
            <wsdl:documentation>
                Adds multiple groups to an autonomous network or group.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddGroupsRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddGroupsResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddIPAddressLinkDescription">
            <wsdl:documentation>
                Adds an IP Address link description and returns the new ID.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddIPAddressLinkDescriptionRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddIPAddressLinkDescriptionResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddIPAddressLinks">
            <wsdl:documentation>
                Adds IP address links.

                If the first and second ID arrays contain the same number of items, one to one links will be created.
                If the first or second array contains a single item and the other array contains multiple items, a one to many relationship will be created.

                The link description must already have been created using the AddIPAddressLinkDescription method.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddIPAddressLinksRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddIPAddressLinksResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddSubnets">
            <wsdl:documentation>
                Adds a list of root Subets to a group or autonomous network.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddSubnetsRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="AddSubnetsToCorrectParents">
            <wsdl:documentation>
                Adds a list of subnets to their correct parent subnets. If the subnet does not have a parent, it will be added to the default parent.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___AddSubnetsToCorrectParentsRequest" />
            <wsdl:output message="tns:EasyIPEdit___AddSubnetsToCorrectParentsResponse" />
        </wsdl:operation>
        <wsdl:operation name="ApplyDelta">
            <wsdl:documentation>
                Applies changes to the user data in the Subnet or Address table.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___ApplyDeltaRequest" />
            <wsdl:output message="tns:EasyIPEdit___ApplyDeltaResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteAddressesFromSubnets">
            <wsdl:documentation>
                Delete all the IP Addresses from a list of subnets.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___DeleteAddressesFromSubnetsRequest" />
            <wsdl:output message="tns:EasyIPEdit___DeleteAddressesFromSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteAutonomousNetwork">
            <wsdl:documentation>
                Deletes an autonomous network. The autonomous network must be empty before you can delete it.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___DeleteAutonomousNetworkRequest" />
            <wsdl:output message="tns:EasyIPEdit___DeleteAutonomousNetworkResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteGroupsOrSubnets">
            <wsdl:documentation>
                Delete groups/subnets.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___DeleteGroupsOrSubnetsRequest" />
            <wsdl:output message="tns:EasyIPEdit___DeleteGroupsOrSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteIPAddressesById">
            <wsdl:documentation>
                Deletes a list of IP addresses.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___DeleteIPAddressesByIdRequest" />
            <wsdl:output message="tns:EasyIPEdit___DeleteIPAddressesByIdResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteIPAddressLinks">
            <wsdl:documentation>
                Deletes IP address links.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___DeleteIPAddressLinksRequest" />
            <wsdl:output message="tns:EasyIPEdit___DeleteIPAddressLinksResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteSubnetChildren">
            <wsdl:documentation>
                Deletes the children of subnets. Any IP addresses that belong to the deleted child subnets will be moved to the parent.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___DeleteSubnetChildrenRequest" />
            <wsdl:output message="tns:EasyIPEdit___DeleteSubnetChildrenResponse" />
        </wsdl:operation>
        <wsdl:operation name="ImportFromXML">
            <wsdl:documentation>
                Imports data in an XML format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___ImportFromXMLRequest" />
            <wsdl:output message="tns:EasyIPEdit___ImportFromXMLResponse" />
        </wsdl:operation>
        <wsdl:operation name="MoveGroupsAndSubnets">
            <wsdl:documentation>
                Move groups/subnets from one parent to another.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___MoveGroupsAndSubnetsRequest" />
            <wsdl:output message="tns:EasyIPEdit___MoveGroupsAndSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="PasteGroupStructure">
            <wsdl:documentation>
                Pastes the structure of an existing group hierarchy to a new location.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___PasteGroupStructureRequest" />
            <wsdl:output message="tns:EasyIPEdit___PasteGroupStructureResponse" />
        </wsdl:operation>
        <wsdl:operation name="PasteSubnetStructure">
            <wsdl:documentation>
                Pastes the structure of an existing subnet hierarchy to a new location. The destination subnets must have the sampe IP Address type and CIDR mask as the source subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___PasteSubnetStructureRequest" />
            <wsdl:output message="tns:EasyIPEdit___PasteSubnetStructureResponse" />
        </wsdl:operation>
        <wsdl:operation name="RemoveParentSubnets">
            <wsdl:documentation>
                Removes the parent subnets from the subnet subnets that are defined in SubnetIds
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___RemoveParentSubnetsRequest" />
            <wsdl:output message="tns:EasyIPEdit___RemoveParentSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="ReparentChildSubnets">
            <wsdl:documentation>
                Adds a new parent subnet between the parent subnet and a number of it&apos;s child subnets.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___ReparentChildSubnetsRequest" />
            <wsdl:output message="tns:EasyIPEdit___ReparentChildSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="Undo">
            <wsdl:documentation>
                Undoes the last edit operation.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___UndoRequest" />
            <wsdl:output message="tns:EasyIPEdit___UndoResponse" />
        </wsdl:operation>
        <wsdl:operation name="UpdateAutonomousNetwork">
            <wsdl:documentation>
                Updates the name and notes associated with an autonomous network.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___UpdateAutonomousNetworkRequest" />
            <wsdl:output message="tns:EasyIPEdit___UpdateAutonomousNetworkResponse" />
        </wsdl:operation>
        <wsdl:operation name="UpdateGroup">
            <wsdl:documentation>
                Update a group.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___UpdateGroupRequest" />
            <wsdl:output message="tns:EasyIPEdit___UpdateGroupResponse" />
        </wsdl:operation>
        <wsdl:operation name="UpdateUserFields">
            <wsdl:documentation>
                Updates the values of specific user data fields.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___UpdateUserFieldsRequest" />
            <wsdl:output message="tns:EasyIPEdit___UpdateUserFieldsResponse" />
        </wsdl:operation>
        <wsdl:operation name="CreateNextAvailableIPAddress">
            <wsdl:documentation>
                Creates the next available IP address in a subnet and returns its ID. If UpdateFieldName has a value it will be updated with the value in UpdateFieldValue.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___CreateNextAvailableIPAddressRequest" />
            <wsdl:output message="tns:EasyIPEdit___CreateNextAvailableIPAddressResponse" />
        </wsdl:operation>
        <wsdl:operation name="ReserveNextAvailableIPAddress">
            <wsdl:documentation>
                Sets the value of a field in the first matching IP address record. The IP Address ID is returned.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___ReserveNextAvailableIPAddressRequest" />
            <wsdl:output message="tns:EasyIPEdit___ReserveNextAvailableIPAddressResponse" />
        </wsdl:operation>
        <wsdl:operation name="SearchAndReplace">
            <wsdl:input message="tns:EasyIPEdit___SearchAndReplaceRequest" />
            <wsdl:output message="tns:EasyIPEdit___SearchAndReplaceResponse" />
        </wsdl:operation>
        <wsdl:operation name="SetSubnetAttributes">
            <wsdl:documentation>
                Set attributes for one or more groups/subnets.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPEdit___SetSubnetAttributesRequest" />
            <wsdl:output message="tns:EasyIPEdit___SetSubnetAttributesResponse" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="EasyIPTools">
        <wsdl:documentation>
            The tools service provides various functionality such as export, missing subnet generation etc.
        </wsdl:documentation>
        <wsdl:operation name="CheckTemplateParameters">
            <wsdl:documentation>
                Verifies the validity of the template parameters.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPTools___CheckTemplateParametersRequest" />
            <wsdl:output message="tns:EasyIPTools___CheckTemplateParametersResponse" />
        </wsdl:operation>
        <wsdl:operation name="CompileScript">
            <wsdl:documentation>
                (Deprecated, use CompileTemplateValidationScript)

                Compiles a template script.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPTools___CompileScriptRequest" />
            <wsdl:output message="tns:EasyIPTools___CompileScriptResponse" />
        </wsdl:operation>
        <wsdl:operation name="CompileScript2">
            <wsdl:input message="tns:EasyIPTools___CompileScript2Request" />
            <wsdl:output message="tns:EasyIPTools___CompileScript2Response" />
        </wsdl:operation>
        <wsdl:operation name="CopyTrees">
            <wsdl:documentation>
                Returns the subnet tree of a list of subnets.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPTools___CopyTreesRequest" />
            <wsdl:output message="tns:EasyIPTools___CopyTreesResponse" />
        </wsdl:operation>
        <wsdl:operation name="ExecuteTemplate">
            <wsdl:documentation>
                Executes a template and returns the result.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPTools___ExecuteTemplateRequest" />
            <wsdl:output message="tns:EasyIPTools___ExecuteTemplateResponse" />
        </wsdl:operation>
        <wsdl:operation name="ExecuteTemplate2">
            <wsdl:input message="tns:EasyIPTools___ExecuteTemplate2Request" />
            <wsdl:output message="tns:EasyIPTools___ExecuteTemplate2Response" />
        </wsdl:operation>
        <wsdl:operation name="ExportToCSV">
            <wsdl:documentation>
                Exports a portion of the subnet tree as CSV.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPTools___ExportToCSVRequest" />
            <wsdl:output message="tns:EasyIPTools___ExportToCSVResponse" />
        </wsdl:operation>
        <wsdl:operation name="ExportToHTML">
            <wsdl:documentation>
                Exports a portion of the subnet tree as HTML.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPTools___ExportToHTMLRequest" />
            <wsdl:output message="tns:EasyIPTools___ExportToHTMLResponse" />
        </wsdl:operation>
        <wsdl:operation name="ExportToXML">
            <wsdl:documentation>
                Exports a portion of the subnet tree to XML.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPTools___ExportToXMLRequest" />
            <wsdl:output message="tns:EasyIPTools___ExportToXMLResponse" />
        </wsdl:operation>
        <wsdl:operation name="GenerateDefaultValues">
            <wsdl:documentation>
                Generates the default parameter values for a template script.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPTools___GenerateDefaultValuesRequest" />
            <wsdl:output message="tns:EasyIPTools___GenerateDefaultValuesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GenerateDefaultValues2">
            <wsdl:input message="tns:EasyIPTools___GenerateDefaultValues2Request" />
            <wsdl:output message="tns:EasyIPTools___GenerateDefaultValues2Response" />
        </wsdl:operation>
        <wsdl:operation name="GetMissingSubnets">
            <wsdl:documentation>
                Returns a list of missing subnets within a range.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPTools___GetMissingSubnetsRequest" />
            <wsdl:output message="tns:EasyIPTools___GetMissingSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetTemplateScriptHelp">
            <wsdl:input message="tns:EasyIPTools___GetTemplateScriptHelpRequest" />
            <wsdl:output message="tns:EasyIPTools___GetTemplateScriptHelpResponse" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="EasyIPDiscovery">
        <wsdl:documentation>
            This service deals with all aspects of host discoveries. Discovery bot functionality is also included here.
        </wsdl:documentation>
        <wsdl:operation name="GetDiscoverableSubnets">
            <wsdl:documentation>
                Returns an array of subnets that are discoverable.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___GetDiscoverableSubnetsRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___GetDiscoverableSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetHostDiscoverySubnetIPAddresses">
            <wsdl:documentation>
                Returns a DiscoveryData object that contains data for the IP Addresses attached to the subnet whose Subnet ID is provided. The DiscoveryData should be updated and passed back to the UpdateDiscoveryData method in order to update the database.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___GetHostDiscoverySubnetIPAddressesRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___GetHostDiscoverySubnetIPAddressesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetHostDiscoveryIPAddresses">
            <wsdl:documentation>
                Returns a DiscoveryData object that contains data for the IP Addresses whose IDs are contained in the IPAddressIds array. The DiscoveryData should be updated and passed back to the UpdateDiscoveryData method in order to update the database.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___GetHostDiscoveryIPAddressesRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___GetHostDiscoveryIPAddressesResponse" />
        </wsdl:operation>
        <wsdl:operation name="UpdateDiscoveryData">
            <wsdl:documentation>
                Updates the database with the data contained in the DiscoveryData parameter.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___UpdateDiscoveryDataRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___UpdateDiscoveryDataResponse" />
        </wsdl:operation>
        <wsdl:operation name="BotGetDiscoverableSubnets">
            <wsdl:documentation>
                Returns a list of subnets that the discovery bot needs to discover. If the list is empty, there are no currently queued discoveries for this discovery bot.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___BotGetDiscoverableSubnetsRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___BotGetDiscoverableSubnetsResponse" />
        </wsdl:operation>
        <wsdl:operation name="BotUpdateDiscoveryProgress">
            <wsdl:documentation>
                Sends the progress of a bot discovery to the server.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___BotUpdateDiscoveryProgressRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___BotUpdateDiscoveryProgressResponse" />
        </wsdl:operation>
        <wsdl:operation name="BotUpdateDiscoveryStatus">
            <wsdl:documentation>
                Send the status of the bot discovery to the server.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___BotUpdateDiscoveryStatusRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___BotUpdateDiscoveryStatusResponse" />
        </wsdl:operation>
        <wsdl:operation name="BotCancelDiscovery">
            <wsdl:documentation>
                Cancels the bot discovery that matches the Discovery ID.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___BotCancelDiscoveryRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___BotCancelDiscoveryResponse" />
        </wsdl:operation>
        <wsdl:operation name="QueueDiscovery">
            <wsdl:documentation>
                Adds a new discovery to the discovery bot queue.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___QueueDiscoveryRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___QueueDiscoveryResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetDiscoveryBots">
            <wsdl:documentation>
                Returns a list of available discovery bots.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___GetDiscoveryBotsRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___GetDiscoveryBotsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetQueuedDiscoveries">
            <wsdl:documentation>
                Returns a list of discoveries that are attached to a particular discovery bot.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___GetQueuedDiscoveriesRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___GetQueuedDiscoveriesResponse" />
        </wsdl:operation>
        <wsdl:operation name="DeleteQueuedDiscovery">
            <wsdl:documentation>
                Deletes a queued discovery.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___DeleteQueuedDiscoveryRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___DeleteQueuedDiscoveryResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetUserQueuedDiscoveries">
            <wsdl:documentation>
                Returns a list of discoveries that have been intiated by the user attached to the current session.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___GetUserQueuedDiscoveriesRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___GetUserQueuedDiscoveriesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetDiscoveryLog">
            <wsdl:documentation>
                Returns the discovery log for a particular discovery.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPDiscovery___GetDiscoveryLogRequest" />
            <wsdl:output message="tns:EasyIPDiscovery___GetDiscoveryLogResponse" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="EasyIPReport">
        <wsdl:documentation>
            This service provides reporting functionality.
        </wsdl:documentation>
        <wsdl:operation name="ExecuteQuery">
            <wsdl:documentation>
                Executes a database query and returns the results in a binary format. Only SELECT queries are allowed.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___ExecuteQueryRequest" />
            <wsdl:output message="tns:EasyIPReport___ExecuteQueryResponse" />
        </wsdl:operation>
        <wsdl:operation name="ExecuteQuery2">
            <wsdl:documentation>
                Executes a database query and returns the results as simple data. Only SELECT queries are allowed.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___ExecuteQuery2Request" />
            <wsdl:output message="tns:EasyIPReport___ExecuteQuery2Response" />
        </wsdl:operation>
        <wsdl:operation name="ExportQuery">
            <wsdl:documentation>
                Exports a query to the specified format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___ExportQueryRequest" />
            <wsdl:output message="tns:EasyIPReport___ExportQueryResponse" />
        </wsdl:operation>
        <wsdl:operation name="ExportQueryAndEmail">
            <wsdl:documentation>
                Exports a query, then emails it to the specified recipient.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___ExportQueryAndEmailRequest" />
            <wsdl:output message="tns:EasyIPReport___ExportQueryAndEmailResponse" />
        </wsdl:operation>
        <wsdl:operation name="GenerateReport">
            <wsdl:documentation>
                Generates a report. A GUID string is returned. Pass the GUID to the GetDownloadFileSize and GetDownloadFilePart methods (EasyIPService) to retrieve the generated file.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___GenerateReportRequest" />
            <wsdl:output message="tns:EasyIPReport___GenerateReportResponse" />
        </wsdl:operation>
        <wsdl:operation name="GenerateReportAndEmail">
            <wsdl:documentation>
                Generates a report and emails it as an attachment.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___GenerateReportAndEmailRequest" />
            <wsdl:output message="tns:EasyIPReport___GenerateReportAndEmailResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetAllReportObjectNames">
            <wsdl:documentation>
                Returns all the query/report database object names.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___GetAllReportObjectNamesRequest" />
            <wsdl:output message="tns:EasyIPReport___GetAllReportObjectNamesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetAvailableReportObjectNames">
            <wsdl:documentation>
                Returns the query/report database object names that are available to non administrator users.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___GetAvailableReportObjectNamesRequest" />
            <wsdl:output message="tns:EasyIPReport___GetAvailableReportObjectNamesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetDefaultReportParams">
            <wsdl:documentation>
                Returns an array of default report parameters for the specified group or subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___GetDefaultReportParamsRequest" />
            <wsdl:output message="tns:EasyIPReport___GetDefaultReportParamsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetReport">
            <wsdl:documentation>
                Returns a report object.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___GetReportRequest" />
            <wsdl:output message="tns:EasyIPReport___GetReportResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetStoredProcedureParameters">
            <wsdl:documentation>
                Returns the parameters of a database stored procedure.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___GetStoredProcedureParametersRequest" />
            <wsdl:output message="tns:EasyIPReport___GetStoredProcedureParametersResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetTableFieldInfo">
            <wsdl:documentation>
                Returns the fields that belong to a database table.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___GetTableFieldInfoRequest" />
            <wsdl:output message="tns:EasyIPReport___GetTableFieldInfoResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetViewFieldInfo">
            <wsdl:documentation>
                Returns the fields that belong to a database view.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPReport___GetViewFieldInfoRequest" />
            <wsdl:output message="tns:EasyIPReport___GetViewFieldInfoResponse" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="EasyIPUtils">
        <wsdl:documentation>
            The Utils service exposes helper functionality.
        </wsdl:documentation>
        <wsdl:operation name="CheckMultipleIPVersions">
            <wsdl:documentation>
                Checks that all the IP addresses in an array are of a specific type.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___CheckMultipleIPVersionsRequest" />
            <wsdl:output message="tns:EasyIPUtils___CheckMultipleIPVersionsResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetBroadcastAddress">
            <wsdl:documentation>
                Returns the broadcast address of a subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___GetBroadcastAddressRequest" />
            <wsdl:output message="tns:EasyIPUtils___GetBroadcastAddressResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetHighAddress">
            <wsdl:documentation>
                Returns the high address of a subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___GetHighAddressRequest" />
            <wsdl:output message="tns:EasyIPUtils___GetHighAddressResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetIPAddressList">
            <wsdl:documentation>
                Returns all the IP addresses available in a specific subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___GetIPAddressListRequest" />
            <wsdl:output message="tns:EasyIPUtils___GetIPAddressListResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetIPVers">
            <wsdl:documentation>
                Returns the IP version of a string.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___GetIPVersRequest" />
            <wsdl:output message="tns:EasyIPUtils___GetIPVersResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetLowAddress">
            <wsdl:documentation>
                Returns the low address of a subnet.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___GetLowAddressRequest" />
            <wsdl:output message="tns:EasyIPUtils___GetLowAddressResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetSubnet">
            <wsdl:documentation>
                Returns the subnet portion of an IP address.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___GetSubnetRequest" />
            <wsdl:output message="tns:EasyIPUtils___GetSubnetResponse" />
        </wsdl:operation>
        <wsdl:operation name="IsIPLowerThan">
            <wsdl:documentation>
                Returns true if IP1 is less than IP2.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___IsIPLowerThanRequest" />
            <wsdl:output message="tns:EasyIPUtils___IsIPLowerThanResponse" />
        </wsdl:operation>
        <wsdl:operation name="PadIPAddress">
            <wsdl:documentation>
                Pads an IPv4 or IPv6 address with zeros.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___PadIPAddressRequest" />
            <wsdl:output message="tns:EasyIPUtils___PadIPAddressResponse" />
        </wsdl:operation>
        <wsdl:operation name="UnPadIPAddress">
            <wsdl:documentation>
                Removes leading zeros from an IP address. In the case of IPv6 addresses, the IP address will be shortened to it&apos;s most compact form e.g. FFFF:0000:0000:0000:0001:000D:0211:1111 will become FFFF::1:D:211:1111.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___UnPadIPAddressRequest" />
            <wsdl:output message="tns:EasyIPUtils___UnPadIPAddressResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetMaskListValues">
            <wsdl:documentation>
                Returns all the subnet masks in a range.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___GetMaskListValuesRequest" />
            <wsdl:output message="tns:EasyIPUtils___GetMaskListValuesResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetSubnetRange">
            <wsdl:documentation>
                Returns a list of child subnets given a parent subnet and child subnet mask.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___GetSubnetRangeRequest" />
            <wsdl:output message="tns:EasyIPUtils___GetSubnetRangeResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetSubnetInfoHTML">
            <wsdl:documentation>
                Returns information about a subnet in HTML format.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___GetSubnetInfoHTMLRequest" />
            <wsdl:output message="tns:EasyIPUtils___GetSubnetInfoHTMLResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetIPInfo">
            <wsdl:documentation>
                Returns information about an IP address.
            </wsdl:documentation>
            <wsdl:input message="tns:EasyIPUtils___GetIPInfoRequest" />
            <wsdl:output message="tns:EasyIPUtils___GetIPInfoResponse" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="DataAbstractService">
        <wsdl:operation name="GetSchema">
            <wsdl:input message="tns:DataAbstractService___GetSchemaRequest" />
            <wsdl:output message="tns:DataAbstractService___GetSchemaResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetData">
            <wsdl:input message="tns:DataAbstractService___GetDataRequest" />
            <wsdl:output message="tns:DataAbstractService___GetDataResponse" />
        </wsdl:operation>
        <wsdl:operation name="UpdateData">
            <wsdl:input message="tns:DataAbstractService___UpdateDataRequest" />
            <wsdl:output message="tns:DataAbstractService___UpdateDataResponse" />
        </wsdl:operation>
        <wsdl:operation name="ExecuteCommand">
            <wsdl:input message="tns:DataAbstractService___ExecuteCommandRequest" />
            <wsdl:output message="tns:DataAbstractService___ExecuteCommandResponse" />
        </wsdl:operation>
        <wsdl:operation name="ExecuteCommandEx">
            <wsdl:input message="tns:DataAbstractService___ExecuteCommandExRequest" />
            <wsdl:output message="tns:DataAbstractService___ExecuteCommandExResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetTableSchema">
            <wsdl:input message="tns:DataAbstractService___GetTableSchemaRequest" />
            <wsdl:output message="tns:DataAbstractService___GetTableSchemaResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetCommandSchema">
            <wsdl:input message="tns:DataAbstractService___GetCommandSchemaRequest" />
            <wsdl:output message="tns:DataAbstractService___GetCommandSchemaResponse" />
        </wsdl:operation>
        <wsdl:operation name="SQLGetData">
            <wsdl:input message="tns:DataAbstractService___SQLGetDataRequest" />
            <wsdl:output message="tns:DataAbstractService___SQLGetDataResponse" />
        </wsdl:operation>
        <wsdl:operation name="SQLGetDataEx">
            <wsdl:input message="tns:DataAbstractService___SQLGetDataExRequest" />
            <wsdl:output message="tns:DataAbstractService___SQLGetDataExResponse" />
        </wsdl:operation>
        <wsdl:operation name="SQLExecuteCommand">
            <wsdl:input message="tns:DataAbstractService___SQLExecuteCommandRequest" />
            <wsdl:output message="tns:DataAbstractService___SQLExecuteCommandResponse" />
        </wsdl:operation>
        <wsdl:operation name="SQLExecuteCommandEx">
            <wsdl:input message="tns:DataAbstractService___SQLExecuteCommandExRequest" />
            <wsdl:output message="tns:DataAbstractService___SQLExecuteCommandExResponse" />
        </wsdl:operation>
        <wsdl:operation name="GetDatasetScripts">
            <wsdl:input message="tns:DataAbstractService___GetDatasetScriptsRequest" />
            <wsdl:output message="tns:DataAbstractService___GetDatasetScriptsResponse" />
        </wsdl:operation>
        <wsdl:operation name="RegisterForDataChangeNotification">
            <wsdl:input message="tns:DataAbstractService___RegisterForDataChangeNotificationRequest" />
            <wsdl:output message="tns:DataAbstractService___RegisterForDataChangeNotificationResponse" />
        </wsdl:operation>
        <wsdl:operation name="UnregisterForDataChangeNotification">
            <wsdl:input message="tns:DataAbstractService___UnregisterForDataChangeNotificationRequest" />
            <wsdl:output message="tns:DataAbstractService___UnregisterForDataChangeNotificationResponse" />
        </wsdl:operation>
        <wsdl:operation name="SimpleGetData">
            <wsdl:input message="tns:DataAbstractService___SimpleGetDataRequest" />
            <wsdl:output message="tns:DataAbstractService___SimpleGetDataResponse" />
        </wsdl:operation>
        <wsdl:operation name="SimpleUpdateData">
            <wsdl:input message="tns:DataAbstractService___SimpleUpdateDataRequest" />
            <wsdl:output message="tns:DataAbstractService___SimpleUpdateDataResponse" />
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="EasyIPCoreBinding" type="tns:EasyIPCore">
        <xs:annotation>
            <xs:documentation>
                Core Easy-IP functions.
            </xs:documentation>
        </xs:annotation>
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
        <wsdl:operation name="AddOrUpdateVirtualFile">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#AddOrUpdateVirtualFile" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddVirtualDirectory">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#AddVirtualDirectory" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CancelOperation">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#CancelOperation" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CheckUserFunctionAllowed">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#CheckUserFunctionAllowed" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CopyVirtualDirectoryContents">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#CopyVirtualDirectoryContents" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteDownloadFile">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#DeleteDownloadFile" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteVirtualDirectory">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#DeleteVirtualDirectory" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteVirtualFile">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#DeleteVirtualFile" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetAddressData">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetAddressData" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetAddressData2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetAddressData2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetAutonomousNetworkNameFromId">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetAutonomousNetworkNameFromId" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetAutonomousNetworkNotes">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetAutonomousNetworkNotes" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetAutonomousNetworks">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetAutonomousNetworks" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetAutonomousNetworks2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetAutonomousNetworks2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetChangeLogEntries">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetChangeLogEntries" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetChangeLogRevisions">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetChangeLogRevisions" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetChildNodes">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetChildNodes" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetChildNodes2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetChildNodes2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetClientSettings">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetClientSettings" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetDownloadFilePart">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetDownloadFilePart" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetDownloadFileSize">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetDownloadFileSize" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetEasyIPUser">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetEasyIPUser" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetFullTextSearchProgress">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetFullTextSearchProgress" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetIPAddressesBySubnet">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetIPAddressesBySubnet" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetIPAddressesBySubnet2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetIPAddressesBySubnet2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetIPAddressIdAndSubnetId">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetIPAddressIdAndSubnetId" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetItemData">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetItemData" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetItemData2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetItemData2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetItemRangeLimits">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetItemRangeLimits" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetLastUndoItem">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetLastUndoItem" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetLicenceDetails">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetLicenceDetails" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetLinkedIPAddressDescriptions">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetLinkedIPAddressDescriptions" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetLinkedIPAddresses">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetLinkedIPAddresses" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetLongSubnetPathFromSubnetId">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetLongSubnetPathFromSubnetId" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetPingHistory">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetPingHistory" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetRootData">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetRootData" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetRootData2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetRootData2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetRootNodes">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetRootNodes" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetRootNodes2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetRootNodes2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetItemById">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetItemById" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetItemById2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetItemById2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetItemByInfo">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetItemByInfo" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetItemByInfo2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetItemByInfo2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetItemParentIds">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetItemParentIds" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetSystemSettings">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetSystemSettings" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetTableUserFields">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetTableUserFields" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetTotalSubnetAndIPAddressCounts">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetTotalSubnetAndIPAddressCounts" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetUserDisabledFunctions">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetUserDisabledFunctions" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetUserInformation">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetUserInformation" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetUserMessages">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetUserMessages" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetUserPrivileges">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetUserPrivileges" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetUserTables">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetUserTables" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetVirtualDirectories">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetVirtualDirectories" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetVirtualFileData">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetVirtualFileData" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetVirtualFiles">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetVirtualFiles" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetWebClientSettings">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#GetWebClientSettings" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="LinkedIPDescriptionExists">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#LinkedIPDescriptionExists" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="MoveVirtualDirectory">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#MoveVirtualDirectory" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="MoveVirtualFile">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#MoveVirtualFile" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="RenameVirtualDirectory">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#RenameVirtualDirectory" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="RenameVirtualFile">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#RenameVirtualFile" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SearchARPEntries">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SearchARPEntries" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SearchARPEntries2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SearchARPEntries2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SearchDatabaseNative">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SearchDatabaseNative" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SearchDatabaseNative2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SearchDatabaseNative2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SearchDatabaseFTS">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SearchDatabaseFTS" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SearchDatabaseFTS2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SearchDatabaseFTS2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SearchItems">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SearchItems" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SendEmail">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SendEmail" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetClientSettings">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SetClientSettings" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetVirtualFileReadOnly">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SetVirtualFileReadOnly" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetWebClientSettings">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#SetWebClientSettings" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="VirtualDirectoryExists">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#VirtualDirectoryExists" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="VirtualFileExists">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPCore#VirtualFileExists" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="LoginServiceBinding" type="tns:LoginService">
        <xs:annotation>
            <xs:documentation>
                Provides login/logout functionality. This is the only service that can be accessed without a client session being created.
            </xs:documentation>
        </xs:annotation>
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
        <wsdl:operation name="AuthenticateDiscoveryBot">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#AuthenticateDiscoveryBot" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AuthenticateDiscoveryBot2">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#AuthenticateDiscoveryBot2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ChangePasswordWithOldPassword">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#ChangePasswordWithOldPassword" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ChangePasswordWithOldPassword2">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#ChangePasswordWithOldPassword2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ChangePasswordWithVerificationCode">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#ChangePasswordWithVerificationCode" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ChangePasswordWithVerificationCode2">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#ChangePasswordWithVerificationCode2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DownloadClientInstallerChunk">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#DownloadClientInstallerChunk" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DownloadIntallerChunk">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#DownloadIntallerChunk" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetDownloadClientSize">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#GetDownloadClientSize" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetDownloadSize">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#GetDownloadSize" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="LoggedIn">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#LoggedIn" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="Login">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#Login" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="Login2">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#Login2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="Logout">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#Logout" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ForgottenPassword">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#ForgottenPassword" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="RequestUsername">
            <soap:operation soapAction="urn:EasyIPLibrary-LoginService#RequestUsername" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="EasyIPAdminBinding" type="tns:EasyIPAdmin">
        <xs:annotation>
            <xs:documentation>
                This service is used to access Easy-IP Administration functionality. All funtionality in this service requires Manager, SAdministrator or Super Administrator rights.
            </xs:documentation>
        </xs:annotation>
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
        <wsdl:operation name="AddDiscoveryBot">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#AddDiscoveryBot" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddFieldPendingChange">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#AddFieldPendingChange" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddFieldPendingChange2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#AddFieldPendingChange2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddUser">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#AddUser" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddUserGroup">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#AddUserGroup" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="BackupDatabase">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#BackupDatabase" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CopyFilesToUsers">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#CopyFilesToUsers" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DatabaseScriptTestCompile">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DatabaseScriptTestCompile" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DatabaseScriptTestRun">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DatabaseScriptTestRun" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteDatabaseBackup">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DeleteDatabaseBackup" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteDatabaseFile">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DeleteDatabaseFile" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteDiscoveryBot">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DeleteDiscoveryBot" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteEmailQueueItems">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DeleteEmailQueueItems" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteFieldPendingChange">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DeleteFieldPendingChange" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteQueuedDiscovery">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DeleteQueuedDiscovery" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteUser">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DeleteUser" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteUserGroup">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DeleteUserGroup" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DisconnectUserSessions">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#DisconnectUserSessions" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="EmailUsers">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#EmailUsers" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="EnableSubnetValidityChecks">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#EnableSubnetValidityChecks" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ForceUserPasswordChange">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#ForceUserPasswordChange" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetAuthenticationDetails">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetAuthenticationDetails" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetBackupFilelist">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetBackupFilelist" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetClientSettings">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetClientSettings" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetDatabaseBackupLog">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetDatabaseBackupLog" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetDatabaseRestoreLog">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetDatabaseRestoreLog" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetEasyIPUser">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetEasyIPUser" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetEasyIPUserGroups">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetEasyIPUserGroups" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetEasyIPUserGroupsAndUsers">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetEasyIPUserGroupsAndUsers" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetEasyIPUsers">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetEasyIPUsers" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetEmailQueueItems">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetEmailQueueItems" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetFieldPendingUpdates">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetFieldPendingUpdates" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetRestoredDatabaseFilelist">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetRestoredDatabaseFilelist" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetServerRestartDateTime">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetServerRestartDateTime" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetServerSettings">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetServerSettings" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetTableScript">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetTableScript" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetUserDisabledFunctions">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetUserDisabledFunctions" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetUserPrivileges">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetUserPrivileges" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetUserSessions">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetUserSessions" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetValidFieldDataTypes">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#GetValidFieldDataTypes" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="PurgeLogsAndBackups">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#PurgeLogsAndBackups" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ReloadSettings">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#ReloadSettings" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="RenameUserGroup">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#RenameUserGroup" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="RestartServer">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#RestartServer" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="RestoreDatabase">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#RestoreDatabase" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ScheduleDatabaseBackup">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#ScheduleDatabaseBackup" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetClientSettings">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetClientSettings" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetDiscoveryBotEnabled">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetDiscoveryBotEnabled" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetServerSettings">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetServerSettings" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetTableScript">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetTableScript" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetUserDisabledFunctions">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetUserDisabledFunctions" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetUserField">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetUserField" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetUserFieldDisplayOrder">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetUserFieldDisplayOrder" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetUserGroup">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetUserGroup" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetUserPassword">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetUserPassword" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetUserPrivileges">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetUserPrivileges" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetUserProperties">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#SetUserProperties" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="StartFullTextSearchIndexing">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#StartFullTextSearchIndexing" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UpdateDiscoveryBot">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#UpdateDiscoveryBot" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UpdateEmailQueueItems">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#UpdateEmailQueueItems" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UpdateMACAddressPrefixes">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#UpdateMACAddressPrefixes" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UserExists">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPAdmin#UserExists" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="EasyIPEditBinding" type="tns:EasyIPEdit">
        <xs:annotation>
            <xs:documentation>
                All editing functionality is included in this service.
            </xs:documentation>
        </xs:annotation>
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
        <wsdl:operation name="AddAddressesToSubnet">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddAddressesToSubnet" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddAddressRangeToSubnet">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddAddressRangeToSubnet" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddAllAddressesToSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddAllAddressesToSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddAllChildSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddAllChildSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddAutonomousNetwork">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddAutonomousNetwork" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddChildSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddChildSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddGroup">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddGroup" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddGroups">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddGroups" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddIPAddressLinkDescription">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddIPAddressLinkDescription" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddIPAddressLinks">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddIPAddressLinks" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="AddSubnetsToCorrectParents">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#AddSubnetsToCorrectParents" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ApplyDelta">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#ApplyDelta" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteAddressesFromSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#DeleteAddressesFromSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteAutonomousNetwork">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#DeleteAutonomousNetwork" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteGroupsOrSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#DeleteGroupsOrSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteIPAddressesById">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#DeleteIPAddressesById" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteIPAddressLinks">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#DeleteIPAddressLinks" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteSubnetChildren">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#DeleteSubnetChildren" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ImportFromXML">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#ImportFromXML" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="MoveGroupsAndSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#MoveGroupsAndSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="PasteGroupStructure">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#PasteGroupStructure" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="PasteSubnetStructure">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#PasteSubnetStructure" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="RemoveParentSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#RemoveParentSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ReparentChildSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#ReparentChildSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="Undo">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#Undo" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UpdateAutonomousNetwork">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#UpdateAutonomousNetwork" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UpdateGroup">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#UpdateGroup" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UpdateUserFields">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#UpdateUserFields" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CreateNextAvailableIPAddress">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#CreateNextAvailableIPAddress" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ReserveNextAvailableIPAddress">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#ReserveNextAvailableIPAddress" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SearchAndReplace">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#SearchAndReplace" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SetSubnetAttributes">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPEdit#SetSubnetAttributes" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="EasyIPToolsBinding" type="tns:EasyIPTools">
        <xs:annotation>
            <xs:documentation>
                The tools service provides various functionality such as export, missing subnet generation etc.
            </xs:documentation>
        </xs:annotation>
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
        <wsdl:operation name="CheckTemplateParameters">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#CheckTemplateParameters" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CompileScript">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#CompileScript" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CompileScript2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#CompileScript2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CopyTrees">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#CopyTrees" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ExecuteTemplate">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#ExecuteTemplate" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ExecuteTemplate2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#ExecuteTemplate2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ExportToCSV">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#ExportToCSV" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ExportToHTML">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#ExportToHTML" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ExportToXML">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#ExportToXML" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GenerateDefaultValues">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#GenerateDefaultValues" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GenerateDefaultValues2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#GenerateDefaultValues2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetMissingSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#GetMissingSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetTemplateScriptHelp">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPTools#GetTemplateScriptHelp" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="EasyIPDiscoveryBinding" type="tns:EasyIPDiscovery">
        <xs:annotation>
            <xs:documentation>
                This service deals with all aspects of host discoveries. Discovery bot functionality is also included here.
            </xs:documentation>
        </xs:annotation>
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
        <wsdl:operation name="GetDiscoverableSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#GetDiscoverableSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetHostDiscoverySubnetIPAddresses">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#GetHostDiscoverySubnetIPAddresses" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetHostDiscoveryIPAddresses">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#GetHostDiscoveryIPAddresses" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UpdateDiscoveryData">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#UpdateDiscoveryData" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="BotGetDiscoverableSubnets">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#BotGetDiscoverableSubnets" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="BotUpdateDiscoveryProgress">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#BotUpdateDiscoveryProgress" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="BotUpdateDiscoveryStatus">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#BotUpdateDiscoveryStatus" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="BotCancelDiscovery">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#BotCancelDiscovery" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="QueueDiscovery">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#QueueDiscovery" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetDiscoveryBots">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#GetDiscoveryBots" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetQueuedDiscoveries">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#GetQueuedDiscoveries" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="DeleteQueuedDiscovery">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#DeleteQueuedDiscovery" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetUserQueuedDiscoveries">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#GetUserQueuedDiscoveries" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetDiscoveryLog">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPDiscovery#GetDiscoveryLog" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="EasyIPReportBinding" type="tns:EasyIPReport">
        <xs:annotation>
            <xs:documentation>
                This service provides reporting functionality.
            </xs:documentation>
        </xs:annotation>
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
        <wsdl:operation name="ExecuteQuery">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#ExecuteQuery" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ExecuteQuery2">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#ExecuteQuery2" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ExportQuery">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#ExportQuery" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ExportQueryAndEmail">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#ExportQueryAndEmail" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GenerateReport">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#GenerateReport" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GenerateReportAndEmail">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#GenerateReportAndEmail" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetAllReportObjectNames">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#GetAllReportObjectNames" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetAvailableReportObjectNames">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#GetAvailableReportObjectNames" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetDefaultReportParams">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#GetDefaultReportParams" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetReport">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#GetReport" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetStoredProcedureParameters">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#GetStoredProcedureParameters" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetTableFieldInfo">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#GetTableFieldInfo" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetViewFieldInfo">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPReport#GetViewFieldInfo" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="EasyIPUtilsBinding" type="tns:EasyIPUtils">
        <xs:annotation>
            <xs:documentation>
                The Utils service exposes helper functionality.
            </xs:documentation>
        </xs:annotation>
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
        <wsdl:operation name="CheckMultipleIPVersions">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#CheckMultipleIPVersions" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetBroadcastAddress">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#GetBroadcastAddress" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetHighAddress">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#GetHighAddress" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetIPAddressList">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#GetIPAddressList" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetIPVers">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#GetIPVers" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetLowAddress">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#GetLowAddress" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetSubnet">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#GetSubnet" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="IsIPLowerThan">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#IsIPLowerThan" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="PadIPAddress">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#PadIPAddress" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UnPadIPAddress">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#UnPadIPAddress" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetMaskListValues">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#GetMaskListValues" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetSubnetRange">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#GetSubnetRange" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetSubnetInfoHTML">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#GetSubnetInfoHTML" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetIPInfo">
            <soap:operation soapAction="urn:EasyIPLibrary-EasyIPUtils#GetIPInfo" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="DataAbstractServiceBinding" type="tns:DataAbstractService">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
        <wsdl:operation name="GetSchema">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#GetSchema" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetData">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#GetData" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UpdateData">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#UpdateData" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ExecuteCommand">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#ExecuteCommand" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="ExecuteCommandEx">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#ExecuteCommandEx" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetTableSchema">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#GetTableSchema" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetCommandSchema">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#GetCommandSchema" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SQLGetData">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#SQLGetData" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SQLGetDataEx">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#SQLGetDataEx" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SQLExecuteCommand">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#SQLExecuteCommand" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SQLExecuteCommandEx">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#SQLExecuteCommandEx" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetDatasetScripts">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#GetDatasetScripts" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="RegisterForDataChangeNotification">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#RegisterForDataChangeNotification" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="UnregisterForDataChangeNotification">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#UnregisterForDataChangeNotification" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SimpleGetData">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#SimpleGetData" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="SimpleUpdateData">
            <soap:operation soapAction="urn:EasyIPLibrary-DataAbstractService#SimpleUpdateData" style="document" />
            <wsdl:input>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" />
                <soap:header message="tns:ROClientIDHeaderMessage" use="literal" part="ROClientID" />
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="EasyIPCore">
        <wsdl:port name="EasyIPCorePort" binding="tns:EasyIPCoreBinding">
            <soap:address location="http://44.193.24.117:8080/SOAP?service=EasyIPCore" />
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="LoginService">
        <wsdl:port name="LoginServicePort" binding="tns:LoginServiceBinding">
            <soap:address location="http://44.193.24.117:8080/SOAP?service=LoginService" />
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="EasyIPAdmin">
        <wsdl:port name="EasyIPAdminPort" binding="tns:EasyIPAdminBinding">
            <soap:address location="http://44.193.24.117:8080/SOAP?service=EasyIPAdmin" />
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="EasyIPEdit">
        <wsdl:port name="EasyIPEditPort" binding="tns:EasyIPEditBinding">
            <soap:address location="http://44.193.24.117:8080/SOAP?service=EasyIPEdit" />
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="EasyIPTools">
        <wsdl:port name="EasyIPToolsPort" binding="tns:EasyIPToolsBinding">
            <soap:address location="http://44.193.24.117:8080/SOAP?service=EasyIPTools" />
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="EasyIPDiscovery">
        <wsdl:port name="EasyIPDiscoveryPort" binding="tns:EasyIPDiscoveryBinding">
            <soap:address location="http://44.193.24.117:8080/SOAP?service=EasyIPDiscovery" />
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="EasyIPReport">
        <wsdl:port name="EasyIPReportPort" binding="tns:EasyIPReportBinding">
            <soap:address location="http://44.193.24.117:8080/SOAP?service=EasyIPReport" />
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="EasyIPUtils">
        <wsdl:port name="EasyIPUtilsPort" binding="tns:EasyIPUtilsBinding">
            <soap:address location="http://44.193.24.117:8080/SOAP?service=EasyIPUtils" />
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="DataAbstractService">
        <wsdl:port name="DataAbstractServicePort" binding="tns:DataAbstractServiceBinding">
            <soap:address location="http://44.193.24.117:8080/SOAP?service=DataAbstractService" />
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>
